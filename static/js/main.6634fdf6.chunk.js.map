{"version":3,"sources":["_redux/actions/const.js","_const/helpMsg.js","_utils/const.js","_utils/version_git.js","_redux/actions/dapp/app_actions.js","_redux/actions/dapp/drago_actions.js","_redux/actions/dapp/pools_actions.js","_redux/actions/dapp/vault_actions.js","_redux/actions/dapp/index.js","_redux/actions/exchange/orders_actions.js","_redux/actions/exchange/ui_actions.js","_redux/actions/exchange/relay_actions.js","_redux/actions/exchange/index.js","_atomic/molecules/elementNotificationsList.module.css","_redux/actions/actions_const/pools_const.js","_utils/exchange.js","_redux/actions/actions_const/orders_const.js","_redux/actions/actions_const/index.js","_redux/actions/endpoint_actions.js","_redux/actions/exchange_actions.js","_redux/actions/notifications_actions.js","_redux/actions/tokens_actions.js","_redux/actions/transactions.js","_redux/actions/index.js","_utils/accounts/updateAccounts.js","_utils/utils.js","Elements/elements.module.css","PoolsApi/src/contracts/abi/index.js","Elements/topBarMenu.module.css","index.module.css","ReactotronConfig.js","_redux/reducers/initialState/exchange_state.js","_redux/reducers/initialState/poolsList_state.js","_redux/reducers/initialState/app_state.js","_redux/reducers/initialState.js","_redux/reducers/eventful_reducer.js","_redux/reducers/endpoint_reducer.js","_redux/reducers/dapp/pools_reducer.js","_redux/reducers/dapp/app_reducer.js","_redux/reducers/exchange/order_reducer.js","_redux/reducers/exchange/ui_reducer.js","_redux/reducers/exchange_reducer.js","_redux/reducers/notifications_reducer.js","_redux/reducers/transactions_reducer.js","_redux/reducers/users_reducer.js","_utils/exchangeConnector.js","_redux/reducers/root_reducer.js","_utils/interfaces.js","_redux/epics/endpoint/endpoint_epics.js","_redux/epics/eventful_epics.js","_utils/pools/getTokensBalances.js","_utils/exchange/src/const.js","_utils/exchange/src/format.js","_utils/exchange/src/exchanges.js","_utils/exchange/src/exchangesWs.js","_utils/exchange/src/index.js","_redux/epics/token_epics.js","_redux/epics/exchanges/ercdex.js","_redux/epics/exchanges/ethfinex_epics.js","_const/errors.js","_redux/epics/exchanges/orders_epics/createOrderEthfinexV0_epic.js","_redux/epics/exchanges/ethfinex_epics/exchangeEvents_epic.js","_redux/epics/exchanges/index.js","_redux/epics/exchanges/ethfinex_epics/getCandlesSingleData_epic.js","_redux/epics/exchanges/relay_epics/connectToRelayEfx_epic.js","_redux/epics/exchange_epics.js","_redux/epics/root_epics.js","_redux/epics/endpoint/checkMetaMaskIsUnlocked_epic.js","_redux/epics/endpoint/monitorEventful_epic.js","_redux/epics/endpoint/connectedToNode_epic.js","_redux/epics/pools/getPoolDetails_epic.js","_redux/epics/pools/getTokensBalances_epic.js","_redux/epics/pools/getPoolsGroupDetails_epic.js","Elements/elementAppLoading.js","_utils/endpoint.js","Application/whoops404.js","App.js","index.js","_redux/middlewares/relayActions_middleware.js","_redux/middlewares/notifications_middleware.js","_redux/middlewares/poolCalculateValue_middleware.js","_redux/middlewares/poolsCaching_middleware.js","_utils/format.js","_utils/misc/dateFromTimeStampHuman.js","_utils/blockChain/logToEvent.js","_utils/blockChain/index.js","_atomic/atoms/sectionHeader.module.css","PoolsApi/src/pools/registry.js","_redux/actions/actions_const/relay_const.js","_redux/actions/actions_const/app_const.js","PoolsApi/src/utils/utils.js","_utils/notificationWrapper.js","PoolsApi/src/utils/const.js","_redux/actions/actions_const/ui_const.js","_utils/web3Wrapper/src/utils/const.js","_utils/web3Wrapper/src/observables/exchangeEfx.js","_utils/web3Wrapper/src/observables/eventful.js","_utils/web3Wrapper/src/observables/newBlock.js","_utils/web3Wrapper/src/observables/nodeStatus.js","_utils/web3Wrapper/src/web3Wrapper.js","_atomic/molecules/elementNotification.js","Elements/elementAppLoading.module.css","_atomic/molecules/elementTopBarAccountStatus.module.css","_atomic/atoms/sectionHeader.js","Application/application.module.css","PoolsApi/src/utils/index.js","PoolsApi/src/pools/Parity/dragoEventful.js","PoolsApi/src/pools/Parity/dragoFactory.js","PoolsApi/src/pools/Web3/dragoFactory.js","PoolsApi/src/pools/Parity/drago.js","PoolsApi/src/pools/Parity/dragoRegistry.js","PoolsApi/src/pools/Web3/dragoRegistry.js","PoolsApi/src/pools/Parity/ether.js","PoolsApi/src/pools/Web3/ether.js","PoolsApi/src/pools/Parity/ethusd.js","PoolsApi/src/pools/Web3/fundProxy.js","PoolsApi/src/pools/Parity/exchange.js","PoolsApi/src/pools/Parity/rigoTokenFaucet.js","PoolsApi/src/pools/Web3/rigoTokenFaucet.js","PoolsApi/src/pools/Parity/rigoToken.js","PoolsApi/src/pools/Web3/rigoToken.js","PoolsApi/src/pools/Parity/tokenWrapper.js","PoolsApi/src/pools/Web3/tokenWrapper.js","PoolsApi/src/pools/Parity/vaultEventful.js","PoolsApi/src/pools/Parity/vaultFactory.js","PoolsApi/src/pools/Web3/vaultFactory.js","PoolsApi/src/pools/Parity/vault.js","PoolsApi/src/pools/Web3/vault.js","PoolsApi/src/pools/index.js","PoolsApi/src/pools/contracts.js","PoolsApi/src/api.js","PoolsApi/src/index.js","_atomic/molecules/elementNotification.module.css","_atomic/molecules/topMenuLinkLong.module.css","Elements/elementNotConnected.module.css","_atomic/atoms/tokenAvatar.js","_atomic/molecules/accountTopBarSummary.js","_atomic/molecules/elementNotificationsList.js","_atomic/molecules/elementTopBarAccountStatus.js","_atomic/atoms/topMenuButtonLong.js","_atomic/molecules/topMenuLinkLong.js","Elements/topBarMenuLinksLeft.js","Elements/topBarMenuLinksRight.js","Elements/topBarMenu.js","Elements/elementNotConnected.js","_atomic/atoms/helpIcon.js","_utils/misc/getFromBlock.js","_utils/misc/getWeb3.js","_utils/misc/index.js","_utils/web3Wrapper/src/index.js","PoolsApi/src/pools/Web3/dragoEventful.js","PoolsApi/src/pools/Web3/drago.js","PoolsApi/src/pools/Web3/vaultEventful.js","_utils/web3Wrapper/src/utils/reconnectingWsProvider.js","_utils/palete.js","_atomic/atoms/helpIcon.module.css","App.module.css","_utils/tokens.js","_atomic/molecules/accountTopBarSummary.module.css","_utils/blockChain/getBlockChunks.js","_utils/pools/getTransactionsSingleDrago.js","_utils/pools/getTransactionsDragoOptV2.js","_utils/pools/getDragoDetails.js","_utils/pools/getVaultDetails.js","_utils/pools/getTransactionsSingleVault.js","_utils/pools/getTransactionsVaultOptV2.js","_utils/pools/getTokenWrapperLockTime.js","_utils/pools/getDragoLiquidityAndTokenBalances.js","_utils/pools/filterPools.js","_utils/pools/getPoolsGroupDetails.js","_utils/pools/index.js"],"names":["__webpack_require__","d","__webpack_exports__","IS_MANAGER","ADD_TRANSACTION","UPDATE_TRANSACTIONS","DRAGO_HOLDER_TRANSACTIONS_UPDATE","DRAGO_MANAGER_TRANSACTIONS_UPDATE","VAULT_HOLDER_TRANSACTIONS_UPDATE","VAULT_MANAGER_TRANSACTIONS_UPDATE","DRAGO_SELECTED_DETAILS_UPDATE","DRAGO_SELECTED_DETAILS_RESET","SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT","SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT","VAULT_SELECTED_DETAILS_UPDATE","VAULT_SELECTED_DETAILS_RESET","INIT_NOTIFICATION","QUEUE_ERROR_NOTIFICATION","QUEUE_WARNING_NOTIFICATION","QUEUE_ACCOUNT_NOTIFICATION","GET_TOKEN_BALANCES_DRAGO","CHECK_METAMASK_IS_UNLOCKED","GET_ACCOUNTS_TRANSACTIONS","MONITOR_ACCOUNTS_START","MONITOR_ACCOUNTS_STOP","CHECK_APP_IS_CONNECTED","ATTACH_INTERFACE","UPDATE_INTERFACE","UPDATE_AVAILABLE_FUNDS","UPDATE_AVAILABLE_RELAYS","UPDATE_SELECTED_RELAY","UPDATE_SELECTED_EXCHANGE","FETCH_ACCOUNT_ORDERS_START","UPDATE_FUND_ORDERS","FETCH_ACCOUNT_ORDERS_STOP","CHART_MARKET_DATA_UPDATE","FETCH_CANDLES_DATA_SINGLE_START","FETCH_CANDLES_DATA_SINGLE_STOP","FETCH_CANDLES_DATA_PORTFOLIO_START","FETCH_CANDLES_DATA_PORTFOLIO_STOP","FETCH_HISTORY_TRANSACTION_LOGS","UPDATE_HISTORY_TRANSACTION_LOGS","FETCH_ASSETS_PRICE_DATA","CHART_MARKET_DATA_ADD_DATAPOINT","CHART_MARKET_DATA_INIT","TRADES_HISTORY_UPDATE","TRADES_HISTORY_RESET","MONITOR_EXCHANGE_EVENTS_START","MONITOR_EXCHANGE_EVENTS_STOP","UPDATE_ELEMENT_LOADING","SET_MAKER_ADDRESS","UPDATE_ACCOUNT_SIGNATURE","UPDATE_SELECTED_FUND","UPDATE_TRADE_TOKENS_PAIR","ORDERBOOK_UPDATE","ORDERBOOK_INIT","SET_ORDERBOOK_AGGREGATE_ORDERS","RELAY_OPEN_WEBSOCKET_TICKER","RELAY_OPEN_WEBSOCKET_BOOK","RELAY_MSG_FROM_WEBSOCKET","RELAY_CLOSE_WEBSOCKET","RELAY_GET_ORDERS","SET_TOKEN_ALLOWANCE","TOKEN_PRICE_TICKERS_FETCH_START","TOKENS_TICKERS_UPDATE","TOKEN_PRICE_TICKERS_FETCH_STOP","UPDATE_AVAILABLE_TRADE_TOKENS_PAIRS","UPDATE_LIQUIDITY_AND_TOKENS_BALANCE","UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_RESET","UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_START","UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_STOP","UPDATE_CURRENT_TOKEN_PRICE","RESET_TOKEN_PRICE","CUSTOM_EXCHANGE_ACTIONS","_actions_const__WEBPACK_IMPORTED_MODULE_0__","ACTION_","H001","UNLIMITED_ALLOWANCE_IN_BASE_UNITS","DEBUGGING","METAMASK","HTTP_EVENT_FETCHING","APP","DS","DRG_ISIN","PROD","WS","RELAYS","DEFAULT_RELAY","INFURA","RIGOBLOCK","LOCAL","KOVAN","ROPSTEN","MAINNET","DEFAULT_ENDPOINT","DEFAULT_NETWORK_NAME","NETWORK_OK","NETWORK_WARNING","ENDPOINTS","NETWORKS","EXCHANGES","defaultDragoDetails","poolStyle","MSG_NO_SUPPORTED_NETWORK","MSG_NETWORK_STATUS_OK","MSG_NETWORK_STATUS_ERROR","THEME_COLOR","helpMsg_namespaceObject","tokens","BigNumber","pow","minus","initAccountsTransactionsInEpic","DUMB_ACTION","type","payload","ERCdEX","name","icon","supported","initOrdeBookAggregated","onlyAggregateOrderbook","defaultTokensPair","baseTokenSymbol","quoteTokenSymbol","supportedNetworks","isTokenWrapper","meta","Radarrelay","Ethfinex","kovan","ropsten","mainnet","infura","https","dev","prod","wss","rigoblock","local","id","etherscan","zeroExExchangeContractAddress","fundProxyContractAddress","tokenTransferProxy","exchangeAddress","feeRecipientAddress","networkId","taker","Rigoblock","address","symbol","addressOwner","addressGroup","buyPrice","sellPrice","created","totalSupply","totalSupplyBaseUnits","dragoETHBalance","dragoETHBalanceWei","dragoWETHBalance","balanceDRG","drago","color","vault","updateAppStatus","createAction","TYPE_","updateAppConfig","getTokenBalancesDrago","dragoDetails","relay","getAssetsPriceData","assets","quoteToken","updateDragoSelectedDetails","data","arguments","length","undefined","updateCache","resetDragoSelectedDetails","updateDragoTransactionsHolder","results","updateDragoTransactionsManager","getPoolsList","options","topics","fromBlock","toBlock","updatePoolsList","readItemPoolsList","writeItemPoolsList","_ref","_ref2","getPoolsSingleTransactions","poolAddress","accounts","getPoolsSingleDetails","poolId","poolType","wallet","getPoolsGroupDetails","poolsIdArray","updateVaultSelectedDetails","resetVaultSelectedDetails","updateVaultTransactionsHolder","updateVaultTransactionsManager","pools_actions_namespaceObject","drago_actions_namespaceObject","vault_actions_namespaceObject","app_actions_namespaceObject","createOrder","orderSide","protocol","updateOrder","cancelOrder","updateUiPanelProperties","connectRelay","tokensPair","getRelayConfig","module","exports","notifications","notificationsPanel","show","noShow","progressBar","noRecentTransactions","post","width500","width470","width110","width250","line","circle","rect","pulse","wrapper","height20","noTransacationsMsg","POOLS_LIST_GET","POOLS_LIST_UPDATE","POOLS_LIST_ITEM_READ","POOLS_LIST_ITEM_WRITE","POOLS_SINGLE_TRANSACTIONS_GET","POOLS_SINGLE_DETAILS_GET","POOLS_GROUP_DETAILS_GET","MetamaskSubprovider","require","SignatureType","setAllowaceOnExchangeThroughDrago","selectedFund","token","selectedExchange","amount","poolApi","PoolApi","window","web3","contract","init","details","console","log","tokenTransferProxyAddress","setInfiniteAllowaceOnExchange","managerAccount","getOrdersFromRelayERCdEX","maker","baseTokenAddress","quoteTokenAddress","Error","method","url","concat","qs","makerTokenAddress","takerTokenAddress","json","rp","getTradeHistoryLogsFromRelayERCdEX","token_address","taker_token_address","maker_token_address","getHistoricalPricesDataFromERCdEX","startDate","body","then","historical","catch","error","formatOrders","orders","orderType","orderPrice","orderAmount","remainingAmount","Web3","currentProvider","map","order","takerAssetAmount","div","makerAssetAmount","toFixed","utils","fromWei","remainingTakerTokenAmount","orderHash","orderHashUtils","getOrderHashHex","dateCreated","signOrder","Object","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_home_gabriele_webapp_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","mark","_callee","walletAddress","baseTokenDecimals","quoteTokenDecimals","fee_rate","tokensAmounts","orderToBeSigned","providerEngine","web3Wrapper","signer","signedOrder","vrsSignature","walletSignature","typedSignedOrder","orderHashHex","wrap","_context","prev","next","selectedTokensPair","baseToken","decimals","t0","orderFillAmount","times","Web3Wrapper","toBaseUnitAmount","abrupt","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","isMetaMask","ContractWrappers","getAvailableAddressesAsync","sent","signatureUtils","ecSignOrderAsync","signature","slice","convertToSignatureWithType","Wallet","t1","isValidWalletSignatureAsync","makerAddress","t2","call","stop","this","_x","_x2","_x3","apply","submitOrderToRelayEFX","_callee2","efxOrder","relayerApiUrl","_context2","uri","_x4","_x5","cancelOrderFromRelayEFX","_ref3","_callee3","orderId","_context3","_x6","_x7","_x8","getTokenAllowance","_ref6","_callee6","ownerAddress","ZeroExConfig","zeroEx","_context6","getProxyAllowanceAsync","_x12","_x13","_x14","setTokenAllowance","_ref7","_callee7","tokenAddress","spenderAddress","_context7","setUnlimitedAllowanceAsync","_x15","_x16","_x17","_x18","fillOrderToExchangeViaProxy","_ref11","_callee11","orderAddresses","orderValues","v","r","s","_context11","takerAddress","makerAssetData","takerAssetData","makerFee","takerFee","expirationTimeSeconds","salt","ecSignature","toString","fillOrderOnZeroExExchange","_x29","_x30","_x31","_x32","relay_const","pools_const","endpoint","attachInterface","checkMetaMaskIsUnlocked","checkIsConnectedToNode","getAccountsTransactions","monitorAccountsStart","monitorAccountsStop","updateInterface","exchange","resetTokenPrice","updateTokenPrice","price","current","updateTradesHistory","resetTradesHistory","updateSelectedFund","monitorEventsStart","fund","networkInfo","monitorEventsStop","cancelSelectedOrder","getAccountOrdersStart","account","getAccountOrdersStop","fetchCandleDataSingleStart","fetchCandleDataSingleStop","getPortfolioChartDataStart","getPortfolioChartDataStop","getTradeHistoryLogs","relayCloseWs","relayGetOrders","aggregated","relayOpenWsTicker","relayOpenWsBook","setAggregateOrders","isInputChecked","updateSelectedRelay","updateSelectedExchange","updateSelectedTradeTokensPair","tradeTokensPair","updateAvailableTradeTokensPairs","updateLiquidityAndTokenBalances","task","dragoAddress","updateAvailableFunds","updateAvailableRelays","updateAccountSignature","initNotificationsSystemAction","notificationSystem","queueWarningNotification","message","queueErrorNotification","priceTickersStart","assetsList","priceTickersStop","transactions","addTransactionToQueueAction","transactionId","transactionDetails","Actions","app","pools","users","isManagerAction","isManager","updateAccounts","asyncToGenerator","regenerator_default","api","blockNumber","newEndpoint","prevBlockNumber","prevNonce","newBlockNumber","fetchTransactions","prevAccounts","newNonce","grgQueries","ethQueries","ethBalances","grgBalances","_newEndpoint","Array","number","gte","eth","getTransactionCount","err","warn","rigotoken","balanceOf","getBalance","Promise","all","forEach","index","newEthBalance","prevEthBalance","ethBalanceWei","eq","Number","secondaryText","balDifference","balDifString","gt","dateFromTimeStamp","Date","Math","abs","accountsBalanceError","push","primaryText","eventType","newgrgBalance","prevGrgBalance","grgBalanceWei","loading","networkError","networkStatus","grgBalance","reduce","total","balance","plus","ethBalance","newAccount","objectSpread","NotificationAlert","react_default","createElement","MuiThemeProvider_default","elementNotification","eventStatus","txHash","Component","blockChunks","getBlockChunks","filterPools","sign","toSign","personal","generateMockAssets","network","mockAssets","MOCK_ERC20_TOKENS","key","ETH","tokenBalance","floor","random","wrapperBalance","totalBalance","balances","wrappers","ethfinexTickersToArray","assetArray","includes","symbolTicker","formatToWei","toWei","getTokenSymbolForRelay","relayName","notificationError","notificationEngine","notification","level","messageFirstLine","split","addNotification","title","toUpperCase","position","autoDismiss","notificationAccount","comp","children","render","availableTradeTokensPair","tradeTokensPairs","selectedRelayName","availableTokens","_loop","keys","exchanges","networks","availableRelays","relays","calculatePortfolioValue","dragoAssetsList","assetsPrices","asset","priceEth","value","toUnitAmount","calculatePieChartPortfolioValue","labels","datasets","backgroundColor","palette","hex","timestamp","day","getDate","month","getMonth","addZero","i","getFullYear","getHours","getMinutes","getSeconds","dateFromTimeStampHuman","updateTransactionsQueue","recentTransactions","checkTransaction","newRecentTransactions","Map","status","parityId","receipt","parity","checkRequest","hash","getTransactionByHash","blockHash","getTransactionsVaultOptV2","getTransactionsDragoOptV2","getTransactionsSingleDrago","getTransactionsSingleVault","getPoolDetailsFromId","dragoId","getInstance","dragoregistry","fromId","getDragoDetails","getVaultDetails","getTokenWrapperLockTime","getDragoLiquidity","getDragoLiquidityAndTokenBalances","customRelayAction","action","logger","pub","oldConsoleLog","objA","objB","keysA","keysB","bHasOwnProperty","hasOwnProperty","bind","path","pathname","location","pop","array","padding","padStart","isinArray","join","networkIconClosed","networkIconOpen","maincontainer","leftDrawer","containerleftDrawer","menu","activeLink","selected","menuItemPrimaryText","menuAccountType","responsiveLinks","_v2_drago_v2_json__WEBPACK_IMPORTED_MODULE_0__","_v2_dragoEventful_v2_json__WEBPACK_IMPORTED_MODULE_1__","_v2_dragoFactory_v2_json__WEBPACK_IMPORTED_MODULE_2__","_v2_dragoRegistry_v2_json__WEBPACK_IMPORTED_MODULE_3__","_v2_erc20_json__WEBPACK_IMPORTED_MODULE_4__","_v2_ethusd_json__WEBPACK_IMPORTED_MODULE_5__","_v2_exchange_json__WEBPACK_IMPORTED_MODULE_6__","_v2_fundProxy_json__WEBPACK_IMPORTED_MODULE_7__","_v2_getMultiPoolsData_json__WEBPACK_IMPORTED_MODULE_8__","_v2_getMultipleBalances_json__WEBPACK_IMPORTED_MODULE_9__","_v2_parityRegister_json__WEBPACK_IMPORTED_MODULE_10__","_v2_rigoToken_v2_json__WEBPACK_IMPORTED_MODULE_11__","_v2_rigoTokenFaucet_v2_json__WEBPACK_IMPORTED_MODULE_12__","_v2_tokenWrapper_v2_json__WEBPACK_IMPORTED_MODULE_13__","_v2_vault_v2_json__WEBPACK_IMPORTED_MODULE_14__","_v2_vaultEventful_v2_json__WEBPACK_IMPORTED_MODULE_15__","_v2_vaultFactory_v2_json__WEBPACK_IMPORTED_MODULE_16__","_v2_weth_json__WEBPACK_IMPORTED_MODULE_17__","_v2_zeroExExchange_json__WEBPACK_IMPORTED_MODULE_18__","linkItem","trigger","menuToggle","burgerContainer","checked-anim","beta","not-checked-anim","header","root","reactotron","NETWORK_NAME","BASE_TOKEN","ERC20_TOKENS","QUOTE_TOKEN","USDT","tradesHistory","ui","panels","relayBox","expanded","disabled","disabledMsg","orderBox","ordersHistoryBox","chartBox","isLoading","isError","errorMsg","reduxRetryAction","liquidity","orderSummary","marketBox","availableFunds","chartData","WETH","ZRX","balanceWrapper","accountSignature","nonce","valid","selectedRelay","baseTokenAllowance","quoteTokenAllowance","baseTokenLockWrapExpire","quoteTokenLockWrapExpire","ticker","previous","variation","availableTradeTokensPairs","TRADE_TOKENS_PAIRS","fundOrders","open","history","cancelled","executed","selectedOrder","orderAmountError","orderPriceError","orderMaxAmount","takerOrder","orderBookAggregated","orderBook","asks","bids","spread","prices","poolsList","list","lastFetchRange","chunk","progress","startBlock","lastBlock","isConnected","isSyncing","syncStatus","appLoading","retryTimeInterval","connectionRetries","lastBlockNumberUpdate","accountsAddressHash","errorEventfulSubscription","config","isMock","transactionsDrawerOpen","initialState","queue","pending","transactionsDrago","holder","logs","manager","selectedDrago","values","portfolioValue","totalAssetsValue","estimatedPrice","assetsCharts","transactionsVault","selectedVault","endpointInfo","warnMsg","isMetaMaskNetworkCorrect","isMetaMaskLocked","lastMetaMaskUpdateTime","openWalletSetup","user","eventfulDragoReducer","state","portfolio","newDetails","u","newTicker","oldData","epoch","defineProperty","eventfulVaultReducer","endpointsReducer","poolsListReducer","handleActions","_handleActions","newList","cachedDetails","cachedTransactions","cachedAssets","cachedAssetsCharts","cachedValues","_action$payload","assign","toConsumableArray","appReducer","app_reducer_handleActions","newConfig","ordersReducer","order_reducer_handleActions","uiReducer","newUi","exchangeReducer","newChartData","elementLoading","newOrderBook","webSocket","currentPrice","previousPrice","dividedBy","multipliedBy","_len","functions","_key","currentValue","currentFunction","pipe","notificationsReducer","engine","transactionsReducer","pendingTransactions","newTransaction","oldTransaction","get","updatedTransaction","set","usersReducer","instance","Reducers","rootReducer","combineReducers","Interfaces","_this","classCallCheck","_api","_error","getAccountsMetamask","parityNetworkId","accountsMetaMask","metaMaskNetworkId","currentState","stateUpdate","_stateUpdate","poolsApi","_accountsMetaMask","_parityNetworkId","getAccounts","net","getId","_success","PoolsApi","t3","source","t4","attachInterfaceInfuraV2","allAccounts","result","_stateUpdate2","info","attachInterfaceRigoBlockV2","accountsParity","_stateUpdate3","nodeKind","availability","getAccountsParity","getBlockNumber","detachInterface","subscriptionData","_isConnected","_this2","arrayPromises","accountsInfo","k","formatFromWei","attachInterfacePromise","selectedEndpointName","blockchain","getPoolsSingleTransactions$","from","getTokensBalances","allowedTokens","dragoAssets","tokenAddresses","tokenWrappersAddresses","tokenBalances","tokenWrappersBalances","balanceIndex","wrapperAddess","isAddress","getMultiBalancesAndAddressesFromAddresses","slicedToArray","toLowerCase","indexOf","NETWORKS_ID","1","3","42","SupportedExchanges","tickersTokenPairs","http","ws","formatOrdersFromAggregateERCdEX","toBN","volume","formatOrdersFromERCdEX","ZeroEx","formatOrdersFromAggregateEthfinex","calculateSpread","asksOrders","bidsOrders","tickers","_tickers","tickersList","last","priceUsd","substr","aggregatedOrders","_aggregatedOrders","buys","priceLevels","sells","reverse","_orders","accountOrders","date","moment","created_at","yesterday","subtract","endOf","isAfter","format","active","historicalPricesData","entry","getAggregatedOrders","getOrders","getHistoricalPricesData","getTickers","symbols","getAccountOrders","getAccountHistory","wsOptions","minReconnectionDelay","construct","ReconnectingWebSocket","getTicker","websocket","addEventListener","send","Exchange","transport","returnResults","query","formatFunction","input","_transport","_exchange","_call","_network","FORMAT","submbitOrder","_exchangeProperties","ExchangeConnectorWrapper","ExchangeConnector","getNewInstance","getTickers$","Observable","create","observer","ethfinex","getExchange","subscribedSymbols","symbolsArray","unsubPromise","raw","msgWs","event","chanId","isArray","tick","unsub","complete","getTickersWs$","timer","exhaustMap","initRelayWebSocketTickerEpic","action$","ofType","mergeMap","onmessage","msg","onclose","onerror","close","takeUntil","filter","closeAction","tap","orderBookEpic","state$","bufferTime","bufferCount","val","switchMap","of","tickerOutput","JSON","parse","channel","keyField","item","arrayToObject","updateCurrentTokenPrice","getCandlesSingleDataEpic","getAccountOrdersFromRelay$","getAccountOrdersEpic","zip","getAssetsPricesDataFromERCdEX$","catchError","getAssetsPricesDataFromERCdEXEpic","forkJoin","observableArray","property","now","toISOString","arr","reconnectingWebsocketBook$","seq","pair","BOOK","psnap","mcnt","unsubscribePromise","precision","frequency","len","_","each","pp","side","cnt","stringify","cseq","found","bid","ask","sbook","sort","b","utc","checksum","csdata","bids_keys","asks_keys","cs_str","CRC","str","ERROR_TEXT","initRelayWebSocketBookEpic","auditTime","element","orderCount","_action$payload2","websocketTicker$","_action$payload3","createOrderEthfinexV0Epic","orderExpirationTime","adjustExpirationTime","lockExpirationTime","unix","_state$$value$exchang","add","assetDataUtils","encodeERC20AssetData","generatePseudoRandomSalt","senderAddress","newMakerOrderV0","finalize","EthfinexEpics","monitorExchangeEventsEpic","efxEchangeContract","Contract","exchangeEfxV0Abi","defer","chunks","eventsPromises","getPastEvents","res","events","getPastExchangeEvents$","ob","exchangeEfxV0$","returnValues","ethfinexEventful$","trades","networkName","quoteTokensWrappers","baseTokensWrappers","tokensSymbols","trade","makerAmount","takerAmount","transaction","transactionHash","makerToken","takerToken","makerTokenSymbol","filledMakerTokenAmount","filledTakerTokenAmount","has","makerDecimals","takerDecimals","processTradesHistory","retryWhen","error$","race","getCandles","timeframe","candlesSingleWebsocket$","candles","low","high","updateSingleCandles","connectToRelayEpic","tsYesterday","updateLiquidityAndTokenBalances$","fundAddress","baseTokenBalance","baseTokenWrapperBalance","quoteTokenBalance","quoteTokenWrapperBalance","ERCdEX_Epics","Tokens_Epics","tokenList","ETHW","observables","merge","oneDayAgo","startOf","valueOf","convertToETH","nowPrice","toDate","unshift","oneDayAgoPrice","updateGroupCandles","Ethfinex_Epics","rootEpic","epics","isolatedEpics","epic","e","combineEpics","oldAccounts","newAccounts","metaMaskAccountAddress","web3Metamask","findIndex","timeout","distinctUntilChanged","shallowequal","optionsManager","supply","limit","trader","optionsHolder","sha3_512","arrayObservables","newBlock$","newBlock","currentEndpoint","monitorAccounts$","accountsUpdate","observablesArray","subscription","eventful$","subscribe","unsubscribe","monitorEventful$","flatMap","nodeStatus$","currentAccountsAddressHash","delay","_state$$value$poolsLi","getWeb3","getFromBlock","logToEvent","substring","string","String","fromCharCode","parseInt","hexToString","vaultId","vaulteventful","dragoeventful","toNumber","optionsVault","optionsDrago","vaultPromise","dragoPromise","_ref4","logsVault","logsDrago","listId","hexSignature","VaultCreated","DragoCreated","getAllLogs","pool","getPoolsChunkedEvents$","_state$$value$endpoin","poolDetails","charAt","dateOnly","t5","getPoolsSingleDetails$","actionsArray","getTokensBalances$","ordered","getPoolsGroupDetails$","poolsArray","_pool","owner","feeCollector","dragoDao","ratio","transactionFee","minPeriod","addressDao","formatEth","formatCoins","getOrderBookFromRelay$","skipWhile","muiTheme","getMuiTheme","primary1Color","appBar","height","fontSize","AppLoading","renderNotConnected","className","styles","divFullHeight","react_flexbox_grid_lib","loadingDiv","xs","style","textAlign","src","logoImg","alt","LinearProgress_default","mode","Colors","Endpoint","_checkLocal","_checkWeb3","_rb","connect","_endpoint","transportWs","_wss","transportHttp","_https","_timeout","_prod","_onWs","fontFamily","Whoops404","props","possibleConstructorReturn","getPrototypeOf","handleToggleNotifications","setState","notificationsOpen","_this$props$app","fluid","topBarMenu","handleTopBarSelectAccountType","classNames","content","elementNotConnected","childContextTypes","PropTypes","object","contextTypes","isRequired","ApplicationHomePage","lazy","ApplicationConfigPage","ApplicationDragoPage","ApplicationExchangePage","ApplicationHomeEfxPage","ApplicationVaultPage","ReactGA","initialize","pageview","search","createHashHistory","App","_Component","scrollPosition","tdIsConnected","tdIsMetaMaskUnlocked","initNotificationSystem","_notificationSystem","React","createRef","notificationWrapper","callback","componentDidMount","dispatch","run","inherits","createClass","nextProps","nextState","propsUpdate","shallowEqual","errorInfo","Sentry","scope","setExtra","appContainer","NotificationSystem_default","ref","NotificationItem","DefaultStyle","margin","border","borderColor","WebkitBoxShadow","MozBoxShadow","boxShadow","marginBottom","borderTop","warning","Title","fontWeight","Dismiss","Router","elementAppLoading","react","fallback","Switch","Route","exact","Redirect","to","whoops404","noop","epicMiddleware","createEpicMiddleware","middlewares","store","getState","serializeError","isFinite","cachePayload","saveSubsetFilterEndpoint","createFilter","saveSubsetFilterApp","saveSubsetFilterTransactionsDrago","persistConfig","storage","stateReconciler","autoMergeLevel2","whitelist","transforms","persistedReducer","persistReducer","enhancer","composeEnhancers","compose","applyMiddleware","dsn","environment","process","release","GIT_HASH","createStore","persistor","persistStore","ReactDOM","es","integration_react","src_App","document","getElementById","formatPriceOrderBook","formatPrice","formatPriceTrades","bignumber_js__WEBPACK_IMPORTED_MODULE_0__","bignumber_js__WEBPACK_IMPORTED_MODULE_0___default","n","DIVISOR","aUnit","unit","baseUnitAmount","decimalPlaces","adjusted","toFormat","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","_format__WEBPACK_IMPORTED_MODULE_0__","bignumber_js__WEBPACK_IMPORTED_MODULE_1__","bignumber_js__WEBPACK_IMPORTED_MODULE_1___default","web3__WEBPACK_IMPORTED_MODULE_2__","web3__WEBPACK_IMPORTED_MODULE_2___default","dragoSymbolRegistry","ethvalue","sha3","logIndex","transactionIndex","drgvalue","revenue","params","_getBlockChunks__WEBPACK_IMPORTED_MODULE_0__","container","actionButtonContainer","help","Registry","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_getParityRegistryContractAddress","PARITY_REGISTRY_ADDRESSES","_getContractAddressFromRegister","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_gabriele_webapp_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","contractName","parityRegistryContractAddress","registryContract","version","abis","methods","getAddress","abi","isMetamask","newContract","_constunctorName","constructor","_isWeb3","_isParity","_parity","_isInfura","provider","_url","RELAY_CONNECT","RELAY_GET_CONFIG","APP_STATUS_UPDATE","APP_CONFIG_UPDATE","notificatioInstance","MULTI_BALANCE_CONTRACT_ADDRESS","MULTI_POOL_DATA_CONTRACT_ADDRESS","RIGOTOKEN_ADDRESSES","WETH_ADDRESSES","ZRX_ADDRESSES","EXCHANGE","ETHUSD","DRAGOREGISTRY","DRAGOEVENTFUL","DRAGOFACTORY","VAULTEVENTFUL","VAULTFACTORY","foundation","EXCHANGE_PANEL_UI_PROPERTIES_UPDATE","_PARITY_REGISTRY_ADDR","RB_API","_RB_API","EFX_EXCHANGE_CONTRACT","_EFX_EXCHANGE_CONTRAC","_EFX_HOT_WALLET","CONSTANTS","retryStrategy","latestBlock","allEvents","eventful","parityRegistry","parityregisterAbi","getEventful$","eventfulContract","dragoEventfulAddress","vaultEventfulAddress","dragoeventfulAbi","vaulteventfulAbi","dragoEventful","vaultEventful","etherscanApiUrl","subScription$","source$","fetch","response","defaultStatus","Web3WsProvider","syncPromise","timeoutPromise","nodeStatus","resolve","reject","setTimeout","transactionStyle","borderRadius","authorization","innerDiv","ElementNotification","removeNotification","transactionKey","etherscanLink","react__WEBPACK_IMPORTED_MODULE_14___default","href","rel","target","transactionMenu","etherScanDisabled","material_ui_IconMenu__WEBPACK_IMPORTED_MODULE_10___default","desktop","iconButtonElement","material_ui_IconButton__WEBPACK_IMPORTED_MODULE_9___default","material_ui_svg_icons_navigation_more_vert__WEBPACK_IMPORTED_MODULE_13___default","anchorOrigin","horizontal","vertical","targetOrigin","cursor","material_ui_MenuItem__WEBPACK_IMPORTED_MODULE_12___default","leftIcon","material_ui_svg_icons_action_search__WEBPACK_IMPORTED_MODULE_15___default","containerElement","material_ui_svg_icons_navigation_close__WEBPACK_IMPORTED_MODULE_8___default","onClick","_this$props","material_ui_List__WEBPACK_IMPORTED_MODULE_6__","leftAvatar","material_ui_Avatar__WEBPACK_IMPORTED_MODULE_7___default","secondaryTextLines","material_ui_LinearProgress__WEBPACK_IMPORTED_MODULE_11___default","defaultProps","warningText","titleRBModal","titleRBHeader","titleRBHeaderContainer","titlePrimaryText","titleSecondaryText","modalHeader","SectionHeader","helpIconStyle","width","react__WEBPACK_IMPORTED_MODULE_8___default","containerStyle","actionButton","fundType","textStyle","_atomic_atoms_helpIcon__WEBPACK_IMPORTED_MODULE_7__","helpText","titleText","material_ui_Divider__WEBPACK_IMPORTED_MODULE_6___default","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","helpReadMoreLink","headline","tabs","tab","copyright","bottombar","contentHomePages","comingSoonBlur","fix","toHex","DragoEventfulParity","contractAbi","_abi","_contractName","_instance","_registry","_contract","_contractAddress","_address","_events","_name","_signature","_hexSignature","contractAddress","_contractAddres","DragoFactoryParity","createDrago","dragoName","dragoSymbol","accountAddress","toLower","estimateGas","gasEstimate","gas","postTransaction","getDragosByAddress","DragoFactoryWeb3","gasAmount","DragoParity","getData","getAdminData","getBalanceWETH","wethInstance","getBalanceZRX","tokenInstance","getPoolBalanceOnToken","buyDrago","cancelOrderCFDExchange","cfd","tradeId","depositToExchange","placeOrderCFDExchange","is_stable","adjustment","stake","sellDrago","setPrices","fromAscii","buyPriceWei","sellPriceWei","getAssets","DragoRegistryParity","dragoID","fromAddress","DragoRegistryWeb3","queryMultiDataFromId","getMultiPoolsDataInstance","EtherParity","transfer","toAddress","sendTransaction","EtherWeb3","EthusdParity","FundProxyWeb3","unwrapETH","unwrapEth","wrapETH","wrapEth","exchangeParity","RigoTokenFaucetParity","drip1Token","RigoTokenFaucetWeb3","RigoTokenParity","RigoTokenWeb3","isBigNumber","hexlify","bigNumberify","TokenWrapperParity","depositLock","TokenWrapperWeb3","VaultEventfulParity","VaultFactoryParity","createVault","vaultName","vaultSymbol","getVaultsByAddress","VaultFactoryWeb3","VaultParity","buyVault","getPrice","getTokenBalance","sellVault","setTransactionFee","DragoWeb3","basisPoints","Contracts","_drago","_dragoeventful","DragoEventfulWeb3","_dragofactory","_dragoregistry","_ether","_vault","VaultWeb3","_vaulteventful","VaultEventfulWeb3","_vaultfactory","_rigotoken","_rigotokenfaucet","_tokenwrapper","_fundproxy","_ethusd","ExchangeParity","RegistryParity","topBarButton","topBarButtonSelected","paperContainer","detailsBoxContainer","fadein","detailsSectionContainer","sectionParagraph","TokenAvatar","imgSrc","size","tokenSymbol","Avatar_default","verticalAlign","AccountTopBarSummary","transferOpen","renderCopyButton","react_copy_to_clipboard_lib","text","onCopy","Link","content_copy_default","copyAddress","renderEtherscanButton","etherscanUrl","search_default","renderTitle","lib","actionButtons","renderSubTitle","subTitle","renderBalance","formattedAmount","toLocaleString","minimumFractionDigits","maximumFractionDigits","tokenAvatar","accountTitleContainer","actionsContainer","settings_default","actionIcons","chat_default","md","accountBodyContainer","accountChipTokenETH","accountChipTokenGGG","ElementNotificationsList","subscriptionIDContractDrago","updateTransactionsQueueAction","noticationKey","deleted","context","renderPlaceHolder","renderNotifications","timeStamp","transactionsList","List","ElementTopBarAccountStatus","_this$props$endpoint","accountTopBarSummary","elementNotificationsList","TopMenuButtonLong","FlatButton_default","TopMenuLinkLong","label","buttonStyle","link","other","objectWithoutProperties","topMenuButtonLong","labelStyle","NavLinksLeft","activeSectionPath","match","renderTopLinksLong","links","topMenuLinkLong","buildUrlPath","disableTouchRipple","hoverColor","renderTopLinksShort","menuItems","MenuItem_default","IconMenu_default","IconButton_default","more_vert_default","onChange","handleChangeSingle","iconStyle","linksLong","home_default","account_balance_default","show_chart_default","polymer_default","linksShort","Toolbar","background","paddingLeft","build","sm","PureComponent","withRouter","menuStyles","dropDown","separator","opacity","profileIcon","closed","disabledUserType","enabledUserType","NavLinks","minedEvents","pendingEvents","subscriptionIDDrago","transactionsDrawerNetworkButtonStyle","transactionsDrawerNetworkButtonIconStyle","handleClick","preventDefault","anchorEl","currentTarget","handleRequestClose","userTypeLabel","labelPosition","arrow_drop_down_default","Popover_default","onRequestClose","marginTop","Menu_default","marginLeft","Badge_default","badgeContent","secondary","badgeStyle","top","right","tooltip","account_circle_default","TopBarMenu","renderBurgerMenu","htmlFor","AppBar_default","topBarMenuLinksLeft","showMenuIconButton","iconElementLeft","iconElementRight","topBarMenuLinksRight","elementTopBarAccountStatus","ElementNotConnected","renderSyncing","react__WEBPACK_IMPORTED_MODULE_7___default","react_flexbox_grid__WEBPACK_IMPORTED_MODULE_5__","_atomic_atoms_sectionHeader__WEBPACK_IMPORTED_MODULE_10__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","HelpIcon","popoverIsOpen","preferPlace","place","toState","stopPropagation","react__WEBPACK_IMPORTED_MODULE_6___default","data-tip","data-event","material_ui_svg_icons_action_help_outline__WEBPACK_IMPORTED_MODULE_5___default","react_tooltip__WEBPACK_IMPORTED_MODULE_7___default","effect","multiline","globalEventOff","helpicon","providers","HttpProvider","getWeb3_getWeb3","_web3Wrapper__WEBPACK_IMPORTED_MODULE_0__","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","global","baseContracts","operateOnExchangeEFXLock","managerAccountAddress","tokenWrapper","toBeWrapped","time","isOldERC20","contractMethod","encodedABI","inputs","encodeFunctionCall","operateOnExchange","operateOnExchangeEFXUnlock","toBeUnwrapped","_x9","_x10","_x11","operateOnExchangeSelfCustody","_callee4","targetAddress","toBeTransferred","_context4","_x19","find","operateOnExchangeDirectly","shouldThrowOnInsufficientBalanceOrAllowance","cancelOrderOnZeroExExchange","cancelTakerTokenAmount","setInfiniteAllowace","setInfiniteAllowance","wrapETHZeroEx","_ref5","_callee5","wrapperAddress","_context5","_x20","_x21","_x22","unWrapETHZeroEx","_x23","_x24","_x25","getMultipleBalancesInstance","_x26","Buffer","web3_core_helpers__WEBPACK_IMPORTED_MODULE_0__","reconnecting_websocket_dist_reconnecting_websocket_cjs__WEBPACK_IMPORTED_MODULE_1__","reconnecting_websocket_dist_reconnecting_websocket_cjs__WEBPACK_IMPORTED_MODULE_1___default","_btoa","parseURL","WebSocket","btoa","URL","w3cwebsocket","newURL","WebsocketProvider","responseCallbacks","notificationCallbacks","_customTimeout","parsedURL","headers","username","password","clientConfig","auth","recWs","connection","addDefaultEvents","_parseResponse","load","readyState","OPEN","enumerable","prototype","reset","replace","lastChunk","clearTimeout","lastChunkTimeout","errors","InvalidResponse","_addResponseCallback","ConnectionTimeout","InvalidConnection","on","onopen","removeListener","cb","splice","removeAllListeners","disconnect","scheme","rgb","poly","erf","proto","opt_begin","opt_end","opt_index","varargs","listSchemes","args","Scheme","opt_groups","palettes","palettes_max","palettes_min","makeGenerator","self","color_func","x","_number","max","colors","shrinking_takes_head","generate","round","color_func_cyclic","scheme_name","groups","cbf_max","addPalette","opt_is_cbf","min","addPalettes","opt_max","opt_cbf_max","shrinkByTakingHead","enabled","opt_idx","setColorFunction","func","opt_cyclic","fromPalettes","withColorFunction","registered_schemes","register","g","opt_number","ret","cbf","schemes","opt_start","step","clamp","rgbColor","linearRgbColor","hsvColor","h","opt_s","opt_v","m","ColorFunction","Palette","PalettesList","SchemeType","y","tolSequentialColor","tolDivergingColor","tolRainbowColor","YlGn","4","5","6","7","8","9","YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr","10","11","BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired","12","Pastel1","Pastel2","Set1","Set2","Set3","GRG","GNT","MKR","faucetAddress","FUN","SAN","OMG","_home_gabriele_webapp_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","SNT","EDO","REP","DAI","BAT","NIO","SPK","_TRADE_TOKENS_PAIRS","_WETH","_USDT","_ETH","transferButton","start","end","chunkSize","endBlock","hexPoolAddress","hexAccounts","getChunkedEvents","eventsFilterBuySell","promisesEvents","_args4","BuyDrago","SellDrago","dragoTransactionsLog","logPromises","getBlock","block","startTime","logToEventInternal","getPoolsFromOwner","_args5","dragofactory","dragoData","topicsBuySell","BuyVault","SellVault","topicsCreate","allLogs","balancesList","blocklNumberA","blocklNumberB","comparison","lt","dragoTransactionsLogs","trim","dragoSupply","_dragoSymbolRegistry$","dragoBalance","_dragoSymbolRegistry$2","balancesRegistry","getTimestamp","endTime","Seconds_from_T1_to_T2","getTime","Seconds_Between_Dates","getDragoCreationDate","dragoCreatedDate","_details","dragoTotalSupply","dragoETH","dragoWETH","vaultDetails","vaultAddress","getVaultCreationDate","vaultCreated","vaultData","vaultAdminData","vaultTotalSupply","vaultETH","fee","vaultETHBalance","vaultfactory","bloclNumberA","bloclNumberB","depositLockTime","tokenwrapper","filterValue","filterLength","getDragoDetails_getDragoDetails"],"mappings":"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AAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJE,KAAM,CACJp8D,KAAM,YACNo5D,IAAK,GACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJG,KAAM,CACJr8D,KAAM,YACNo5D,IAAK,GACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJI,KAAM,CACJt8D,KAAM,YACNo5D,IAAK,GACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJK,KAAM,CACJv8D,KAAM,YACNo5D,IAAK,GACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJM,OAAQ,CACNx8D,KAAM,YACNo5D,IAAK,GACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJO,SAAU,CACRz8D,KAAM,YACNo5D,IAAK,EACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJQ,OAAQ,CACN18D,KAAM,YACNo5D,IAAK,EACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,UAC5CC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UACtDC,EAAG,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChEC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,EAAG,CACD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFmB,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFC,GAAI,CACF,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJS,OAAQ,CACN38D,KAAM,cACNo5D,IAAK,EACL7kC,EAAG,CAAC,SAAU,SAAU,UACxBkmC,EAAG,CAAC,SAAU,SAAU,SAAU,UAClCC,EAAG,CAAC,SAAU,SA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","file":"static/js/main.6634fdf6.chunk.js","sourcesContent":["import * as ACTION_ from './actions_const'\n\nexport * from './actions_const'\n\n// Redux actions\n\n// User\nexport const IS_MANAGER = 'IS_MANAGER'\n\n// Transactions\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\n\n// Eventful\n\nexport const GET_VAULTS_SEARCH_LIST = 'GET_VAULTS_SEARCH_LIST'\nexport const DRAGO_HOLDER_TRANSACTIONS_UPDATE =\n  'DRAGO_HOLDER_TRANSACTIONS_UPDATE'\nexport const DRAGO_MANAGER_TRANSACTIONS_UPDATE =\n  'DRAGO_MANAGER_TRANSACTIONS_UPDATE'\nexport const VAULT_HOLDER_TRANSACTIONS_UPDATE =\n  'VAULT_HOLDER_TRANSACTIONS_UPDATE'\nexport const VAULT_MANAGER_TRANSACTIONS_UPDATE =\n  'VAULT_MANAGER_TRANSACTIONS_UPDATE'\nexport const DRAGO_SELECTED_DETAILS_UPDATE = 'DRAGO_SELECTED_DETAILS_UPDATE'\nexport const DRAGO_SELECTED_DETAILS_RESET = 'DRAGO_SELECTED_DETAILS_RESET'\nexport const SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT =\n  'SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT'\nexport const SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT =\n  'SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT'\nexport const VAULT_SELECTED_DETAILS_UPDATE = 'VAULT_SELECTED_DETAILS_UPDATE'\nexport const VAULT_SELECTED_DETAILS_RESET = 'VAULT_SELECTED_DETAILS_RESET'\n\n// Notification\nexport const INIT_NOTIFICATION = 'INIT_NOTIFICATION'\nexport const QUEUE_ERROR_NOTIFICATION = 'QUEUE_ERROR_NOTIFICATION'\nexport const QUEUE_WARNING_NOTIFICATION = 'QUEUE_WARNING_NOTIFICATION'\nexport const QUEUE_ACCOUNT_NOTIFICATION = 'QUEUE_ACCOUNT_NOTIFICATION'\n\n// DRAGO\nexport const GET_TOKEN_BALANCES_DRAGO = 'GET_TOKEN_BALANCES_DRAGO'\n\n// ENDPOINT\nexport const CHECK_METAMASK_IS_UNLOCKED = 'CHECK_METAMASK_IS_UNLOCKED'\nexport const GET_ACCOUNTS_TRANSACTIONS = 'GET_ACCOUNTS_TRANSACTIONS'\nexport const MONITOR_ACCOUNTS_START = 'MONITOR_ACCOUNTS_START'\nexport const MONITOR_ACCOUNTS_STOP = 'MONITOR_ACCOUNTS_STOP'\nexport const CHECK_APP_IS_CONNECTED = 'CHECK_APP_IS_CONNECTED'\nexport const ATTACH_INTERFACE = 'ATTACH_INTERFACE'\nexport const UPDATE_INTERFACE = 'UPDATE_INTERFACE'\n\n// EXCHANGE\n\n// Trading pair\n\n// UI\n\n// export const EXCHANGE_PANEL_UI_PROPERTIES_UPDATE =\n//   'EXCHANGE_PANEL_UI_PROPERTIES_UPDATE'\n\n// Funds\nexport const UPDATE_AVAILABLE_FUNDS = 'UPDATE_AVAILABLE_FUNDS'\n\n// Relays\nexport const UPDATE_AVAILABLE_RELAYS = 'UPDATE_AVAILABLE_RELAYS'\nexport const UPDATE_SELECTED_RELAY = 'UPDATE_SELECTED_RELAY'\nexport const UPDATE_SELECTED_EXCHANGE = 'UPDATE_SELECTED_EXCHANGE'\n\n// User oders\nexport const FETCH_ACCOUNT_ORDERS_START = 'FETCH_ACCOUNT_ORDERS_START'\nexport const UPDATE_FUND_ORDERS = 'UPDATE_FUND_ORDERS'\nexport const FETCH_ACCOUNT_ORDERS_STOP = 'FETCH_ACCOUNT_ORDERS_STOP'\n\n// Market\nexport const CHART_MARKET_DATA_UPDATE = 'CHART_MARKET_DATA_UPDATE'\nexport const FETCH_CANDLES_DATA_SINGLE_START = 'FETCH_CANDLES_DATA_SINGLE_START'\nexport const FETCH_CANDLES_DATA_SINGLE_STOP = 'FETCH_CANDLES_DATA_SINGLE_STOP'\nexport const FETCH_CANDLES_DATA_PORTFOLIO_START =\n  'FETCH_CANDLES_DATA_PORTFOLIO_START'\nexport const FETCH_CANDLES_DATA_PORTFOLIO_STOP =\n  'FETCH_CANDLES_DATA_PORTFOLIO_STOP'\nexport const FETCH_HISTORY_TRANSACTION_LOGS = 'FETCH_HISTORY_TRANSACTION_LOGS'\nexport const UPDATE_HISTORY_TRANSACTION_LOGS = 'UPDATE_HISTORY_TRANSACTION_LOGS'\nexport const FETCH_ASSETS_PRICE_DATA = 'FETCH_ASSETS_PRICE_DATA'\n\nexport const CHART_MARKET_DATA_ADD_DATAPOINT = 'CHART_MARKET_DATA_ADD_DATAPOINT'\nexport const CHART_MARKET_DATA_INIT = 'CHART_MARKET_DATA_INIT'\n\n// Trades\nexport const TRADES_HISTORY_UPDATE = 'TRADES_HISTORY_UPDATE'\nexport const TRADES_HISTORY_RESET = 'TRADES_HISTORY_RESET'\nexport const MONITOR_EXCHANGE_EVENTS_START = 'MONITOR_EXCHANGE_EVENTS_START'\nexport const MONITOR_EXCHANGE_EVENTS_STOP = 'MONITOR_EXCHANGE_EVENTS_STOP'\n\n// UI Elements\nexport const UPDATE_ELEMENT_LOADING = 'UPDATE_ELEMENT_LOADING'\n\n// Account\nexport const SET_MAKER_ADDRESS = 'SET_MAKER_ADDRESS'\nexport const UPDATE_ACCOUNT_SIGNATURE = 'UPDATE_ACCOUNT_SIGNATURE'\n\n// Order selection\nexport const UPDATE_SELECTED_FUND = 'UPDATE_SELECTED_FUND'\nexport const ORDER_UPDATE_FROM_RELAY = 'ORDER_UPDATE_FROM_RELAY'\nexport const UPDATE_TRADE_TOKENS_PAIR = 'UPDATE_TRADE_TOKENS_PAIR'\n\n// Orderbook\nexport const ORDERBOOK_UPDATE = 'ORDERBOOK_UPDATE'\nexport const ORDERBOOK_INIT = 'ORDERBOOK_INIT'\nexport const SET_ORDERBOOK_AGGREGATE_ORDERS = 'SET_ORDERBOOK_AGGREGATE_ORDERS'\n\n// Websocket\nexport const RELAY_OPEN_WEBSOCKET_TICKER = 'RELAY_OPEN_WEBSOCKET_TICKER'\nexport const RELAY_OPEN_WEBSOCKET_BOOK = 'RELAY_OPEN_WEBSOCKET_BOOK'\nexport const RELAY_MSG_FROM_WEBSOCKET = 'RELAY_MSG_FROM_WEBSOCKET'\nexport const RELAY_CLOSE_WEBSOCKET = 'RELAY_CLOSE_WEBSOCKET'\nexport const RELAY_GET_ORDERS = 'RELAY_GET_ORDERS'\nexport const RELAY_UPDATE_ORDERS = 'RELAY_UPDATE_ORDERS'\n\n// Tokens\nexport const SET_TOKEN_ALLOWANCE = 'SET_TOKEN_ALLOWANCE'\nexport const GET_PRICES_BITFINEXE = 'GET_PRICES_BITFINEX'\nexport const TOKEN_PRICE_TICKERS_FETCH_START = 'TOKEN_PRICE_TICKERS_FETCH_START'\nexport const TOKENS_TICKERS_UPDATE = 'TOKENS_TICKERS_UPDATE'\nexport const TOKEN_PRICE_TICKERS_FETCH_STOP = 'TOKEN_PRICE_TICKERS_FETCH_STOP'\nexport const UPDATE_FUND_LIQUIDITY = 'UPDATE_FUND_LIQUIDITY'\nexport const UPDATE_AVAILABLE_TRADE_TOKENS_PAIRS =\n  'UPDATE_AVAILABLE_TRADE_TOKENS_PAIRS'\nexport const UPDATE_LIQUIDITY_AND_TOKENS_BALANCE =\n  'UPDATE_LIQUIDITY_AND_TOKENS_BALANCE'\nexport const UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_RESET =\n  'UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_RESET'\nexport const UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_START =\n  'UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_START'\nexport const UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_STOP =\n  'UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_STOP'\nexport const UPDATE_CURRENT_TOKEN_PRICE = 'UPDATE_CURRENT_TOKEN_PRICE'\nexport const RESET_TOKEN_PRICE = 'RESET_TOKEN_PRICE'\n\nexport const CUSTOM_EXCHANGE_ACTIONS = [\n  ACTION_.ORDER_CREATE,\n  RELAY_OPEN_WEBSOCKET_TICKER,\n  RELAY_OPEN_WEBSOCKET_BOOK,\n  FETCH_CANDLES_DATA_SINGLE_START,\n  FETCH_CANDLES_DATA_SINGLE_STOP,\n  RELAY_CLOSE_WEBSOCKET,\n  FETCH_ACCOUNT_ORDERS_START,\n  FETCH_ACCOUNT_ORDERS_STOP,\n  MONITOR_EXCHANGE_EVENTS_START,\n  MONITOR_EXCHANGE_EVENTS_STOP,\n  ACTION_.RELAY_CONNECT\n]\n","export const H001 =\n  \"This is a list of all your accounts, they might store ETH or and GRG tokens.<br>  If you don't see your account(s), make sure you are logged in via Metamask\"\n","import * as HELP_ from '../_const/helpMsg'\nimport { APP_VERSION } from './version'\nimport BigNumber from 'bignumber.js'\n\nexport * from './version_git'\nexport { APP_VERSION }\nexport { HELP_ }\nexport const UNLIMITED_ALLOWANCE_IN_BASE_UNITS = new BigNumber(2)\n  .pow(256)\n  .minus(1)\n\nexport const DEBUGGING = {\n  initAccountsTransactionsInEpic: true,\n  DUMB_ACTION: {\n    type: 'DUMB',\n    payload: 'DUMB'\n  }\n}\n\nexport const METAMASK = 'MetaMask'\nexport const HTTP_EVENT_FETCHING = true\nexport const APP = 'app'\nexport const DS = '/'\nexport const DRG_ISIN = 'DR'\nexport const LOGGER = true\n// Set connetions to production server\nexport const PROD = true\n// Set connetions to WebSocketSecure or HTTPs\nexport const WS = true\n// Address of the Parity registry of smart contracts\nexport const REGISTRY_KOVAN = '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3'\n// Address of RigoToken GRG\n// export const GRG_ADDRESS_KV = \"0x56B28058d303bc0475a34D439aa586307adAc1f5\";\n\nexport const NULL_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport * from './tokens'\nexport * from '../_const/helpMsg'\n\nexport const RELAYS = {\n  ERCdEX: {\n    name: 'ERCdEX',\n    icon: 'ercdex.png',\n    supported: true,\n    initOrdeBookAggregated: false,\n    onlyAggregateOrderbook: false,\n    defaultTokensPair: {\n      baseTokenSymbol: 'ZRX',\n      quoteTokenSymbol: 'WETH'\n    },\n    supportedNetworks: ['42'],\n    isTokenWrapper: false,\n    meta: {}\n  },\n  Radarrelay: {\n    name: 'Radarrelay',\n    icon: 'radarrelay.png',\n    supported: true,\n    initOrdeBookAggregated: false,\n    onlyAggregateOrderbook: false,\n    defaultTokensPair: {\n      baseTokenSymbol: 'ZRX',\n      quoteTokenSymbol: 'WETH'\n    },\n    supportedNetworks: ['42'],\n    isTokenWrapper: false,\n    meta: {}\n  },\n  Ethfinex: {\n    name: 'Ethfinex',\n    icon: 'ethfinex.png',\n    supported: true,\n    initOrdeBookAggregated: true,\n    onlyAggregateOrderbook: true,\n    defaultTokensPair: {\n      // baseTokenSymbol: 'GRG',\n      // quoteTokenSymbol: 'ETH'\n      baseTokenSymbol: 'ETH',\n      quoteTokenSymbol: 'USDT'\n    },\n    supportedNetworks: ['1', '3', '42'],\n    isTokenWrapper: true,\n    meta: {}\n  }\n}\n\nexport const DEFAULT_RELAY = {\n  kovan: 'Ethfinex',\n  ropsten: 'Ethfinex',\n  mainnet: 'Ethfinex'\n}\n\n// export const ERCdEX = \"ERCdEX\"\n// export const Ethfinex = \"Ethfinex\"\n\n// Blockchain endpoint\nexport const EP_INFURA_KV = 'https://kovan.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\nexport const EP_INFURA_RP = 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\nexport const EP_INFURA_MN =\n  'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\nexport const EP_INFURA_KV_WS = 'wss://kovan.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\nexport const EP_INFURA_RP_WS = 'wss://ropsten.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\nexport const EP_INFURA_MN_WS = 'wss://mainnet.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n\n// Parity - Kovan\nexport const EP_RIGOBLOCK_KV_DEV = 'https://kovan.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_KV_DEV_WS = 'wss://kovan.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_KV_PROD = 'https://kovan..dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_KV_PROD_WS = 'wss://kovan.dev.endpoint.network/ws'\n\n// Parity - Ropsten\nexport const EP_RIGOBLOCK_RP_DEV = 'https://ropsten.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_RP_DEV_WS = 'wss://ropsten.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_RP_PROD = 'https://ropsten.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_RP_PROD_WS = 'wss://ropsten.dev.endpoint.network/ws'\n\n// Parity - Mainnet\nexport const EP_RIGOBLOCK_MN_DEV = 'https://mainnet.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_MN_DEV_WS = 'wss://mainnet.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_MN_PROD = 'https://mainnet.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_MN_PROD_WS = 'wss://mainnet.dev.endpoint.network/ws'\n\n// Allowed endpoints in config section\nexport const INFURA = 'infura'\nexport const RIGOBLOCK = 'rigoblock'\nexport const LOCAL = 'local'\nexport const CUSTOM = 'custom'\nexport const ALLOWED_ENDPOINTS = [\n  ['infura', false],\n  ['rigoblock', false],\n  ['local', false],\n  ['custom', false]\n]\nexport const PARITY_NETWORKS_ID = {\n  kovan: 42,\n  ropsten: 3,\n  foundation: 1\n}\n\nexport const KOVAN = 'kovan'\nexport const KOVAN_ID = 42\nexport const ROPSTEN = 'ropsten'\nexport const ROPSTEN_ID = 3\nexport const MAINNET = 'mainnet'\nexport const MAINNET_ID = 1\n\nexport const DEFAULT_ENDPOINT = 'infura'\n// Please refert to the following link for network IDs\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md\n// kovan = 42\nexport const DEFAULT_NETWORK_NAME = MAINNET\nexport const DEFAULT_NETWORK_ID = ROPSTEN_ID\nexport const DEFAULT_ETHERSCAN = 'https://etherscan.io/'\n\nexport const NETWORK_OK = 'networkOk'\nexport const NETWORK_WARNING = 'networkWarning'\n\nexport const KOVAN_ETHERSCAN = 'https://kovan.etherscan.io/'\nexport const ROPSTEN_ETHERSCAN = 'https://ropsten.etherscan.io/'\nexport const MAINNET_ETHERSCAN = 'https://etherscan.io/'\n\n//mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807\n\nexport const ENDPOINTS = {\n  infura: {\n    name: 'infura',\n    https: {\n      kovan: {\n        dev: 'https://kovan.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://kovan.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      ropsten: {\n        dev: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      // mainnet: {\n      //   dev: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n      //   prod: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      // }\n      mainnet: {\n        dev: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      }\n    },\n    wss: {\n      kovan: {\n        dev: 'wss://kovan.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://kovan.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      ropsten: {\n        dev: 'wss://ropsten.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://ropsten.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      mainnet: {\n        dev: 'wss://mainnet.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://mainnet.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      }\n    }\n  },\n  rigoblock: {\n    name: 'rigoblock',\n    https: {\n      kovan: {\n        dev: EP_RIGOBLOCK_KV_DEV,\n        prod: EP_RIGOBLOCK_KV_PROD\n      },\n      ropsten: {\n        dev: EP_RIGOBLOCK_RP_DEV,\n        prod: EP_RIGOBLOCK_RP_PROD\n      },\n      mainnet: {\n        dev: EP_RIGOBLOCK_MN_DEV,\n        prod: EP_RIGOBLOCK_MN_PROD\n      }\n    },\n    wss: {\n      kovan: {\n        dev: EP_RIGOBLOCK_KV_DEV_WS,\n        prod: EP_RIGOBLOCK_KV_PROD_WS\n      },\n      ropsten: {\n        dev: EP_RIGOBLOCK_RP_DEV_WS,\n        prod: EP_RIGOBLOCK_RP_PROD_WS\n      },\n      mainnet: {\n        dev: EP_RIGOBLOCK_MN_DEV_WS,\n        prod: EP_RIGOBLOCK_MN_PROD_WS\n      }\n    }\n  },\n  local: {\n    name: 'local',\n    https: {\n      kovan: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      },\n      ropsten: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      },\n      mainnet: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      }\n    },\n    wss: {\n      kovan: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      },\n      ropsten: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      },\n      mainnet: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      }\n    }\n  }\n}\n\nexport const NETWORKS = {\n  kovan: {\n    id: 42,\n    name: 'kovan',\n    etherscan: 'https://kovan.etherscan.io/',\n    zeroExExchangeContractAddress: '0x90fe2af704b34e0224bf2299c838e04d4dcf1364'\n  },\n  ropsten: {\n    id: 3,\n    name: 'ropsten',\n    etherscan: 'https://ropsten.etherscan.io/',\n    fundProxyContractAddress: ''\n  },\n  mainnet: {\n    id: 1,\n    name: 'mainnet',\n    etherscan: 'https://etherscan.io/',\n    zeroExExchangeContractAddress: '0x12459c951127e0c374ff9105dda097662a027093'\n  }\n}\n\nexport const EXCHANGES = {\n  ERCdEX: {\n    kovan: {\n      tokenTransferProxy: '0x087eed4bc1ee3de49befbd66c662b434b15d49d4',\n      exchangeAddress: '0x90fe2af704b34e0224bf2299c838e04d4dcf1364',\n      feeRecipientAddress: '',\n      networkId: 42,\n      name: 'ERCdEX',\n      taker: 'NULL_ADDRESS'\n    },\n    ropsten: {\n      tokenTransferProxy: '0x4e9aad8184de8833365fea970cd9149372fdf1e6',\n      exchangeAddress: '0x1d8643aae25841322ecde826862a9fa922770981',\n      feeRecipientAddress: '',\n      networkId: 3,\n      name: 'ERCdEX',\n      taker: 'NULL_ADDRESS'\n    },\n    mainnet: {}\n  },\n  Rigoblock: {\n    kovan: {\n      tokenTransferProxy: '0xcc040edf6e508c4372a62b1a902c69dcc52ceb1d',\n      exchangeAddress: '0xf307de6528fa16473d8f6509b7b1d8851320dba5',\n      feeRecipientAddress: '',\n      networkId: 42,\n      name: 'Rigoblock',\n      taker: 'NULL_ADDRESS'\n    },\n    mainnet: {}\n  },\n  Ethfinex: {\n    kovan: {\n      tokenTransferProxy: '0x0000000000000000000000000000000000000000',\n      exchangeAddress: '0x35dd2932454449b14cee11a94d3674a936d5d7b2', // 0x V2 address EFX HOT WALLET 0x9faf5515f177F3A8a845D48C19032b33Cc54C09C\n      feeRecipientAddress: '0x9faf5515f177f3a8a845d48c19032b33cc54c09c',\n      networkId: 42,\n      name: 'Ethfinex',\n      taker: 'NULL_ADDRESS'\n    },\n    ropsten: {\n      // Old contracts\n      // tokenTransferProxy: '0xcc040edf6e508c4372a62b1a902c69dcc52ceb1d'\n      // exchangeAddress: '0x1d8643aae25841322ecde826862a9fa922770981',\n\n      // Rigoblock ammended contract for EFX\n      tokenTransferProxy: '0xeea64eebd1f2dc273cfc79cbdda23b69c6b5588',\n      exchangeAddress: '0x1d8643aae25841322ecde826862a9fa922770981',\n      feeRecipientAddress: '0x9faf5515f177f3a8a845d48c19032b33cc54c09c',\n      networkId: 3,\n      name: 'Ethfinex',\n      taker: '0x9faf5515f177f3a8a845d48c19032b33cc54c09c'\n    },\n    mainnet: {\n      tokenTransferProxy: '0x7e03d2b8edc3585ecd8a5807661fff0830a0b603',\n      exchangeAddress: '0x4f833a24e1f95d70f028921e27040ca56e09ab0b',\n      feeRecipientAddress: '0x61b9898c9b60a159fc91ae8026563cd226b7a0c1',\n      networkId: 1,\n      name: 'Ethfinex',\n      taker: '0x61b9898c9b60a159fc91ae8026563cd226b7a0c1'\n    }\n  }\n}\n\nexport const defaultDragoDetails = {\n  address: null,\n  name: null,\n  symbol: null,\n  addressOwner: null,\n  addressGroup: null,\n  buyPrice: null,\n  sellPrice: null,\n  created: '-',\n  totalSupply: null,\n  totalSupplyBaseUnits: null,\n  dragoETHBalance: null,\n  dragoETHBalanceWei: null,\n  dragoWETHBalance: null,\n  balanceDRG: null\n}\n\nexport const poolStyle = {\n  drago: {\n    color: '#054186'\n  },\n  vault: {\n    color: '#607D8B'\n  }\n}\n\n// Default messages\nexport const MSG_NO_SUPPORTED_NETWORK =\n  'We have detected that MetaMask is not connected to the correct network.'\nexport const MSG_NETWORK_STATUS_OK = 'Service is operating normally.'\nexport const MSG_NETWORK_STATUS_ERROR =\n  'Service disruption. Cannot update accounts balances. Account balances could be out of date.'\n\nexport const THEME_COLOR = {\n  drago: 'linear-gradient(135deg,rgb(5, 65, 134),rgb(1, 17, 36))',\n  vault: 'linear-gradient(135deg,rgb(96, 125, 139),rgb(40, 41, 41))'\n}\n","export const GIT_HASH = ''\n","import * as TYPE_ from '../actions_const/app_const'\nimport { createAction } from 'redux-actions'\n\nexport const updateAppStatus = createAction(TYPE_.APP_STATUS_UPDATE)\nexport const updateAppConfig = createAction(TYPE_.APP_CONFIG_UPDATE)\n","import * as TYPE_ from '../const'\n\nexport const getTokenBalancesDrago = (dragoDetails, relay) => {\n  return {\n    type: TYPE_.GET_TOKEN_BALANCES_DRAGO,\n    payload: {\n      dragoDetails,\n      relay\n    }\n  }\n}\nexport const getAssetsPriceData = (assets, networkId, quoteToken) => {\n  return {\n    type: TYPE_.FETCH_ASSETS_PRICE_DATA,\n    payload: {\n      assets,\n      networkId,\n      quoteToken\n    }\n  }\n}\nexport const updateDragoSelectedDetails = (\n  data = {},\n  meta = { updateCache: true }\n) => {\n  return {\n    type: TYPE_.DRAGO_SELECTED_DETAILS_UPDATE,\n    payload: data,\n    meta\n  }\n}\n\nexport const resetDragoSelectedDetails = () => {\n  return {\n    type: TYPE_.DRAGO_SELECTED_DETAILS_RESET\n  }\n}\n\nexport const updateDragoTransactionsHolder = results => {\n  return {\n    type: TYPE_.DRAGO_HOLDER_TRANSACTIONS_UPDATE,\n    payload: results\n  }\n}\nexport const updateDragoTransactionsManager = results => {\n  return {\n    type: TYPE_.DRAGO_MANAGER_TRANSACTIONS_UPDATE,\n    payload: results\n  }\n}\n","import * as TYPE_ from '../actions_const/pools_const'\nimport { createAction } from 'redux-actions'\n\nexport const getPoolsList = createAction(\n  TYPE_.POOLS_LIST_GET,\n  (\n    options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n  ) => ({\n    options\n  })\n)\n\nexport const updatePoolsList = createAction(TYPE_.POOLS_LIST_UPDATE)\n\nexport const readItemPoolsList = createAction(TYPE_.POOLS_LIST_ITEM_READ)\n\nexport const writeItemPoolsList = createAction(\n  TYPE_.POOLS_LIST_ITEM_WRITE,\n  ({ payload }) => payload,\n  ({ meta }) => meta\n)\n\nexport const getPoolsSingleTransactions = createAction(\n  TYPE_.POOLS_SINGLE_TRANSACTIONS_GET,\n  (poolAddress, accounts, options) => ({\n    poolAddress,\n    accounts,\n    options\n  })\n)\n\nexport const getPoolsSingleDetails = createAction(\n  TYPE_.POOLS_SINGLE_DETAILS_GET,\n  (poolId, options = { poolType: 'drago', wallet: '' }) => ({\n    poolId,\n    options\n  })\n)\n\nexport const getPoolsGroupDetails = createAction(\n  TYPE_.POOLS_GROUP_DETAILS_GET,\n  poolsIdArray => ({\n    poolsIdArray\n  })\n)\n","import * as TYPE_ from '../const'\n\nexport const updateVaultSelectedDetails = (results = {}) => {\n  return {\n    type: TYPE_.VAULT_SELECTED_DETAILS_UPDATE,\n    payload: results\n  }\n}\nexport const resetVaultSelectedDetails = () => {\n  return {\n    type: TYPE_.VAULT_SELECTED_DETAILS_RESET\n  }\n}\nexport const updateVaultTransactionsHolder = results => {\n  return {\n    type: TYPE_.VAULT_HOLDER_TRANSACTIONS_UPDATE,\n    payload: results\n  }\n}\n\nexport const updateVaultTransactionsManager = results => {\n  return {\n    type: TYPE_.VAULT_MANAGER_TRANSACTIONS_UPDATE,\n    payload: results\n  }\n}\n","import * as app from './app_actions'\nimport * as drago from './drago_actions'\nimport * as pools from './pools_actions'\nimport * as vault from './vault_actions'\n\nexport { pools, drago, vault, app }\n","import * as TYPE_ from '../actions_const'\nimport { createAction } from 'redux-actions'\n\nexport const createOrder = createAction(\n  TYPE_.ORDER_CREATE,\n  (orderSide = 'asks', options = { protocol: 'v0', type: 'LIMIT_ORDER' }) => ({\n    orderSide,\n    options\n  })\n)\n\nexport const updateOrder = createAction(TYPE_.ORDER_UPDATE)\nexport const cancelOrder = createAction(TYPE_.ORDER_CANCEL)\n","import * as TYPE_ from '../actions_const/ui_const'\nimport { createAction } from 'redux-actions'\n\nexport const updateUiPanelProperties = createAction(\n  TYPE_.EXCHANGE_PANEL_UI_PROPERTIES_UPDATE\n)\n","import * as TYPE_ from '../actions_const/relay_const'\nimport { createAction } from 'redux-actions'\n\nexport const connectRelay = createAction(\n  TYPE_.RELAY_CONNECT,\n  (relay, tokensPair) => ({\n    relay,\n    tokensPair\n  })\n)\n\nexport const getRelayConfig = createAction(\n  TYPE_.RELAY_GET_CONFIG,\n  (relay, tokensPair) => ({\n    relay,\n    tokensPair\n  })\n)\n","export * from './orders_actions'\nexport * from './ui_actions'\nexport * from './relay_actions'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"elementNotificationsList_notifications__3iRa-\",\"notificationsPanel\":\"elementNotificationsList_notificationsPanel__3_yUh\",\"show\":\"elementNotificationsList_show__1VDah\",\"noShow\":\"elementNotificationsList_noShow__2OCsC\",\"progressBar\":\"elementNotificationsList_progressBar__3xBJZ\",\"noRecentTransactions\":\"elementNotificationsList_noRecentTransactions__2wdV0\",\"post\":\"elementNotificationsList_post__1Lvrv\",\"width500\":\"elementNotificationsList_width500__3Mawi\",\"width470\":\"elementNotificationsList_width470__2a8Mb\",\"width110\":\"elementNotificationsList_width110__3Yr8f\",\"width250\":\"elementNotificationsList_width250__19Ysc\",\"line\":\"elementNotificationsList_line__1DzBK\",\"circle\":\"elementNotificationsList_circle__17rxI\",\"rect\":\"elementNotificationsList_rect__CxCOO\",\"pulse\":\"elementNotificationsList_pulse__tTQWn\",\"wrapper\":\"elementNotificationsList_wrapper__2IYcg\",\"height20\":\"elementNotificationsList_height20__2YQzW\",\"noTransacationsMsg\":\"elementNotificationsList_noTransacationsMsg__2YNHK\"};","export const POOLS_LIST_GET = 'POOLS_LIST_GET'\nexport const POOLS_LIST_UPDATE = 'POOLS_LIST_UPDATE'\nexport const POOLS_LIST_ITEM_READ = 'POOLS_LIST_ITEM_READ'\nexport const POOLS_LIST_ITEM_WRITE = 'POOLS_LIST_ITEM_WRITE'\nexport const POOLS_SINGLE_TRANSACTIONS_GET = 'POOLS_SINGLE_TRANSACTIONS_GET'\nexport const POOLS_SINGLE_DETAILS_GET = 'POOLS_SINGLE_DETAILS_GET'\nexport const POOLS_GROUP_DETAILS_GET = 'POOLS_GROUP_DETAILS_GET'\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../PoolsApi/src/contracts/abi'\n// import { BigNumber } from 'bignumber.js'\nimport { INFURA, KOVAN, PROD, WS } from './const'\nimport Web3 from 'web3'\nimport {\n    assetDataUtils,\n    BigNumber,\n    ContractWrappers,\n    generatePseudoRandomSalt,\n    Order,\n    orderHashUtils,\n    signatureUtils,\n    SignedOrder,\n    // SignatureType\n} from '0x.js'\nimport { Web3Wrapper } from '@0x/web3-wrapper'\n\n// import ReconnectingWebSocket from 'reconnectingwebsocket'\nimport PoolApi from '../PoolsApi/src'\nimport rp from 'request-promise'\n\n// const { signatureUtils, orderHashUtils } = require('@0x/order-utils')\nconst { MetamaskSubprovider } = require('@0x/subproviders')\nconst { SignatureType } = require('@0x/types')\n\nexport const setAllowaceOnExchangeThroughDrago = (\n  selectedFund,\n  token,\n  selectedExchange,\n  amount\n) => {\n  // var provider = account.source === 'MetaMask' ? window.web3 : api\n  const poolApi = new PoolApi(window.web3)\n  poolApi.contract.drago.init(selectedFund.details.address)\n\n  console.log(\n    'tokenTransferProxyAddress ',\n    selectedExchange.tokenTransferProxyAddress\n  )\n\n\n\n  return poolApi.contract.drago.setInfiniteAllowaceOnExchange(\n    selectedFund.managerAccount,\n    token.address,\n    selectedFund.details.address,\n    selectedExchange.tokenTransferProxyAddress,\n    amount\n  )\n}\n\n// export const getPricesFromRelayERCdEX = () => {\n//   console.log('Fetching tokens prices from ERCdEX')\n//   var options = {\n//     method: 'GET',\n//     url: `https://api.ercdex.com/api/reports/ticker`,\n//     qs: {},\n//     json: true // Automatically stringifies the body to JSON\n//   };\n//   console.log(options)\n//   return rp(options)\n// }\n\nexport const getOrdersFromRelayERCdEX = (\n  networkId,\n  maker,\n  baseTokenAddress,\n  quoteTokenAddress\n) => {\n\n  if (!networkId) {\n    throw new Error('networkId needs to be set')\n  }\n  if (!maker) {\n    throw new Error('maker needs to be set')\n  }\n  if (!baseTokenAddress) {\n    throw new Error('baseTokenAddress needs to be set')\n  }\n  if (!quoteTokenAddress) {\n    throw new Error('quoteTokenAddress needs to be set')\n  }\n  let options = {\n    method: 'GET',\n    url: `https://api.ercdex.com/api/standard/${networkId}/v0/orders`,\n    qs: {\n      maker: maker,\n      // tokenAddress: baseTokenAddress,\n      makerTokenAddress: baseTokenAddress,\n      takerTokenAddress: quoteTokenAddress\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n\nexport const getTradeHistoryLogsFromRelayERCdEX = (\n  networkId,\n  baseTokenAddress,\n  quoteTokenAddress\n) => {\n\n  if (!networkId) {\n    throw new Error('networkId needs to be set')\n  }\n  if (!baseTokenAddress) {\n    throw new Error('baseTokenAddress needs to be set')\n  }\n  if (!quoteTokenAddress) {\n    throw new Error('quoteTokenAddress needs to be set')\n  }\n  let options = {\n    method: 'GET',\n    url: `https://api.ercdex.com/api/trade_history_logs`,\n    qs: {\n      networkId: networkId,\n      token_address: baseTokenAddress,\n      taker_token_address: quoteTokenAddress,\n      maker_token_address: quoteTokenAddress\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n\nexport const getHistoricalPricesDataFromERCdEX = (\n  networkId,\n  baseTokenAddress,\n  quoteTokenAddress,\n  startDate\n) => {\n  if (!networkId) {\n    throw new Error('networkId needs to be set')\n  }\n  if (!baseTokenAddress) {\n    throw new Error('baseTokenAddress needs to be set')\n  }\n  if (!quoteTokenAddress) {\n    throw new Error('quoteTokenAddress needs to be set')\n  }\n  if (!startDate) {\n    throw new Error('startDate needs to be set')\n  }\n  let options = {\n    method: 'POST',\n    url: `https://api.ercdex.com/api/reports/historical`,\n    body: {\n      networkId: networkId,\n      baseTokenAddress: baseTokenAddress,\n      quoteTokenAddress: quoteTokenAddress,\n      startDate: startDate\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n  // console.log(options)\n  return rp(options)\n    .then(historical => {\n      return historical\n    })\n    .catch(error => {\n\n      return []\n    })\n}\n\n// export const getOrderBookFromRelayERCdEX = (networkId, baseTokenAddress, quoteTokenAddress) => {\n//   console.log('Fetching orderbook from ERCdEX')\n//   if (!networkId) {\n//     throw new Error('networkId needs to be set')\n//   }\n//   if (!baseTokenAddress) {\n//     throw new Error('baseTokenAddress needs to be set')\n//   }\n//   if (!quoteTokenAddress) {\n//     throw new Error('quoteTokenAddress needs to be set')\n//   }\n//   var options = {\n//     method: 'GET',\n//     url: `https://api.ercdex.com/api/standard/${networkId}/v0/orderbook`,\n//     qs: {\n//       baseTokenAddress: baseTokenAddress,\n//       quoteTokenAddress: quoteTokenAddress\n//     },\n//     json: true // Automatically stringifies the body to JSON\n//   };\n//   console.log(options)\n//   return rp(options)\n//   .then(orders => {\n//     console.log(orders)\n//     const bidsOrders = formatOrders(orders.bids, 'bids')\n//     const asksOrders = formatOrders(orders.asks, 'asks')\n//     var spread = 0\n//     if (bidsOrders.length !== 0 && asksOrders.length !== 0) {\n//       spread = new BigNumber(asksOrders[asksOrders.length-1].orderPrice).minus(new BigNumber(bidsOrders[0].orderPrice)).toFixed(5)\n//     } else {\n//       spread = new BigNumber(0).toFixed(5)\n//     }\n//     return {\n//       bids: bidsOrders,\n//       asks: asksOrders,\n//       spread\n//     }\n//   })\n// }\n\n// export const getAggregatedOrdersFromRelayERCdEX = (networkId, baseTokenAddress, quoteTokenAddress) => {\n//   console.log('Fetching aggregated orders from ERCdEX')\n//   if (!networkId) {\n//     throw new Error('networkId needs to be set')\n//   }\n//   if (!baseTokenAddress) {\n//     throw new Error('baseTokenAddress needs to be set')\n//   }\n//   if (!quoteTokenAddress) {\n//     throw new Error('quoteTokenAddress needs to be set')\n//   }\n//   var options = {\n//     method: 'GET',\n//     uri: `https://api.ercdex.com/api/aggregated_orders`,\n//     qs: {\n//       networkId: networkId,\n//       baseTokenAddress: baseTokenAddress,\n//       quoteTokenAddress: quoteTokenAddress\n//     },\n//     json: true // Automatically stringifies the body to JSON\n//   };\n//   console.log(options)\n//   return rp(options)\n//   .then(orders => {\n//     console.log(orders)\n//     const bidsOrders = formatOrdersFromAggregate(orders.buys.priceLevels, 'bids')\n//     console.log(bidsOrders)\n//     const asksOrders = formatOrdersFromAggregate(orders.sells.priceLevels, 'asks')\n//     console.log(asksOrders)\n//     var spread = 0\n//     console.log(asksOrders.length)\n//     if (bidsOrders.length !== 0 && asksOrders.length !== 0) {\n//       spread = new BigNumber(asksOrders[asksOrders.length-1].orderPrice).minus(new BigNumber(bidsOrders[0].orderPrice)).toFixed(5)\n//     } else {\n//       spread = new BigNumber(0).toFixed(5)\n//     }\n//     return {\n//       bids: bidsOrders,\n//       asks: asksOrders,\n//       spread,\n//       aggregated: true\n//     }\n//   })\n// }\n\n// export const formatOrdersFromAggregate = (orders) =>{\n//   var orderPrice, orderAmount\n//   let web3 = new Web3(Web3.currentProvider)\n//   var formattedOrders = orders.map((order) => {\n//     orderPrice = new BigNumber(order.price).toFixed(7)\n//     orderAmount = new BigNumber(web3.utils.fromWei(order.volume)).toFixed(5)\n//     var orderObject = {\n//       orderAmount,\n//       orderPrice,\n//     }\n//     return orderObject\n//   })\n//   return formattedOrders\n// }\n\nexport const formatOrders = (orders, orderType) => {\n  let orderPrice, orderAmount, remainingAmount\n  let web3 = new Web3(Web3.currentProvider)\n  let formattedOrders = orders.map(order => {\n    switch (orderType) {\n      case 'asks':\n        orderPrice = new BigNumber(order.takerAssetAmount)\n          .div(new BigNumber(order.makerAssetAmount))\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          web3.utils.fromWei(order.makerAssetAmount, 'ether')\n        ).toFixed(5)\n        remainingAmount = new BigNumber(\n          web3.utils.fromWei(order.remainingTakerTokenAmount, 'ether')\n        ).toFixed(5)\n        break\n      case 'bids':\n        orderPrice = new BigNumber(1)\n          .div(\n            new BigNumber(order.takerAssetAmount).div(\n              new BigNumber(order.makerAssetAmount)\n            )\n          )\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          web3.utils.fromWei(order.takerAssetAmount, 'ether')\n        ).toFixed(5)\n        remainingAmount = new BigNumber(\n          web3.utils.fromWei(order.remainingTakerTokenAmount, 'ether')\n        ).toFixed(5)\n        break\n      default:\n        orderPrice = new BigNumber(order.takerAssetAmount)\n          .div(new BigNumber(order.makerAssetAmount))\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          web3.utils.fromWei(order.makerAssetAmount, 'ether')\n        ).toFixed(5)\n        remainingAmount = new BigNumber(\n          web3.utils.fromWei(order.remainingTakerTokenAmount, 'ether')\n        ).toFixed(5)\n    }\n    let orderHash = orderHashUtils.getOrderHashHex(order)\n    let orderObject = {\n      order,\n      dateCreated: order.dateCreated,\n      orderAmount,\n      remainingAmount,\n      orderType,\n      orderPrice,\n      orderHash\n    }\n    return orderObject\n  })\n  return formattedOrders\n}\n\nexport const signOrder = async (order, selectedExchange, walletAddress) => {\n  const baseTokenDecimals = order.selectedTokensPair.baseToken.decimals\n  const quoteTokenDecimals = order.selectedTokensPair.quoteToken.decimals\n\n  let makerAssetAmount, takerAssetAmount\n  const fee_rate = 0.0025\n\n  switch (order.orderType) {\n    case 'asks':\n\n      makerAssetAmount = new BigNumber(order.orderFillAmount)\n      takerAssetAmount = new BigNumber(order.orderFillAmount).times(\n        new BigNumber(order.orderPrice)\n      )\n      .times(1 - fee_rate) // TODO: verify\n      makerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        makerAssetAmount,\n        baseTokenDecimals\n      )\n      takerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        takerAssetAmount,\n        quoteTokenDecimals\n      )\n      break\n    case 'bids':\n\n      makerAssetAmount = new BigNumber(order.orderFillAmount).times(\n        new BigNumber(order.orderPrice)\n      )\n      takerAssetAmount = new BigNumber(order.orderFillAmount)\n      .times(1 - fee_rate) // TODO: verify\n      makerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        makerAssetAmount,\n        quoteTokenDecimals\n      )\n      takerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        takerAssetAmount,\n        baseTokenDecimals\n      )\n      break\n    default:\n\n      makerAssetAmount = new BigNumber(order.orderFillAmount)\n      takerAssetAmount = new BigNumber(order.orderFillAmount).times(\n        new BigNumber(order.orderPrice)\n      )\n      .times(1 - fee_rate) // TODO: verify\n      makerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        makerAssetAmount,\n        baseTokenDecimals\n      )\n      takerAssetAmount = Web3Wrapper.toBaseUnitAmount(\n        takerAssetAmount,\n        quoteTokenDecimals\n      )\n      .times(1 - fee_rate) // TODO: verify\n      break\n  }\n  const tokensAmounts = {\n    makerAssetAmount,\n    takerAssetAmount\n  }\n  let orderToBeSigned = { ...order.details.order, ...tokensAmounts }\n  // const fees = await getFees(orderToBeSigned, selectedExchange.networkId)\n  // console.log(fees)\n  // orderToBeSigned = {\n  //   ...orderToBeSigned,\n  //   ...fees\n  // }\n  // console.log(orderToBeSigned)\n\n  const providerEngine = window.web3.currentProvider.isMetaMask\n                  ? new MetamaskSubprovider(window.web3.currentProvider)\n                  : window.web3.currentProvider\n\n  const contractWrappers = new ContractWrappers(providerEngine, { networkId: selectedExchange.networkId })\n  const web3Wrapper = new Web3Wrapper(providerEngine)\n  const signer = await web3Wrapper.getAvailableAddressesAsync()\n\n  const signedOrder = await signatureUtils.ecSignOrderAsync(\n    providerEngine,\n    orderToBeSigned,\n    signer[0],\n  )\n  const vrsSignature = await signedOrder.signature.slice(0, -2)\n  const walletSignature = await signatureUtils.convertToSignatureWithType(vrsSignature, SignatureType.Wallet)\n  signedOrder.signature = walletSignature\n  const typedSignedOrder = signedOrder\n\n  const orderHashHex = await orderHashUtils.getOrderHashHex(orderToBeSigned)\n  console.log(await signatureUtils.isValidWalletSignatureAsync(\n          providerEngine,\n          orderHashHex,\n          walletSignature,\n          signedOrder.makerAddress // dragoAddress\n    )\n  )\n\n  // console.log(signatureUtils.isValidSignature(orderHash, ecSignature, walletAddress))\n  // Append signature to order\n  /*const signedOrder = {\n    ...orderToBeSigned,\n    ecSignature\n  }*/\n  return typedSignedOrder\n}\n\nexport const submitOrderToRelayEFX = async (efxOrder, networkId) => {\n\n  // const ZeroExConfig = {\n  //   networkId: 42\n  //   // exchangeAddress: this._network.id\n  // }\n  let relayerApiUrl\n  switch (networkId) {\n    case 1:\n      relayerApiUrl = `https://api.ethfinex.com/trustless/v1/w/on`\n      break\n    case 3:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/on`\n      break\n    case 42:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/on`\n      break\n    default:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/on`\n  }\n  efxOrder.fee_rate = '0.0025'\n  let options = {\n    method: 'POST',\n    uri: relayerApiUrl,\n    body: efxOrder,\n    json: true // Automatically stringifies the body to JSON\n  }\n  return rp(options).catch(error => {\n    throw Error(error)\n  })\n}\n\nexport const cancelOrderFromRelayEFX = async (\n  orderId,\n  signature,\n  networkId\n) => {\n\n  // const ZeroExConfig = {\n  //   networkId: 42\n  //   // exchangeAddress: this._network.id\n  // }\n  let relayerApiUrl\n  switch (networkId) {\n    case 1:\n      relayerApiUrl = `https://api.ethfinex.com/trustless/v1/w/oc`\n      break\n    case 3:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/oc`\n      break\n    case 42:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/oc`\n      break\n    default:\n      relayerApiUrl = `https://test.ethfinex.com/trustless/v1/w/oc`\n  }\n\n  let options = {\n    method: 'POST',\n    uri: relayerApiUrl,\n    body: { orderId, signature, protocol: '0x' },\n    json: true // Automatically stringifies the body to JSON\n  }\n  return rp(options).catch(error => {\n    throw Error(error)\n  })\n}\n\nexport const submitOrderToRelay = async signedOrder => {\n\n  const ZeroExConfig = {\n    networkId: 42\n    // exchangeAddress: this._network.id\n  }\n  const relayerApiUrl = `https://api.ercdex.com/api/standard/${\n    ZeroExConfig.networkId\n  }/v0/order`\n  // const relayerClient = new HttpClient(relayerApiUrl);\n  // const response = await relayerClient.submitOrderAsync(signedOrder);\n  // console.log(response)\n  let options = {\n    method: 'POST',\n    uri: relayerApiUrl,\n    body: signedOrder,\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n\n/*\nexport const softCancelOrderFromRelayERCdEX = async signedOrder => {\n\n  const relayerApiUrl = `https://api.ercdex.com/api/orders/soft-cancel`\n  // const relayerClient = new HttpClient(relayerApiUrl);\n  // const response = await relayerClient.submitOrderAsync(signedOrder);\n  // console.log(response)\n\n  const signature = JSON.stringify(signedOrder.order.ecSignature)\n  const oderHash = ZeroEx.getOrderHashHex(signedOrder.order)\n  let options = {\n    method: 'POST',\n    uri: relayerApiUrl,\n    body: {\n      orderHash: oderHash,\n      signature: signature\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n*/\n\nexport const getFees = async (order, networkId) => {\n  const relayerApiUrl = `https://api.ercdex.com/api/fees`\n\n  let options = {\n    method: 'POST',\n    uri: relayerApiUrl,\n    qs: {\n      makerTokenAddress: order.makerTokenAddress,\n      takerTokenAddress: order.takerTokenAddress,\n      makerAssetAmount: new BigNumber(order.makerAssetAmount).toFixed(),\n      takerAssetAmount: new BigNumber(order.takerAssetAmount).toFixed(),\n      maker: order.makerAddress,\n      taker: order.takerAddress,\n      networkId: networkId\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n\n// TODO: verify return values\nexport const getTokenAllowance = async (token, ownerAddress, ZeroExConfig) => {\n  if (token.symbol === 'ETH') {\n    return true\n  }\n\n\n  const zeroEx = new ContractWrappers(window.web3.currentProvider, ZeroExConfig)\n  return zeroEx.token.getProxyAllowanceAsync(token.address, ownerAddress)\n}\n\n// TODO: verify return values\nexport const setTokenAllowance = async (\n  tokenAddress,\n  ownerAddress,\n  spenderAddress,\n  ZeroExConfig\n) => {\n  const zeroEx = new ContractWrappers(window.web3.currentProvider, ZeroExConfig)\n  return zeroEx.token.setUnlimitedAllowanceAsync(\n    tokenAddress,\n    ownerAddress,\n    spenderAddress\n  )\n}\n\nexport const getAvailableAccounts = async ZeroExConfig => {\n  const providerEngine = window.web3.currentProvider.isMetaMask\n                  ? new MetamaskSubprovider(window.web3.currentProvider)\n                  : window.web3.currentProvider\n/*\n  const ZeroExConfig = {\n    networkId: 42\n    // exchangeAddress: this._network.id\n  }*/\n  const contractWrappers = new ContractWrappers(providerEngine, { networkId: ZeroExConfig.networkId })\n  const web3Wrapper = new Web3Wrapper(providerEngine)\n  return await web3Wrapper.getAvailableAddressesAsync()\n}\n\nexport const getMarketTakerOrder = async (\n  makerTokenAddress,\n  takerTokenAddress,\n  baseTokenAddress,\n  quantity,\n  networkId,\n  takerAddress\n) => {\n  const relayerApiUrl = `https://api.ercdex.com/api/orders/best`\n\n  let options = {\n    method: 'GET',\n    uri: relayerApiUrl,\n    qs: {\n      makerTokenAddress,\n      takerTokenAddress,\n      baseTokenAddress,\n      quantity,\n      networkId,\n      takerAddress\n    },\n    json: true // Automatically stringifies the body to JSON\n  }\n\n  return rp(options)\n}\n\nexport const fillOrderToExchange = async (\n  signedOrder,\n  amount,\n  ZeroExConfig\n) => {\n  // const zeroEx = this._zeroEx\n  const DECIMALS = 18\n  const shouldThrowOnInsufficientBalanceOrAllowance = true\n  const zeroEx = new ContractWrappers(window.web3.currentProvider, ZeroExConfig)\n  const fillTakerTokenAmount = Web3Wrapper.toBaseUnitAmount(\n    new BigNumber(amount),\n    DECIMALS\n  )\n  const takerAddress = await zeroEx.getAvailableAddressesAsync()\n\n\n\n  const txHash = await zeroEx.exchange.fillOrderAsync(\n    signedOrder,\n    fillTakerTokenAmount,\n    shouldThrowOnInsufficientBalanceOrAllowance,\n    takerAddress[0],\n    {\n      shouldValidate: false\n    }\n  )\n  const txReceipt = await zeroEx.awaitTransactionMinedAsync(txHash)\n\n}\n\nexport const fillOrderToExchangeViaProxy = async (\n  selectedFund,\n  signedOrder,\n  amount,\n  ZeroExConfig\n) => {\n  // const zeroEx = this._zeroEx\n  const DECIMALS = 18\n\n  const order = signedOrder\n\n\n\n  const orderAddresses = [\n    order.makerAddress,\n    order.takerAddress,\n    order.makerAssetData,\n    order.takerAssetData,\n    order.feeRecipientAddress\n  ]\n  const orderValues = [\n    order.makerAssetAmount,\n    order.takerAssetAmount,\n    order.makerFee,\n    order.takerFee,\n    order.expirationTimeSeconds,\n    order.salt\n  ]\n  const v = order.ecSignature.v\n  const r = order.ecSignature.r\n  const s = order.ecSignature.s\n  const shouldThrowOnInsufficientBalanceOrAllowance = true\n  console.log(\n    orderAddresses,\n    orderValues,\n    Web3Wrapper.toBaseUnitAmount(new BigNumber(amount), DECIMALS).toString(),\n    shouldThrowOnInsufficientBalanceOrAllowance,\n    v,\n    r,\n    s\n  )\n\n  let poolApi = null\n  poolApi = new PoolApi(window.web3)\n  poolApi.contract.drago.init(selectedFund.details.address)\n  return poolApi.contract.drago.fillOrderOnZeroExExchange(\n    selectedFund.managerAccount,\n    orderAddresses,\n    orderValues,\n    Web3Wrapper.toBaseUnitAmount(new BigNumber(amount), DECIMALS).toString(),\n    shouldThrowOnInsufficientBalanceOrAllowance,\n    v,\n    r,\n    s,\n    ZeroExConfig\n  )\n}\n\nexport const cancelOrderOnExchangeViaProxy = async (\n  selectedFund,\n  signedOrder,\n  cancelTakerTokenAmount\n) => {\n  // const zeroEx = this._zeroEx\n  const DECIMALS = 18\n\n  const order = signedOrder\n\n\n\n  const orderAddresses = [\n    order.makerAddress,\n    order.takerAddress,\n    order.makerAssetData,\n    order.takerAssetData,\n    order.feeRecipientAddress\n  ]\n  const orderValues = [\n    order.makerAssetAmount,\n    order.takerAssetAmount,\n    order.makerFee,\n    order.takerFee,\n    order.expirationTimeSeconds,\n    order.salt\n  ]\n  console.log(\n    orderAddresses,\n    orderValues,\n    Web3Wrapper.toBaseUnitAmount(\n      new BigNumber(cancelTakerTokenAmount),\n      DECIMALS\n    ).toString()\n  )\n\n  let poolApi = null\n  poolApi = new PoolApi(window.web3)\n  poolApi.contract.drago.init(selectedFund.details.address)\n  return poolApi.contract.drago.cancelOrderOnZeroExExchange(\n    selectedFund.managerAccount,\n    orderAddresses,\n    orderValues,\n    Web3Wrapper.toBaseUnitAmount(\n      new BigNumber(cancelTakerTokenAmount),\n      DECIMALS\n    ).toString(),\n    signedOrder.exchangeAddress\n  )\n}\n\nclass Exchange {\n  constructor(\n    endpointInfo,\n    networkInfo = { name: KOVAN },\n    prod = PROD,\n    ws = WS\n  ) {\n    if (!endpointInfo) {\n      throw new Error(\n        'endpointInfo connection data needs to be provided to Endpoint'\n      )\n    }\n    if (!networkInfo) {\n      throw new Error('network name needs to be provided to Endpoint')\n    }\n    this._timeout = 1000\n    this._endpoint = endpointInfo\n    this._network = networkInfo\n    this._exchangeAddress = this._network.zeroExExchangeContractAddress\n    this._prod = prod\n    this._exchangeAbi = abis.zeroExExchange\n    this._tradeTokensPair = null\n    this._baseTokenAddress = null\n    this._quoteTokenAddress = null\n    this._supportedRelays = {\n      radarrelay: 'wss://ws.kovan.radarrelay.com/0x/v0/ws',\n      ercdex: 'https://api.ercdex.com/api/standard'\n    }\n    // Infura does not support WebSocket on Kovan network yet. Disabling.\n    this._onWs = ws\n    /*this._onWs =\n      this._network.name === KOVAN && this._endpoint.name === INFURA\n        ? false\n        : ws*/\n    // Setting production or development endpoints\n    if (prod) {\n      this._https = endpointInfo.https[this._network.name].prod\n      this._wss = endpointInfo.wss[this._network.name].prod\n    } else {\n      this._https = endpointInfo.https[this._network.name].dev\n      this._wss = endpointInfo.wss[this._network.name].dev\n    }\n\n    const ZeroExConfig = {\n      networkId: this._network.id\n      // exchangeAddress: this._network.id\n    }\n    this._zeroEx = new ContractWrappers(window.web3.currentProvider, ZeroExConfig)\n  }\n\n  get timeout() {\n    return this._timeout\n  }\n\n  set timeout(timeout) {\n    this._timeout = timeout\n  }\n\n  get tradeTokensPair() {\n    return this._tradeTokensPair\n  }\n\n  set tradeTokensPair(tradeTokensPair) {\n    this._baseTokenAddress = tradeTokensPair.baseToken.address\n    this._quoteTokenAddress = tradeTokensPair.quoteToken.address\n    this._tradeTokensPair = tradeTokensPair\n  }\n\n  init = () => {\n    let api\n    if (this._onWs) {\n      try {\n\n\n        api = new Web3(this._wss)\n        api._rb = {}\n        api._rb.network = this._network\n        this.api = api\n        return new api.eth.Contract(this._exchangeAbi, this._exchangeAddress)\n      } catch (error) {\n\n        return error\n      }\n    } else {\n      try {\n\n\n        api = new Web3(this._https)\n        api._rb = {}\n        api._rb.network = this._network\n        this.api = api\n        return new api.eth.Contract(this._exchangeAbi, this._exchangeAddress)\n      } catch (error) {\n\n        return error\n      }\n    }\n  }\n\n  formatOrders = (orders, orderType) => {\n    let orderPrice, orderAmount\n    let formattedOrders = orders.map(order => {\n      switch (orderType) {\n        case 'asks':\n          orderPrice = new BigNumber(order.takerAssetAmount)\n            .div(new BigNumber(order.makerAssetAmount))\n            .toFixed(7)\n          orderAmount = new BigNumber(\n            this.api.utils.fromWei(order.makerAssetAmount, 'ether')\n          ).toFixed(5)\n          break\n        case 'bids':\n          orderPrice = new BigNumber(1)\n            .div(\n              new BigNumber(order.takerAssetAmount).div(\n                new BigNumber(order.makerAssetAmount)\n              )\n            )\n            .toFixed(7)\n          orderAmount = new BigNumber(\n            this.api.utils.fromWei(order.takerAssetAmount, 'ether')\n          ).toFixed(5)\n          break\n        default:\n          orderPrice = new BigNumber(1)\n            .div(\n              new BigNumber(order.takerAssetAmount).div(\n                new BigNumber(order.makerAssetAmount)\n              )\n            )\n            .toFixed(7)\n          orderAmount = new BigNumber(\n            this.api.utils.fromWei(order.takerAssetAmount, 'ether')\n          ).toFixed(5)\n          break\n      }\n      let orderHash = orderHashUtils.getOrderHashHex(order)\n      let orderObject = {\n        order,\n        orderAmount,\n        orderType,\n        orderPrice,\n        orderHash\n      }\n      return orderObject\n    })\n    return formattedOrders\n  }\n\n  submitOrderToRelay = async signedOrder => {\n\n    const relayerApiUrl = 'https://api.kovan.radarrelay.com/0x/v0/order'\n    let options = {\n      method: 'POST',\n      uri: relayerApiUrl,\n      body: signedOrder,\n      json: true // Automatically stringifies the body to JSON\n    }\n\n    rp(options)\n      .then(function(parsedBody) {\n\n      })\n      .catch(function(err) {\n\n      })\n  }\n\n  updateOrderToOrderBook = (order, orders, action) => {\n\n    let orderPrice, orderAmount, orderType\n    this._baseTokenAddress === order.makerTokenAddress\n      ? (orderType = 'asks')\n      : (orderType = 'bids')\n    switch (orderType) {\n      case 'asks':\n        orderPrice = new BigNumber(order.takerAssetAmount)\n          .div(new BigNumber(order.makerAssetAmount))\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          this.api.utils.fromWei(order.makerAssetAmount, 'ether')\n        ).toFixed(5)\n        break\n      case 'bids':\n        orderPrice = new BigNumber(1)\n          .div(\n            new BigNumber(order.takerAssetAmount).div(\n              new BigNumber(order.makerAssetAmount)\n            )\n          )\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          this.api.utils.fromWei(order.takerAssetAmount, 'ether')\n        ).toFixed(5)\n        break\n      default:\n        orderPrice = new BigNumber(1)\n          .div(\n            new BigNumber(order.takerAssetAmount).div(\n              new BigNumber(order.makerAssetAmount)\n            )\n          )\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          this.api.utils.fromWei(order.takerAssetAmount, 'ether')\n        ).toFixed(5)\n        break\n    }\n    // var orderHash = ZeroEx.getOrderHashHex(order)\n    let orderObject = {\n      order,\n      orderAmount,\n      orderType,\n      orderPrice,\n      orderHash: order.orderHash\n    }\n    let newOrders = { ...orders }\n\n    switch (action) {\n      case 'add':\n\n        switch (orderType) {\n          case 'asks':\n            newOrders.asksOrders.push(orderObject)\n            break\n          case 'bids':\n            newOrders.bidsOrders.push(orderObject)\n            break\n          default:\n        }\n        break\n      case 'remove':\n\n        switch (orderType) {\n          case 'asks':\n            newOrders.asksOrders = orders.asksOrders.filter(oldOrder => {\n              return oldOrder.orderHash !== order.orderHash\n            })\n            break\n          case 'bids':\n            newOrders.bidsOrders = orders.bidsOrders.filter(oldOrder => {\n              return oldOrder.orderHash !== order.orderHash\n            })\n            break\n          default:\n        }\n        break\n      default:\n        newOrders = { ...orders }\n    }\n\n    return newOrders\n  }\n}\n\nexport default Exchange\n","export const ORDER_CREATE = 'ORDER_CREATE'\nexport const ORDER_UPDATE = 'ORDER_UPDATE'\nexport const ORDER_CANCEL = 'ORDER_CANCEL'\n","export * from './orders_const.js'\nexport * from './ui_const.js'\nexport * from './relay_const.js'\nexport * from './pools_const.js'\nexport * from './app_const.js'\n","// Copyright 2016-2017 Rigo Investment Sarl.\n\nimport * as TYPE_ from './const'\n\nconst endpoint = {\n  attachInterface: endpoint => {\n    return {\n      type: TYPE_.ATTACH_INTERFACE,\n      payload: {\n        endpoint\n      }\n    }\n  },\n  checkMetaMaskIsUnlocked: () => {\n    return {\n      type: TYPE_.CHECK_METAMASK_IS_UNLOCKED,\n      payload: {}\n    }\n  },\n  checkIsConnectedToNode: () => {\n    return {\n      type: TYPE_.CHECK_APP_IS_CONNECTED,\n      payload: {}\n    }\n  },\n  getAccountsTransactions: (poolAddress, accounts, options) => {\n    return {\n      type: TYPE_.GET_ACCOUNTS_TRANSACTIONS,\n      payload: {\n        poolAddress,\n        accounts,\n        options\n      }\n    }\n  },\n  monitorAccountsStart: () => {\n    return {\n      type: TYPE_.MONITOR_ACCOUNTS_START,\n      payload: {}\n    }\n  },\n  monitorAccountsStop: () => {\n    return {\n      type: TYPE_.MONITOR_ACCOUNTS_STOP,\n      payload: {}\n    }\n  },\n  updateInterface: endpoint => {\n    return {\n      type: TYPE_.UPDATE_INTERFACE,\n      payload: endpoint\n    }\n  }\n}\n\nexport default endpoint\n","// Copyright 2016-2017 Rigo Investment Sagl.\nimport * as TYPE_ from './const'\nimport {\n  connectRelay,\n  createOrder,\n  getRelayConfig,\n  updateOrder,\n  updateUiPanelProperties\n} from './exchange'\n\nconst exchange = {\n  connectRelay,\n  getRelayConfig,\n  createOrder,\n  updateOrder,\n  resetTokenPrice: () => {\n    return { type: TYPE_.RESET_TOKEN_PRICE }\n  },\n  updateTokenPrice: price => {\n    return {\n      type: TYPE_.UPDATE_CURRENT_TOKEN_PRICE,\n      payload: { current: price }\n    }\n  },\n  updateTradesHistory: payload => {\n    return {\n      type: TYPE_.TRADES_HISTORY_UPDATE,\n      payload: payload\n    }\n  },\n  resetTradesHistory: payload => {\n    return {\n      type: TYPE_.TRADES_HISTORY_RESET,\n      payload: payload\n    }\n  },\n  updateUiPanelProperties,\n  updateSelectedFund: payload => {\n    return {\n      type: TYPE_.UPDATE_SELECTED_FUND,\n      payload\n    }\n  },\n  monitorEventsStart: (fund, tokens, exchange, networkInfo) => {\n    return {\n      type: TYPE_.MONITOR_EXCHANGE_EVENTS_START,\n      payload: { fund, tokens, exchange, networkInfo }\n    }\n  },\n  monitorEventsStop: exchange => {\n    return {\n      type: TYPE_.MONITOR_EXCHANGE_EVENTS_STOP,\n      payload: exchange\n    }\n  },\n  cancelSelectedOrder: () => {\n    return {\n      type: TYPE_.ORDER_CANCEL\n    }\n  },\n  getAccountOrdersStart: (relay, networkId, account, baseToken, quoteToken) => {\n    const payload = {\n      relay,\n      networkId,\n      account,\n      baseToken,\n      quoteToken\n    }\n    return {\n      type: TYPE_.FETCH_ACCOUNT_ORDERS_START,\n      payload: payload\n    }\n  },\n  getAccountOrdersStop: () => {\n    const payload = {}\n    return {\n      type: TYPE_.FETCH_ACCOUNT_ORDERS_STOP,\n      payload: payload\n    }\n  },\n  fetchCandleDataSingleStart: (\n    relay,\n    networkId,\n    baseToken,\n    quoteToken,\n    startDate\n  ) => {\n    const payload = {\n      relay,\n      networkId,\n      baseToken,\n      quoteToken,\n      startDate\n    }\n    return {\n      type: TYPE_.FETCH_CANDLES_DATA_SINGLE_START,\n      payload: payload\n    }\n  },\n  fetchCandleDataSingleStop: () => {\n    return {\n      type: TYPE_.FETCH_CANDLES_DATA_SINGLE_STOP,\n      payload: ''\n    }\n  },\n  // Starts collecting chart data for Drago details pages\n  getPortfolioChartDataStart: (relay, networkId, startDate) => {\n    const payload = {\n      relay,\n      networkId,\n      startDate\n    }\n    return {\n      type: TYPE_.FETCH_CANDLES_DATA_PORTFOLIO_START,\n      payload: payload\n    }\n  },\n  // Stops collecting chart data for Drago details pages\n  getPortfolioChartDataStop: () => {\n    return {\n      type: TYPE_.FETCH_CANDLES_DATA_PORTFOLIO_STOP\n    }\n  },\n  getTradeHistoryLogs: (networkId, baseTokenAddress, quoteTokenAddress) => {\n    const payload = {\n      networkId,\n      baseTokenAddress,\n      quoteTokenAddress\n    }\n    return {\n      type: TYPE_.FETCH_HISTORY_TRANSACTION_LOGS,\n      payload: payload\n    }\n  },\n  relayCloseWs: () => {\n    return {\n      type: TYPE_.RELAY_CLOSE_WEBSOCKET,\n      payload: {}\n    }\n  },\n  relayGetOrders: (relay, networkId, baseToken, quoteToken, aggregated) => {\n    return {\n      type: TYPE_.RELAY_GET_ORDERS,\n      payload: {\n        relay,\n        networkId,\n        baseToken,\n        quoteToken,\n        aggregated\n      }\n    }\n  },\n  relayOpenWsTicker: (relay, networkId, baseToken, quoteToken) => {\n    return {\n      type: TYPE_.RELAY_OPEN_WEBSOCKET_TICKER,\n      payload: {\n        relay,\n        networkId,\n        baseToken,\n        quoteToken\n      }\n    }\n  },\n  relayOpenWsBook: (relay, networkId, baseToken, quoteToken) => {\n    return {\n      type: TYPE_.RELAY_OPEN_WEBSOCKET_BOOK,\n      payload: {\n        relay,\n        networkId,\n        baseToken,\n        quoteToken\n      }\n    }\n  },\n  setAggregateOrders: isInputChecked => {\n    return {\n      type: TYPE_.SET_ORDERBOOK_AGGREGATE_ORDERS,\n      payload: isInputChecked\n    }\n  },\n  updateSelectedRelay: payload => {\n    return {\n      type: TYPE_.UPDATE_SELECTED_RELAY,\n      payload: payload\n    }\n  },\n  updateSelectedExchange: payload => {\n    return {\n      type: TYPE_.UPDATE_SELECTED_EXCHANGE,\n      payload: payload\n    }\n  },\n  updateSelectedTradeTokensPair: tradeTokensPair => {\n    return {\n      type: TYPE_.UPDATE_TRADE_TOKENS_PAIR,\n      payload: tradeTokensPair\n    }\n  },\n  updateAvailableTradeTokensPairs: payload => {\n    return {\n      type: TYPE_.UPDATE_AVAILABLE_TRADE_TOKENS_PAIRS,\n      payload: payload\n    }\n  },\n\n  updateLiquidityAndTokenBalances: (task, dragoAddress) => {\n    switch (task) {\n      case 'START':\n        return {\n          type: TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_START,\n          payload: {}\n        }\n      case 'STOP':\n        return {\n          type: TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_STOP,\n          payload: {}\n        }\n      case 'RESET':\n        return {\n          type: TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_RESET,\n          payload: {}\n        }\n      default:\n        return {\n          type: TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE,\n          payload: {\n            dragoAddress\n          }\n        }\n    }\n  },\n  updateAvailableFunds: payload => {\n    return {\n      type: TYPE_.UPDATE_AVAILABLE_FUNDS,\n      payload: payload\n    }\n  },\n  updateAvailableRelays: payload => {\n    return {\n      type: TYPE_.UPDATE_AVAILABLE_RELAYS,\n      payload: payload\n    }\n  },\n  updateAccountSignature: payload => {\n    return {\n      type: TYPE_.UPDATE_ACCOUNT_SIGNATURE,\n      payload: payload\n    }\n  }\n}\n\nexport default exchange\n","// Copyright 2016-2017 Rigo Investment Sarl.\n\nimport * as TYPE_ from './const'\n\nconst notifications = {\n  initNotificationsSystemAction: notificationSystem => {\n    return {\n      type: TYPE_.INIT_NOTIFICATION,\n      payload: notificationSystem\n    }\n  },\n  queueWarningNotification: message => {\n    return {\n      type: TYPE_.QUEUE_WARNING_NOTIFICATION,\n      payload: message\n    }\n  },\n  queueErrorNotification: error => {\n    return {\n      type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n      payload: error\n    }\n  }\n}\n\nexport default notifications\n","// Copyright 2016-2017 Rigo Investment Sarl.\n\nimport {\n  TOKEN_PRICE_TICKERS_FETCH_START,\n  TOKEN_PRICE_TICKERS_FETCH_STOP\n} from './const'\n\nconst tokens = {\n  priceTickersStart: (relay, networkId, assetsList = {}) => {\n    const payload = {\n      relay,\n      networkId,\n      assetsList\n    }\n    return {\n      type: TOKEN_PRICE_TICKERS_FETCH_START,\n      payload\n    }\n  },\n  priceTickersStop: () => {\n    return {\n      type: TOKEN_PRICE_TICKERS_FETCH_STOP\n    }\n  }\n}\n\nexport default tokens\n","// Copyright 2016-2017 Rigo Investment Sarl.\n\nimport { ADD_TRANSACTION } from './const'\n\nconst transactions = {\n  addTransactionToQueueAction: (transactionId, transactionDetails) => {\n    return {\n      type: ADD_TRANSACTION,\n      payload: { transactionId, transactionDetails }\n    }\n  }\n}\n\nexport default transactions\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { IS_MANAGER } from './const'\nimport { app, drago, pools, vault } from './dapp/'\nimport endpoint from './endpoint_actions'\nimport exchange from './exchange_actions'\nimport notifications from './notifications_actions'\nimport tokens from './tokens_actions'\nimport transactions from './transactions'\n\nclass actions {\n  app = app\n\n  drago = drago\n\n  pools = pools\n\n  exchange = exchange\n\n  endpoint = endpoint\n\n  notifications = notifications\n\n  transactions = transactions\n\n  vault = vault\n\n  users = {\n    isManagerAction: isManager => {\n      return {\n        type: IS_MANAGER,\n        payload: isManager\n      }\n    }\n  }\n\n  tokens = tokens\n}\n\nlet Actions = new actions()\nexport { Actions }\n","import {\n  MSG_NETWORK_STATUS_ERROR,\n  MSG_NETWORK_STATUS_OK,\n  NETWORK_OK,\n  NETWORK_WARNING\n} from '../const'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport Web3 from 'web3'\nimport utils from '../utils'\n\nexport const updateAccounts = async (api, blockNumber, endpoint) => {\n  let newEndpoint = {}\n  const prevBlockNumber = endpoint.prevBlockNumber\n  const prevNonce = endpoint.prevNonce\n  let newBlockNumber = new BigNumber(0)\n  let notifications = Array(0)\n  let fetchTransactions = false\n  // Checking if blockNumber is passed by Parity Api or Web3\n  if (typeof blockNumber.number !== 'undefined') {\n    newBlockNumber = new BigNumber(blockNumber.number)\n  } else {\n    newBlockNumber = blockNumber\n  }\n\n\n  // console.log(`endpoint_epic -> Last nonce: ` + prevNonce)\n\n  if (new BigNumber(prevBlockNumber).gte(new BigNumber(newBlockNumber))) {\n    console.log(\n      `endpoint_epic -> Detected prevBlockNumber > currentBlockNumber. Skipping accounts update.`\n    )\n    newEndpoint = {\n      prevBlockNumber: prevBlockNumber\n    }\n    return [newEndpoint, notifications, fetchTransactions]\n  }\n\n  const prevAccounts = [].concat(endpoint.accounts)\n  if (prevAccounts.length !== 0) {\n    let newNonce\n    try {\n      newNonce = await api.eth\n        .getTransactionCount(prevAccounts[0].address)\n        .catch(err => err)\n    } catch (err) {\n      console.warn(`Error getTransactionCount`)\n      return new Error(err)\n    }\n\n    newNonce = new BigNumber(newNonce).toFixed()\n    // console.log(`endpoint_epic -> New nonce: ` + newNonce)\n    try {\n      const poolApi = new PoolApi(api)\n      await poolApi.contract.rigotoken.init()\n\n      // Checking GRG balance\n      const grgQueries = prevAccounts.map(account => {\n        return poolApi.contract.rigotoken\n          .balanceOf(account.address)\n          .catch(err => {\n            console.warn('Error grgQueries')\n            return new Error(err)\n          })\n      })\n\n      // Checking ETH balance\n      const ethQueries = prevAccounts.map(account => {\n        return api.eth.getBalance(account.address, 'latest').catch(err => {\n          console.warn('Error ethQueries')\n          return new Error(err)\n        })\n      })\n\n      let ethBalances\n      let grgBalances\n      try {\n        ethBalances = await Promise.all(ethQueries).catch(err => err)\n        grgBalances = await Promise.all(grgQueries).catch(err => err)\n      } catch (err) {\n        console.warn(err)\n        return new Error(err)\n      }\n      // const prevAccounts = [].concat(endpoint.accounts)\n      prevAccounts.forEach(function(account, index) {\n        // Checking ETH balance\n        const newEthBalance = new BigNumber(ethBalances[index])\n        const prevEthBalance = new BigNumber(account.ethBalanceWei)\n        // console.log(\n        //   `Old balance at block ${prevBlockNumber} -> ${prevEthBalance.toFixed()}`\n        // )\n        // console.log(\n        //   `New balance at block ${newBlockNumber} -> ${newEthBalance.toFixed()}`\n        // )\n        if (\n          !new BigNumber(newEthBalance).eq(prevEthBalance) &&\n          Number(prevBlockNumber) !== 0 &&\n          Number(prevNonce) !== 0\n        ) {\n\n          fetchTransactions = true\n          let secondaryText = []\n          let balDifference = prevEthBalance.minus(newEthBalance)\n          const balDifString = new BigNumber(\n            Web3.utils.fromWei(balDifference.toString(16))\n          ).toFixed(3)\n          if (balDifference.gt(new BigNumber(0))) {\n\n            secondaryText[0] = `You transferred ${balDifString} ETH!`\n            secondaryText[1] = utils.dateFromTimeStamp(new Date())\n          } else {\n            console.log(\n              `endpoint_epic -> You received ${Math.abs(balDifString)} ETH!`\n            )\n            secondaryText[0] = `You received ${Math.abs(balDifString)} ETH!`\n            secondaryText[1] = utils.dateFromTimeStamp(new Date())\n          }\n          if (endpoint.accountsBalanceError === false) {\n            notifications.push({\n              primaryText: account.name,\n              secondaryText: secondaryText,\n              eventType: 'transfer'\n            })\n          }\n        }\n\n        // Checking GRG balance\n        const newgrgBalance = new BigNumber(grgBalances[index])\n        const prevGrgBalance = new BigNumber(account.grgBalanceWei)\n        // console.log(newgrgBalance, prevGrgBalance)\n        if (\n          !new BigNumber(newgrgBalance).eq(prevGrgBalance) &&\n          Number(prevBlockNumber) !== 0 &&\n          Number(prevNonce) !== 0\n        ) {\n\n          fetchTransactions = true\n          let secondaryText = []\n          let balDifference = prevGrgBalance.minus(newgrgBalance)\n          const balDifString = new BigNumber(\n            Web3.utils.fromWei(balDifference.toString(16))\n          ).toFixed(3)\n          if (balDifference.gt(new BigNumber(0))) {\n\n            secondaryText[0] = `You transferred ${balDifString} GRG!`\n            secondaryText[1] = utils.dateFromTimeStamp(new Date())\n          } else {\n            console.log(\n              `endpoint_epic -> You received ${Math.abs(balDifString)} GRG!`\n            )\n            secondaryText[0] = `You received ${Math.abs(balDifString)} GRG!`\n            secondaryText[1] = utils.dateFromTimeStamp(new Date())\n          }\n          if (endpoint.accountsBalanceError === false) {\n            notifications.push({\n              primaryText: account.name,\n              secondaryText: secondaryText,\n              eventType: 'transfer'\n            })\n          }\n        }\n      })\n      newEndpoint = {\n        prevBlockNumber: newBlockNumber.toFixed(),\n        prevNonce: newNonce,\n        loading: false,\n        networkError: NETWORK_OK,\n        networkStatus: MSG_NETWORK_STATUS_OK,\n        accountsBalanceError: false,\n        grgBalance: grgBalances.reduce(\n          (total, balance) => total.plus(balance),\n          new BigNumber(0)\n        ),\n        ethBalance: ethBalances.reduce(\n          (total, balance) => total.plus(balance),\n          new BigNumber(0)\n        ),\n        accounts: [].concat(\n          prevAccounts.map((account, index) => {\n            let newAccount = { ...account }\n            const ethBalance = ethBalances[index]\n            newAccount.ethBalance = new BigNumber(\n              Web3.utils.fromWei(ethBalance)\n            ).toFixed(3)\n            newAccount.ethBalanceWei = new BigNumber(ethBalance)\n            const grgBalance = grgBalances[index]\n            newAccount.grgBalance = new BigNumber(\n              Web3.utils.fromWei(grgBalance)\n            ).toFixed(3)\n            newAccount.grgBalanceWei = new BigNumber(grgBalance)\n            return newAccount\n          })\n        )\n      }\n      return [newEndpoint, notifications, fetchTransactions]\n    } catch (error) {\n      console.warn(`endpoint_epic -> ${error}`)\n      // Setting the balances to 0 if receiving an error from the endpoint. It happens with Infura.\n      newEndpoint = {\n        prevBlockNumber: newBlockNumber.toFixed(),\n        loading: false,\n        networkError: NETWORK_WARNING,\n        networkStatus: MSG_NETWORK_STATUS_ERROR,\n        accountsBalanceError: true\n      }\n      return [newEndpoint, notifications, fetchTransactions]\n    }\n  } else {\n    const newEndpoint = { ...endpoint }\n    newEndpoint.loading = false\n    newEndpoint.prevBlockNumber = newBlockNumber.toFixed()\n    return [newEndpoint, notifications, fetchTransactions]\n  }\n}\n","// import * as abis from '../PoolsApi/src/contracts/abi'\nimport { APP, DS } from './const'\nimport { DRG_ISIN } from './const'\nimport { ERCdEX, Ethfinex } from './const'\nimport { MOCK_ERC20_TOKENS } from './tokens'\nimport { dateFromTimeStampHuman } from './misc'\nimport {\n  filterPools,\n  getDragoDetails,\n  getDragoLiquidityAndTokenBalances,\n  getPoolsGroupDetails,\n  getTokenWrapperLockTime,\n  getTransactionsDragoOptV2,\n  getTransactionsSingleDrago,\n  getTransactionsSingleVault,\n  getTransactionsVaultOptV2,\n  getVaultDetails\n} from './pools'\nimport { getBlockChunks } from './blockChain'\nimport { toBaseUnitAmount, toUnitAmount } from './format'\nimport { updateAccounts } from './accounts'\nimport BigNumber from 'bignumber.js'\nimport ElementNotification from '../_atomic/molecules/elementNotification'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport PoolApi from '../PoolsApi/src'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Web3Wrapper from './web3Wrapper/src'\nimport palette from './palete'\n\nclass NotificationAlert extends Component {\n  static propTypes = {\n    primaryText: PropTypes.string.isRequired,\n    secondaryText: PropTypes.string.isRequired,\n    eventType: PropTypes.string.isRequired\n  }\n\n  render(primaryText, secondaryText, eventType) {\n    return (\n      <MuiThemeProvider>\n        <ElementNotification\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          eventType={eventType}\n          eventStatus=\"executed\"\n          txHash=\"\"\n        />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nclass utilities {\n  blockChunks = getBlockChunks\n  filterPools = filterPools\n\n  sign = (toSign, account) => {\n    // metamask will take care of the 3rd parameter, \"password\"\n    if (window.web3.currentProvider.isMetaMask) {\n      return window.web3.eth.personal.sign(toSign, account)\n    } else {\n      return window.web3.eth.sign(toSign, account)\n    }\n  }\n  generateMockAssets = (network = 'mainnet') => {\n    let mockAssets = MOCK_ERC20_TOKENS[network]\n    delete mockAssets.ETH\n    for (let key in mockAssets) {\n      let tokenBalance = new BigNumber(Math.floor(Math.random() * 400) + 1)\n      let wrapperBalance = new BigNumber(Math.floor(Math.random() * 400) + 1)\n      let totalBalance = tokenBalance.plus(wrapperBalance)\n      mockAssets[key].balances = {\n        token: toBaseUnitAmount(tokenBalance, mockAssets[key].decimals),\n        wrappers: {\n          Ethfinex: toBaseUnitAmount(wrapperBalance, mockAssets[key].decimals)\n        },\n        total: toBaseUnitAmount(totalBalance, mockAssets[key].decimals)\n      }\n    }\n    return mockAssets\n  }\n\n  updateAccounts = updateAccounts\n\n  // formatFromWei = amount => {\n  //   const web3 = new Web3()\n  //   try {\n  //     return new BigNumber(web3.utils.fromWei(web3.utils.toBN(amount))).toFixed(\n  //       3\n  //     )\n  //   } catch (err) {\n  //     return new BigNumber(web3.utils.fromWei(web3.utils.toBN(amount))).toFixed(\n  //       3\n  //     )\n  //   }\n  // }\n\n  ethfinexTickersToArray = assets => {\n    let assetArray = Array(0)\n    for (let token in assets) {\n      if (!['ETH', 'WETH', 'USDT', 'ETHW'].includes(assets[token].symbol)) {\n        assetArray.push(`${assets[token].symbolTicker.Ethfinex}ETH`)\n      }\n    }\n    assetArray.push(`ETHUSD`)\n    return assetArray\n  }\n\n  formatToWei = number => {\n    const web3 = new Web3()\n    try {\n      return web3.utils.toWei(number)\n    } catch (err) {\n      return err\n    }\n  }\n\n  getTokenSymbolForRelay = (relayName, token) => {\n    switch (relayName) {\n      case ERCdEX:\n        return token.address\n      case Ethfinex:\n        return token.symbolTicker[Ethfinex]\n      default:\n        throw new Error('Relay unknown')\n    }\n  }\n\n  notificationError = (notificationEngine, notification, level = 'error') => {\n    try {\n      const messageFirstLine =\n        typeof notification === 'string'\n          ? notification.split(/\\r?\\n/)\n          : notification.message.split(/\\r?\\n/)\n      notificationEngine.addNotification({\n        level: level,\n        title: level.toUpperCase(),\n        message: messageFirstLine[0],\n        position: 'br',\n        autoDismiss: 10\n      })\n    } catch (err) {\n      console.warn(err)\n    }\n  }\n\n  notificationAccount = (notificationEngine, message, level = 'info') => {\n    try {\n      let comp = new NotificationAlert([message])\n      notificationEngine.addNotification({\n        level: level,\n        title: level,\n        position: 'br',\n        autoDismiss: 10,\n        children: comp.render(\n          message.primaryText,\n          message.secondaryText,\n          message.eventType\n        )\n      })\n    } catch (err) {\n\n    }\n  }\n\n  availableTradeTokensPair = (\n    tradeTokensPairs,\n    selectedRelayName,\n    networkId\n  ) => {\n    let availableTokens = {}\n    for (let baseToken in tradeTokensPairs) {\n      Object.keys(tradeTokensPairs[baseToken]).forEach(key => {\n        let quoteToken = tradeTokensPairs[baseToken][key]\n        if (\n          quoteToken.exchanges.includes(selectedRelayName) &&\n          quoteToken.networks.includes(networkId)\n        ) {\n          if (typeof availableTokens[baseToken] === 'undefined') {\n            availableTokens[baseToken] = {}\n          }\n          availableTokens[baseToken][key] = tradeTokensPairs[baseToken][key]\n        }\n      })\n    }\n    return availableTokens\n  }\n\n  availableRelays = (relays, networkId) => {\n    let availableRelays = {}\n    Object.keys(relays).forEach(key => {\n      if (relays[key].supportedNetworks.includes(networkId.toString())) {\n        availableRelays[key] = relays[key]\n      }\n    })\n\n    return availableRelays\n  }\n\n  calculatePortfolioValue = (dragoAssetsList, assetsPrices) => {\n    const totalValue = dragoAssetsList.reduce((total, asset) => {\n      if (typeof assetsPrices[asset.symbol] !== 'undefined') {\n        if (typeof assetsPrices[asset.symbol].priceEth !== 'undefined') {\n          if (assetsPrices[asset.symbol].priceEth !== null) {\n            const value = new BigNumber(\n              assetsPrices[asset.symbol].priceEth\n            ).times(\n              toUnitAmount(new BigNumber(asset.balances.total), asset.decimals)\n            )\n            return total.plus(value)\n          }\n        } else {\n          return total.plus(0)\n        }\n      }\n      return total.plus(0)\n    }, new BigNumber(0))\n\n    return totalValue.toFixed(5)\n  }\n\n  calculatePieChartPortfolioValue = (\n    dragoAssetsList,\n    assetsPrices,\n    dragoETHBalance\n  ) => {\n    try {\n      let labels = Array(0)\n      let data = Array(0)\n      dragoAssetsList.forEach(asset => {\n        if (typeof assetsPrices[asset.symbol] !== 'undefined') {\n          if (typeof assetsPrices[asset.symbol].priceEth !== 'undefined') {\n            const value = new BigNumber(\n              assetsPrices[asset.symbol].priceEth\n            ).times(\n              toUnitAmount(\n                new BigNumber(asset.balances.total),\n                asset.decimals\n              ).toFixed(5)\n            )\n            labels.push(asset.symbol)\n            data.push(value.toFixed(5))\n          }\n        }\n      })\n      data.push(new BigNumber(dragoETHBalance).toFixed(5))\n      labels.push('ETH')\n      return {\n        datasets: [\n          {\n            data,\n            backgroundColor: palette('tol', data.length).map(function (hex) {\n              return '#' + hex\n            })\n          }\n        ],\n        labels\n      }\n    } catch (err) {\n      console.warn(err)\n    }\n  }\n\n  dateFromTimeStamp = timestamp => {\n    if (typeof timestamp === 'string') {\n      timestamp = new Date(timestamp)\n    }\n    const day = ('0' + timestamp.getDate()).slice(-2)\n    const month = ('0' + (timestamp.getMonth() + 1)).slice(-2)\n    function addZero(i) {\n      return i < 10 ? '0' + i : i\n    }\n    return (\n      timestamp.getFullYear() +\n      '-' +\n      month +\n      '-' +\n      day +\n      ' ' +\n      addZero(timestamp.getHours()) +\n      ':' +\n      addZero(timestamp.getMinutes()) +\n      ':' +\n      addZero(timestamp.getSeconds())\n    )\n  }\n\n  dateFromTimeStampHuman = dateFromTimeStampHuman\n\n  // This funcions needs to be rewritten to work async.\n  updateTransactionsQueue = (api, recentTransactions) => {\n    let checkTransaction = true\n    // let shouldTransactionListUpdate = false\n    let newRecentTransactions = new Map(recentTransactions)\n    newRecentTransactions.forEach(value => {\n      if (value.status === 'executed' || value.status === 'error') {\n        return\n      }\n      // 1.1 Checking if it's a transaction belonging to a Parity account\n      if (value.parityId) {\n        // 1.2 Checking if the transaction has been accepted (it has got an blockNumber)\n\n        if (typeof value.receipt !== 'undefined') {\n\n          // 1.3 Checing if it has blocknumber. It it has it, then no need to proceed further.\n          value.receipt.blockNumber.eq(0)\n            ? (checkTransaction = true)\n            : (checkTransaction = false)\n        }\n        if (!checkTransaction) {\n          return null\n        }\n\n        api.parity\n          .checkRequest(value.parityId, [])\n          .then(hash => {\n            if (hash) {\n              value.hash = hash\n              api.eth.getTransactionByHash(hash).then(receipt => {\n                value.receipt = receipt\n                if (receipt.blockHash) {\n\n                  value.status = 'executed'\n                  value.timestamp = new Date()\n                  // shouldTransactionListUpdate = true\n                } else {\n\n                  value.status = 'pending'\n                  value.timestamp = new Date()\n                  // shouldTransactionListUpdate = true\n                }\n              })\n            }\n          })\n          .catch(error => {\n            // console.log(error)\n            value.status = 'error'\n            value.error = error\n            value.timestamp = new Date()\n            // shouldTransactionListUpdate = true\n          })\n      }\n    })\n    return newRecentTransactions\n  }\n\n  getTransactionsVaultOptV2 = getTransactionsVaultOptV2\n\n  getTransactionsDragoOptV2 = getTransactionsDragoOptV2\n\n  getTransactionsSingleDrago = getTransactionsSingleDrago\n\n  getTransactionsSingleVault = getTransactionsSingleVault\n\n  getPoolDetailsFromId = async (dragoId, networkInfo) => {\n    let api = Web3Wrapper.getInstance(networkInfo.id)\n    const poolApi = new PoolApi(api)\n    await poolApi.contract.dragoregistry.init()\n    const dragoDetails = await poolApi.contract.dragoregistry.fromId(dragoId)\n    return dragoDetails\n  }\n\n  getDragoDetails = getDragoDetails\n\n  getVaultDetails = getVaultDetails\n\n  getPoolsGroupDetails = getPoolsGroupDetails\n\n  getTokenWrapperLockTime = getTokenWrapperLockTime\n\n  getDragoLiquidity = async (dragoAddress, api) => {\n    const poolApi = new PoolApi(api)\n    poolApi.contract.drago.init(dragoAddress)\n    const dragoETHBalance = await poolApi.contract.drago.getBalance()\n    // const dragoWETHBalance = await poolApi.contract.drago.getBalanceWETH()\n    // const dragoZRXBalance = await poolApi.contract.drago.getBalanceZRX()\n    // console.log(dragoETHBalance, dragoWETHBalance, dragoZRXBalance)\n    // return [dragoETHBalance, dragoWETHBalance, dragoZRXBalance]\n    return [dragoETHBalance]\n  }\n\n  getDragoLiquidityAndTokenBalances = getDragoLiquidityAndTokenBalances\n\n  shallowEqual(objA, objB, component = '') {\n    if (objA === objB) {\n      // console.log(`shallowEqual -> objA === objB -> ${component}`)\n      return true\n    }\n\n    if (\n      typeof objA !== 'object' ||\n      objA === null ||\n      typeof objB !== 'object' ||\n      objB === null\n    ) {\n      // console.log(`shallowEqual-> objA !== 'object' -> ${component}`)\n      return false\n    }\n\n    let keysA = Object.keys(objA)\n    let keysB = Object.keys(objB)\n\n    if (keysA.length !== keysB.length) {\n      // console.log(`shallowEqual -> keysA.length  -> ${component}`)\n      return false\n    }\n\n    // Test for A's keys different from B.\n    let bHasOwnProperty = hasOwnProperty.bind(objB)\n    for (let i = 0; i < keysA.length; i++) {\n      if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n        // console.log(objA[keysA[i]], objB[keysA[i]])\n        // console.log(\n        //   `shallowEqual -> Test for A's keys different from B  -> ${component}`\n        // )\n        return false\n      }\n    }\n    return true\n  }\n\n  pathExplode(path) {\n    let explodedPath = path.pathname.split('/')\n    return explodedPath\n  }\n\n  rootPath(location) {\n    let path = location.split('/')\n    // path.splice(-1,1);\n    // var url = path.join('/');\n    return DS + APP + DS + path[2]\n  }\n\n  pathLast(path) {\n    return path.pathname.split('/').pop()\n  }\n\n  customRelayAction = action => {\n    // console.log(`${Ethfinex.toUpperCase()}_${action}`)\n    return `${Ethfinex.toUpperCase()}_${action}`\n  }\n\n  poolISIN(symbol, dragoId, options = { array: false }) {\n    dragoId = dragoId.toString()\n    let padding = dragoId.padStart(7, '0')\n    const isinArray = [\n      DRG_ISIN,\n      padding.slice(0, padding.length - dragoId.length),\n      dragoId,\n      symbol.toUpperCase()\n    ]\n    return options.array ? isinArray : isinArray.join('')\n  }\n\n  logger = (function () {\n    let pub = {}\n\n    pub.enable = function enableLogger() {\n      if (this.oldConsoleLog == null) return\n\n      window['console']['log'] = this.oldConsoleLog\n    }\n\n    pub.disable = function disableLogger() {\n      this.oldConsoleLog = console.log\n      window['console']['log'] = function () { }\n    }\n\n    return pub\n  })()\n}\n\nconst utils = new utilities()\n\nexport default utils\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"networkIconClosed\":\"elements_networkIconClosed__A5nwx\",\"networkIconOpen\":\"elements_networkIconOpen__3DQwA\",\"maincontainer\":\"elements_maincontainer__PFHCb\",\"leftDrawer\":\"elements_leftDrawer__3Hl35\",\"containerleftDrawer\":\"elements_containerleftDrawer__S2esg\",\"menu\":\"elements_menu__2b-Yk\",\"activeLink\":\"elements_activeLink__1QFwh\",\"selected\":\"elements_selected__1Dw39\",\"notifications\":\"elements_notifications__31nNJ\",\"menuItemPrimaryText\":\"elements_menuItemPrimaryText__23C8K\",\"menuAccountType\":\"elements_menuAccountType__1-zaA\",\"responsiveLinks\":\"elements_responsiveLinks__7-Nwu\"};","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport drago from './v2/drago-v2.json'\nimport dragoeventful from './v2/dragoEventful-v2.json'\nimport dragofactory from './v2/dragoFactory-v2.json'\nimport dragoregistry from './v2/dragoRegistry-v2.json'\nimport erc20 from './v2/erc20.json'\nimport ethusd from './v2/ethusd.json'\nimport exchange from './v2/exchange.json'\nimport fundproxy from './v2/fundProxy.json'\nimport getMultiPoolsData from './v2/getMultiPoolsData.json'\nimport getMultipleBalances from './v2/getMultipleBalances.json'\nimport parityregister from './v2/parityRegister.json'\nimport rigotoken from './v2/rigoToken-v2.json'\nimport rigotokenfaucet from './v2/rigoTokenFaucet-v2.json'\nimport tokenWrapper from './v2/tokenWrapper-v2.json'\nimport vault from './v2/vault-v2.json'\nimport vaulteventful from './v2/vaultEventful-v2.json'\nimport vaultfactory from './v2/vaultFactory-v2.json'\nimport weth from './v2/weth.json'\nimport zeroExExchange from './v2/zeroExExchange.json'\n\n// Legacy v1 contracts\n// import vault from './v1/vault.json';\n// import vaultfactory from './v1/vaultFactory.json';\n// import registry from './v1/registry.json';\n// import tokenreg from './v1/tokenreg.json';\n// import exchange from './v1/exchange.json';\n// import oracle from './v1/oracle.json';\n// import dragofactory from './v1/dragofactory.json';\n// import drago from './v1/drago.json';\n// import eventful from './v1/eventful.json';\n// import ethusd from './v1/ethusd.json';\n// import dragoregistry from './v1/dragoregistry.json';\n// import exchangeeventful from './v1/exchangeeventful.json';\n// import vaulteventful from './v1/vaultEventful.json';\n// import nav from './v1/nav.json';\n// import parityregister from './v1/parityregister.json';\n// import rigotoken from './v1/rigoToken.json';\n\nexport {\n  vault,\n  vaultfactory,\n  dragoregistry,\n  exchange,\n  erc20,\n  dragofactory,\n  drago,\n  dragoeventful,\n  ethusd,\n  fundproxy,\n  tokenWrapper,\n  vaulteventful,\n  parityregister,\n  rigotoken,\n  rigotokenfaucet,\n  weth,\n  zeroExExchange,\n  getMultipleBalances,\n  getMultiPoolsData\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkItem\":\"topBarMenu_linkItem__3mkE1\",\"trigger\":\"topBarMenu_trigger__3kV3Q\",\"menuToggle\":\"topBarMenu_menuToggle__3jhj-\",\"menu\":\"topBarMenu_menu__3Jleg\",\"burgerContainer\":\"topBarMenu_burgerContainer__1q01W\",\"checked-anim\":\"topBarMenu_checked-anim__2736S\",\"beta\":\"topBarMenu_beta__13piz\",\"not-checked-anim\":\"topBarMenu_not-checked-anim__3b9rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"src_header__1yI0T\",\"root\":\"src_root__3RoIn\",\"app\":\"src_app__35rlJ\"};","import { reactotronRedux } from 'reactotron-redux'\nimport Reactotron from 'reactotron-react-js'\n\nlet reactotron\n\nif (process.env.NODE_ENV === `development`) {\n  reactotron = Reactotron.configure({ name: 'React Native Demo' })\n    .use(reactotronRedux()) //  <- here i am!\n    .connect() //Don't forget about me!\n}\n\nexport default reactotron\n","import {\n  DEFAULT_NETWORK_NAME,\n  ERC20_TOKENS,\n  // ERCdEX,\n  Ethfinex,\n  EXCHANGES,\n  RELAYS,\n  TRADE_TOKENS_PAIRS\n} from '../../../_utils/const'\nimport BigNumber from 'bignumber.js'\n\nconst NETWORK_NAME = DEFAULT_NETWORK_NAME\nconst BASE_TOKEN = ERC20_TOKENS[NETWORK_NAME].ETH // ZRX\nconst QUOTE_TOKEN = ERC20_TOKENS[NETWORK_NAME].USDT // WETH\n\nexport const exchange = {\n  tradesHistory: [],\n  ui: {\n    panels: {\n      relayBox: {\n        expanded: true,\n        disabled: true,\n        disabledMsg: ''\n      },\n      orderBox: {\n        expanded: true,\n        disabled: true,\n        disabledMsg: ''\n      },\n      ordersHistoryBox: {\n        expanded: true,\n        disabled: false,\n        disabledMsg: ''\n      },\n      chartBox: {\n        expanded: true,\n        disabled: false,\n        disabledMsg: '',\n        loading: {\n          isLoading: true,\n          isError: false,\n          errorMsg: '',\n          reduxRetryAction: {}\n        }\n      }\n    }\n  },\n  loading: {\n    liquidity: true,\n    orderSummary: true,\n    orderBox: true,\n    marketBox: true\n  },\n  availableFunds: [],\n  chartData: [],\n  selectedFund: {\n    details: {},\n    liquidity: {\n      loading: true,\n      ETH: new BigNumber(0),\n      WETH: new BigNumber(0),\n      ZRX: new BigNumber(0),\n      baseToken: {\n        balance: new BigNumber(0),\n        balanceWrapper: new BigNumber(0)\n      },\n      quoteToken: {\n        balance: new BigNumber(0),\n        balanceWrapper: new BigNumber(0)\n      }\n    },\n    managerAccount: ''\n  },\n  accountSignature: {\n    signature: '',\n    nonce: '',\n    valid: false\n  },\n  walletAddress: '',\n  selectedExchange: EXCHANGES.Ethfinex[NETWORK_NAME], // ERCdEX\n  selectedRelay: RELAYS[Ethfinex], // ERCdEX\n  availableRelays: {},\n  selectedTokensPair: {\n    baseToken: BASE_TOKEN,\n    quoteToken: QUOTE_TOKEN,\n    baseTokenAllowance: false,\n    quoteTokenAllowance: false,\n    baseTokenLockWrapExpire: '0',\n    quoteTokenLockWrapExpire: '0',\n    ticker: {\n      current: {\n        price: '0'\n      },\n      previous: {\n        price: '0'\n      },\n      variation: 0\n    }\n  },\n  availableTradeTokensPairs: TRADE_TOKENS_PAIRS,\n  fundOrders: {\n    open: [],\n    history: [],\n    cancelled: [],\n    executed: []\n  },\n  selectedOrder: {\n    details: {},\n    orderAmountError: true,\n    orderPriceError: true,\n    orderFillAmount: '0',\n    orderMaxAmount: '0',\n    orderPrice: '0',\n    orderType: 'asks',\n    takerOrder: false,\n    selectedTokensPair: {\n      baseToken: BASE_TOKEN,\n      quoteToken: QUOTE_TOKEN\n    }\n  },\n  orderBookAggregated: true,\n  orderBook: {\n    asks: [],\n    bids: [],\n    spread: '0'\n  },\n  relay: {\n    url: 'https://test.ethfinex.com/trustless/v1/w/on', // url: 'https://api.ercdex.com/api/standard',\n    networkId: '42'\n  },\n  prices: {\n    previous: {},\n    current: {}\n  }\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nexport const poolsList = {\n  list: {},\n  lastFetchRange: {\n    chunk: {\n      key: 0,\n      total: 0,\n      progress: 0,\n      toBlock: 0,\n      fromBlock: 0\n    },\n    startBlock: 0,\n    lastBlock: 0\n  }\n}\n","export const app = {\n  isConnected: false,\n  isSyncing: false,\n  syncStatus: {},\n  error: {},\n  appLoading: true,\n  retryTimeInterval: 0,\n  connectionRetries: 0,\n  lastBlockNumberUpdate: 0,\n  accountsAddressHash: '',\n  errorEventfulSubscription: false,\n  config: {\n    isMock: false\n  },\n  transactionsDrawerOpen: false\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport {\n  DEFAULT_ENDPOINT,\n  DEFAULT_NETWORK_NAME,\n  ENDPOINTS,\n  MSG_NETWORK_STATUS_OK,\n  NETWORKS,\n  NETWORK_OK\n} from '../../_utils/const'\n\nimport { app, exchange, poolsList } from './initialState/index'\n\nimport BigNumber from 'bignumber.js'\n\nconst initialState = {\n  app,\n  notifications: {},\n  poolsList: poolsList,\n  exchange: exchange,\n  transactions: {\n    queue: new Map(),\n    pending: 0\n  },\n  transactionsDrago: {\n    holder: {\n      balances: [],\n      logs: []\n    },\n    manager: {\n      list: [],\n      logs: []\n    },\n    selectedDrago: {\n      values: {\n        portfolioValue: -1,\n        totalAssetsValue: -1,\n        estimatedPrice: -1\n      },\n      details: {},\n      transactions: [],\n      assets: [],\n      assetsCharts: {}\n    }\n  },\n  transactionsVault: {\n    holder: {\n      balances: [],\n      logs: []\n    },\n    manager: {\n      list: [],\n      logs: []\n    },\n    selectedVault: {\n      details: {},\n      transactions: []\n    }\n  },\n  endpoint: {\n    accounts: [],\n    accountsBalanceError: false,\n    ethBalance: new BigNumber(0),\n    grgBalance: new BigNumber(0),\n    endpointInfo: ENDPOINTS[DEFAULT_ENDPOINT],\n    networkInfo: NETWORKS[DEFAULT_NETWORK_NAME],\n    loading: true,\n    networkError: NETWORK_OK,\n    networkStatus: MSG_NETWORK_STATUS_OK,\n    prevBlockNumber: '0',\n    prevNonce: '0',\n    warnMsg: '',\n    isMetaMaskNetworkCorrect: false,\n    isMetaMaskLocked: true,\n    lastMetaMaskUpdateTime: 0,\n    openWalletSetup: false\n  },\n  user: {\n    isManager: false\n  }\n}\n\nexport default initialState\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../actions/const'\nimport initialState from './initialState'\nimport u from 'updeep'\n\nexport function eventfulDragoReducer(\n  state = initialState.transactionsDrago,\n  action\n) {\n  switch (action.type) {\n    case TYPE_.DRAGO_HOLDER_TRANSACTIONS_UPDATE:\n      return {\n        ...state,\n        holder: {\n          balances: action.payload[0],\n          logs: action.payload[1]\n        }\n      }\n    case TYPE_.DRAGO_MANAGER_TRANSACTIONS_UPDATE:\n      return {\n        ...state,\n        manager: {\n          list: action.payload[2],\n          logs: action.payload[1],\n          portfolio: { ...state.manager.logs }\n        }\n      }\n\n    case TYPE_.DRAGO_SELECTED_DETAILS_UPDATE: {\n      const newDetails = u(action.payload, state.selectedDrago)\n      return { ...state, selectedDrago: { ...newDetails } }\n    }\n\n    case TYPE_.DRAGO_SELECTED_DETAILS_RESET:\n      return {\n        ...state,\n        selectedDrago: {\n          values: {\n            portfolioValue: -1,\n            totalAssetsValue: -1,\n            estimatedPrice: -1\n          },\n          details: {},\n          transactions: [],\n          assets: [],\n          assetsCharts: {}\n        }\n      }\n\n    case TYPE_.SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT: {\n      let selectedDrago = { ...state.selectedDrago }\n      selectedDrago.assetsCharts = {\n        ...selectedDrago.assetsCharts,\n        ...action.payload\n      }\n      return {\n        ...state,\n        selectedDrago: { ...state.selectedDrago, ...selectedDrago }\n      }\n    }\n\n    case TYPE_.SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT: {\n      let selectedDrago = { ...state.selectedDrago }\n      let symbol = Object.keys(action.payload)[0]\n      let newTicker = action.payload[symbol].data\n      let oldData = [].concat(selectedDrago.assetsCharts[symbol].data)\n      if (newTicker.epoch === oldData[oldData.length - 1].epoch) {\n        oldData[oldData.length - 1] = newTicker\n        // console.log('first')\n        return {\n          ...state\n        }\n      }\n      if (newTicker.epoch === oldData[oldData.length - 2].epoch) {\n        oldData[oldData.length - 2] = newTicker\n        // console.log('second')\n        return {\n          ...state\n        }\n      }\n\n      // console.log('***** NEW *****')\n      oldData.push(newTicker)\n      return {\n        ...state,\n        selectedDrago: {\n          ...state.selectedDrago,\n          assetsCharts: {\n            ...state.selectedDrago.assetsCharts,\n            [symbol]: {\n              ...state.selectedDrago.assetsCharts[symbol],\n              data: [].concat(oldData)\n            }\n          }\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport function eventfulVaultReducer(\n  state = initialState.transactionsVault,\n  action\n) {\n  switch (action.type) {\n    case TYPE_.VAULT_HOLDER_TRANSACTIONS_UPDATE:\n      return {\n        ...state,\n        holder: {\n          balances: action.payload[0],\n          logs: action.payload[1]\n        }\n      }\n    case TYPE_.VAULT_MANAGER_TRANSACTIONS_UPDATE:\n      return {\n        ...state,\n        manager: {\n          list: action.payload[2],\n          logs: action.payload[1]\n        }\n      }\n\n    case TYPE_.VAULT_SELECTED_DETAILS_UPDATE: {\n      const newDetails = u(action.payload, state.selectedVault)\n\n      return { ...state, selectedVault: { ...newDetails } }\n    }\n\n    case TYPE_.VAULT_SELECTED_DETAILS_RESET:\n      return {\n        ...state,\n        selectedVault: {\n          details: {},\n          transactions: []\n        }\n      }\n    default:\n      return state\n  }\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { UPDATE_INTERFACE } from '../actions/const'\nimport initialState from './initialState'\n\nfunction endpointsReducer(state = initialState.endpoint, action) {\n  switch (action.type) {\n    case UPDATE_INTERFACE:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default endpointsReducer\n","import * as ACTION_ from '../../actions/dapp'\nimport { handleActions } from 'redux-actions'\nimport { poolsList } from '../initialState/index'\n\nexport const poolsListReducer = handleActions(\n  {\n    [ACTION_.pools.updatePoolsList]: (state, action) => {\n      const newList = { ...state.list, ...action.payload.list }\n      return {\n        ...{\n          list: newList,\n          lastFetchRange: action.payload.lastFetchRange\n        }\n      }\n    },\n    [ACTION_.pools.writeItemPoolsList]: (state, action) => {\n      // console.log(action)\n      const { poolId } = action.meta\n      const {\n        values,\n        details,\n        transactions,\n        assets,\n        assetsCharts\n      } = action.payload\n      let newDetails\n      let cachedDetails\n      let cachedTransactions\n      let cachedAssets\n      let cachedAssetsCharts\n      let cachedValues\n\n      if (typeof state.list[poolId] !== 'undefined') {\n        cachedDetails = Object.assign({}, state.list[poolId])\n        typeof cachedDetails.transactions !== 'undefined'\n          ? (cachedTransactions = [].concat(cachedDetails.transactions))\n          : (cachedTransactions = [])\n        typeof cachedDetails.assets !== 'undefined'\n          ? (cachedAssets = [].concat(cachedDetails.assets))\n          : (cachedAssets = [])\n        typeof cachedDetails.assetsCharts !== 'undefined'\n          ? (cachedAssetsCharts = Object.assign({}, cachedDetails.assetsCharts))\n          : (cachedAssetsCharts = {})\n        typeof cachedDetails.values !== 'undefined'\n          ? (cachedValues = Object.assign({}, cachedDetails.values))\n          : (cachedValues = {})\n\n        newDetails = {\n          [poolId]: {\n            ...cachedDetails,\n            values: {\n              ...(values || cachedValues)\n            },\n            details: {\n              ...cachedDetails.details,\n              ...(details || {})\n            },\n            transactions: [...(transactions || cachedTransactions)],\n            assets: [...(assets || cachedAssets)],\n            assetsCharts: {\n              ...(assetsCharts || cachedAssetsCharts)\n            }\n          }\n        }\n      } else {\n        newDetails = { [poolId]: Object.assign({}, action.payload) }\n      }\n\n      return {\n        ...{\n          list: { ...state.list, ...newDetails },\n          lastFetchRange: { ...{}, ...state.lastFetchRange }\n        }\n      }\n    }\n  },\n  { ...poolsList }\n)\n","import * as ACTION_ from '../../actions/dapp'\nimport { app } from '../initialState/index'\nimport { handleActions } from 'redux-actions'\nimport u from 'updeep'\n\nexport const appReducer = handleActions(\n  {\n    [ACTION_.app.updateAppStatus]: (state, action) => {\n      return { ...state, ...action.payload }\n    },\n    [ACTION_.app.updateAppConfig]: (state, action) => {\n      const newConfig = u(action.payload, state.config)\n      return { ...state, config: { ...newConfig } }\n    }\n  },\n  { ...app }\n)\n","import * as ACTION_ from '../../actions/exchange'\nimport { exchange } from '../initialState/index'\nimport { handleActions } from 'redux-actions'\nimport initialState from '../initialState'\n\nexport const ordersReducer = handleActions(\n  {\n    [ACTION_.updateOrder]: (state, action) => {\n      return {\n        ...state,\n        selectedOrder: { ...state.selectedOrder, ...action.payload }\n      }\n    },\n    [ACTION_.cancelOrder]: state => {\n      return {\n        ...state,\n        selectedOrder: { ...initialState.exchange.selectedOrder }\n      }\n    }\n  },\n  { ...exchange }\n)\n","import * as ACTION_ from '../../actions/exchange'\nimport { exchange } from '../initialState/index'\nimport { handleActions } from 'redux-actions'\nimport u from 'updeep'\n\nexport const uiReducer = handleActions(\n  {\n    [ACTION_.updateUiPanelProperties]: (state, action) => {\n      const newUi = u(action.payload, state.ui)\n      return {\n        ...state,\n        ui: { ...newUi }\n      }\n    }\n  },\n  { ...exchange }\n)\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\n// import * as ACTION_ from '../actions/exchange'\nimport * as TYPE_ from '../actions/const'\nimport { ordersReducer, uiReducer } from './exchange'\nimport BigNumber from 'bignumber.js'\nimport initialState from './initialState'\n\nfunction exchangeReducer(state = initialState.exchange, action) {\n  switch (action.type) {\n    case TYPE_.TRADES_HISTORY_UPDATE: {\n      return {\n        ...state,\n        tradesHistory: [...action.payload, ...state.tradesHistory]\n      }\n    }\n\n    case TYPE_.TRADES_HISTORY_RESET: {\n      return {\n        ...state,\n        tradesHistory: []\n      }\n    }\n\n    case TYPE_.UPDATE_AVAILABLE_FUNDS:\n      return {\n        ...state,\n        availableFunds: [...action.payload]\n      }\n\n    case TYPE_.UPDATE_FUND_ORDERS:\n      return {\n        ...state,\n        fundOrders: { ...state.fundOrders, ...action.payload }\n      }\n\n    case TYPE_.CHART_MARKET_DATA_UPDATE:\n      if (action.payload !== '') {\n        return {\n          ...state,\n          chartData: action.payload\n        }\n      } else {\n        return {\n          ...state\n        }\n      }\n\n    case TYPE_.CHART_MARKET_DATA_INIT:\n      if (action.payload !== '') {\n        return {\n          ...state,\n          chartData: action.payload\n        }\n      } else {\n        return {\n          ...state\n        }\n      }\n\n    case TYPE_.CHART_MARKET_DATA_ADD_DATAPOINT:\n      const { chartData } = state\n      let newChartData = []\n      if (action.payload.epoch === chartData[chartData.length - 1].epoch) {\n        // console.log('first')\n        newChartData = [].concat(chartData)\n        newChartData[chartData.length - 1] = Object.assign({}, action.payload)\n        return {\n          ...state,\n          chartData: newChartData\n        }\n      }\n      if (action.payload.epoch === chartData[chartData.length - 2].epoch) {\n        // console.log('second')\n        newChartData = [].concat(chartData)\n        newChartData[chartData.length - 2] = Object.assign({}, action.payload)\n        return {\n          ...state,\n          chartData: newChartData\n        }\n      }\n      // console.log('***** NEW *****')\n      newChartData = [].concat(chartData, action.payload)\n      return {\n        ...state,\n        chartData: newChartData\n      }\n\n    case TYPE_.UPDATE_ELEMENT_LOADING:\n      const elementLoading = action.payload\n      return {\n        ...state,\n        loading: { ...state.loading, ...elementLoading }\n      }\n\n    case TYPE_.UPDATE_SELECTED_FUND:\n      return {\n        ...state,\n        selectedFund: { ...state.selectedFund, ...action.payload }\n      }\n\n    case TYPE_.UPDATE_SELECTED_RELAY:\n      return {\n        ...state,\n        selectedRelay: { ...state.selectedRelay, ...action.payload }\n      }\n\n    case TYPE_.UPDATE_SELECTED_EXCHANGE:\n      return {\n        ...state,\n        selectedExchange: { ...state.selectedExchange, ...action.payload }\n      }\n\n    case TYPE_.UPDATE_TRADE_TOKENS_PAIR:\n      return {\n        ...state,\n        selectedTokensPair: { ...state.selectedTokensPair, ...action.payload }\n      }\n\n    case TYPE_.UPDATE_AVAILABLE_TRADE_TOKENS_PAIRS:\n      return {\n        ...state,\n        availableTradeTokensPairs: { ...action.payload }\n      }\n\n    case TYPE_.UPDATE_AVAILABLE_RELAYS:\n      return {\n        ...state,\n        availableRelays: action.payload\n      }\n\n    case TYPE_.UPDATE_ACCOUNT_SIGNATURE:\n      return {\n        ...state,\n        accountSignature: { ...state.accountSignature, ...action.payload }\n      }\n\n    case TYPE_.SET_MAKER_ADDRESS:\n      return {\n        ...state,\n        walletAddress: action.payload\n      }\n\n    case TYPE_.SET_ORDERBOOK_AGGREGATE_ORDERS:\n      return {\n        ...state,\n        orderBookAggregated: action.payload\n      }\n\n    case TYPE_.ORDERBOOK_INIT:\n      const newOrderBook = { ...state.orderBook, ...action.payload }\n      return {\n        ...state,\n        orderBook: newOrderBook\n      }\n\n    case TYPE_.ORDERBOOK_UPDATE:\n      return { ...state, webSocket: { ...action.payload } }\n\n    case TYPE_.TOKENS_TICKERS_UPDATE:\n      let prices = {\n        current: { ...state.prices.current, ...action.payload },\n        previous: { ...state.prices.current }\n      }\n      return { ...state, prices }\n\n    case TYPE_.UPDATE_CURRENT_TOKEN_PRICE: {\n      let ticker\n      if (typeof action.payload.current !== 'undefined') {\n        ticker = {\n          current: action.payload.current,\n          previous: { ...state.selectedTokensPair.ticker.current }\n        }\n        let currentPrice = new BigNumber(ticker.current.price)\n        let previousPrice = new BigNumber(ticker.previous.price)\n        if (!previousPrice.eq(0)) {\n          ticker.variation = currentPrice\n            .minus(previousPrice)\n            .dividedBy(previousPrice)\n            .multipliedBy(100)\n            .toFixed(4)\n        } else {\n          ticker.variation = 0\n        }\n      } else {\n        ticker = {\n          current: { ...state.selectedTokensPair.ticker.current },\n          previous: { ...state.selectedTokensPair.ticker.current },\n          variation: state.selectedTokensPair.ticker.variation\n        }\n      }\n      return {\n        ...state,\n        selectedTokensPair: {\n          ...state.selectedTokensPair,\n          ticker: { ...ticker }\n        }\n      }\n    }\n\n    case TYPE_.RESET_TOKEN_PRICE: {\n      return {\n        ...state,\n        selectedTokensPair: {\n          ...state.selectedTokensPair,\n          ticker: {\n            current: {\n              price: '0'\n            },\n            previous: {\n              price: '0'\n            },\n            variation: 0\n          }\n        }\n      }\n    }\n\n    default: {\n      const pipe = (...functions) => (state, action) => {\n        return functions.reduce((currentValue, currentFunction) => {\n          return currentFunction(currentValue, action)\n        }, state)\n      }\n      const pipedActions = pipe(\n        ordersReducer,\n        uiReducer\n      )(state, action)\n      return pipedActions\n\n      // return state\n    }\n  }\n}\n\nexport default exchangeReducer\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { INIT_NOTIFICATION } from '../actions/const'\nimport initialState from './initialState'\n\nfunction notificationsReducer(state = initialState.notifications, action) {\n  switch (action.type) {\n    case INIT_NOTIFICATION:\n      return {\n        ...state,\n        engine: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default notificationsReducer\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { ADD_TRANSACTION, UPDATE_TRANSACTIONS } from '../actions/const'\nimport initialState from './initialState'\n\nfunction transactionsReducer(state = initialState.transactions, action) {\n  let pendingTransactions = 0\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      let transactions = Object.assign({}, state)\n      const newTransaction = { ...action.payload.transactionDetails }\n      const oldTransaction = transactions.queue.get(\n        action.payload.transactionId\n      )\n      const updatedTransaction = { ...oldTransaction, ...newTransaction }\n      transactions.queue.set(action.payload.transactionId, updatedTransaction)\n      transactions.queue.forEach(value => {\n        if (\n          value.status !== 'executed' &&\n          value.status !== 'error' &&\n          value.cancelled !== true &&\n          typeof value.cancelled === 'undefined'\n        ) {\n          pendingTransactions = pendingTransactions + 1\n        }\n      })\n      transactions.pending = pendingTransactions\n      return {\n        ...state,\n        ...transactions\n      }\n    case UPDATE_TRANSACTIONS:\n      pendingTransactions = 0\n      transactions = new Map(action.transactions)\n      transactions.forEach(value => {\n        if (value.status !== 'executed' && value.status !== 'error') {\n          pendingTransactions = pendingTransactions + 1\n        }\n      })\n      return {\n        ...state,\n        queue: new Map(action.transactions),\n        pending: pendingTransactions\n      }\n    default:\n      return state\n  }\n}\n\nexport default transactionsReducer\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { IS_MANAGER } from '../actions/const'\nimport initialState from './initialState'\n\nfunction usersReducer(state = initialState.user, action) {\n  switch (action.type) {\n    case IS_MANAGER:\n      return {\n        ...state,\n        isManager: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n","import ExchangeConnector from '@rgbk/exchange-connector'\n\nlet ExchangeConnectorWrapper = (function() {\n  let instance\n\n  return {\n    getInstance: function() {\n      if (!instance) {\n        instance = new ExchangeConnector()\n      }\n      return instance\n    },\n    getNewInstance: function() {\n      return new ExchangeConnector()\n    }\n  }\n})()\n\nexport default ExchangeConnectorWrapper\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { combineReducers } from 'redux'\nimport { eventfulDragoReducer, eventfulVaultReducer } from './eventful_reducer'\nimport endpointsReducer from './endpoint_reducer'\n// import exchangeReducer, { ordersReducer } from './exchange_reducer'\nimport { appReducer, poolsListReducer } from './dapp'\nimport exchangeReducer from './exchange_reducer'\nimport notificationsReducer from './notifications_reducer'\nimport transactionsReducer from './transactions_reducer'\nimport usersReducer from './users_reducer'\n\nclass reducers {\n  rootReducer = combineReducers({\n    app: appReducer,\n    exchange: exchangeReducer,\n    transactions: transactionsReducer,\n    user: usersReducer,\n    endpoint: endpointsReducer,\n    poolsList: poolsListReducer,\n    transactionsDrago: eventfulDragoReducer,\n    transactionsVault: eventfulVaultReducer,\n    notifications: notificationsReducer\n  })\n}\n\nlet Reducers = new reducers()\nexport { Reducers }\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport {\n  MSG_NETWORK_STATUS_ERROR,\n  MSG_NO_SUPPORTED_NETWORK,\n  NETWORK_WARNING\n} from './const'\nimport BigNumber from 'bignumber.js'\nimport PoolsApi from '../PoolsApi/src'\nimport Web3Wrapper from './web3Wrapper/src/web3Wrapper'\nimport utils from '../_utils/utils'\n\nclass Interfaces {\n  constructor(api, networkId) {\n    this._api = api\n    this._parityNetworkId = networkId\n    this._success = {}\n    this._error = {}\n    this._isConnected = {}\n  }\n\n  get success() {\n    return this._success\n  }\n\n  get error() {\n    return this._error\n  }\n\n  isConnected = () => {\n    // Checking if app is connected to node\n    const api = this._api\n    if (!api.isConnected) {\n      // console.log(api.isConnected)\n      this._error = {\n        networkError: NETWORK_WARNING,\n        networkStatus: MSG_NETWORK_STATUS_ERROR\n      }\n      return false\n    }\n    return true\n  }\n\n  getAccountsParity() {\n\n    const api = this._api\n    let accounts = {}\n    let arrayPromises = []\n    return (\n      api.parity\n        .accountsInfo()\n        // .allAccountsInfo()\n        .then(accountsParity => {\n          // console.log(accountsParity)\n          const poolsApi = new PoolsApi(this._api)\n          poolsApi.contract.rigotoken.init()\n          Object.keys(accountsParity).forEach(function(k) {\n            // Getting accounts ETH balance\n            accounts[k] = {}\n            arrayPromises.push(\n              api.eth\n                .getBalance(k)\n                .then(balance => {\n                  accounts[k].ethBalance = utils.formatFromWei(balance)\n                  accounts[k].ethBalanceWei = new BigNumber(balance)\n                  accounts[k].name = accountsParity[k].name\n                  accounts[k].source = 'parity'\n                  return accounts\n                })\n                .catch(() => {\n                  throw new Error(`Cannot get ETH balance of account ${k}`)\n                })\n            )\n            // Getting accounts GRG balance\n            arrayPromises.push(\n              poolsApi.contract.rigotoken\n                .balanceOf(k)\n                .then(grgBalance => {\n                  accounts[k].grgBalance = utils.formatFromWei(grgBalance)\n                  accounts[k].grgBalanceWei = new BigNumber(grgBalance)\n                  return accounts\n                })\n                .catch(() => {\n                  throw new Error(`Cannot get GRG balance of account ${k}`)\n                })\n            )\n            // Getting transactions count\n            arrayPromises\n              .push(\n                api.eth.getTransactionCount(k).then(result => {\n                  accounts[k].nonce = new BigNumber(result).toFixed()\n                  return accounts\n                })\n              )\n              .catch(() => {\n                throw new Error(`Cannot get transactions count of account ${k}`)\n              })\n          })\n          return Promise.all(arrayPromises).then(() => {\n\n            // const accountsData = {...results}\n            // console.log(accountsData)\n            return accounts\n          })\n        })\n        .catch(error => {\n\n          return {}\n        })\n    )\n  }\n\n  getAccountsMetamask = async () => {\n    // console.log(`getAccountsMetamask`)\n    const web3 = window.web3\n    const parityNetworkId = this._parityNetworkId\n    let accountsMetaMask = {}\n    if (typeof web3 === 'undefined') {\n      console.warn('MetaMask not detected')\n      return\n    }\n    try {\n      // Check if MetaMask is connected to the same network as the endpoint\n      let accounts = await web3.eth.getAccounts()\n      let metaMaskNetworkId = await web3.eth.net.getId()\n\n      let isMetaMaskLocked = accounts.length === 0 ? true : false\n      let currentState = { ...this._success }\n      if (metaMaskNetworkId !== parityNetworkId) {\n        const stateUpdate = {\n          isMetaMaskNetworkCorrect: false,\n          isMetaMaskLocked,\n          warnMsg: MSG_NO_SUPPORTED_NETWORK\n        }\n        this._success = {\n          ...currentState,\n          ...stateUpdate\n        }\n        return accountsMetaMask\n      } else {\n        // Get MetaMask accounts\n        const stateUpdate = {\n          isMetaMaskNetworkCorrect: true,\n          warnMsg: '',\n          isMetaMaskLocked\n        }\n        this._success = {\n          ...currentState,\n          ...stateUpdate\n        }\n\n        // Return empty object if MetaMask is locked.\n        if (isMetaMaskLocked) {\n          return {}\n        }\n\n        // Get ETH balance\n        let ethBalance = new BigNumber(0)\n        let grgBalance = new BigNumber(0)\n        let nonce = 0\n\n        let wrapper, poolsApi\n        try {\n          wrapper = Web3Wrapper.getInstance()\n          poolsApi = new PoolsApi(wrapper)\n          await poolsApi.contract.rigotoken.init()\n        } catch (err) {\n          console.warn(err)\n          throw new Error(`Error on Web3Wrapper.getInstance()`)\n        }\n\n        ethBalance = wrapper.eth.getBalance(accounts[0]).catch(err => {\n          console.warn(err)\n          throw new Error(`Cannot get ETH balance of account ${accounts[0]}`)\n        })\n        grgBalance = poolsApi.contract.rigotoken\n          .balanceOf(accounts[0])\n          .catch(err => {\n            console.warn(err)\n            throw new Error(`Cannot get GRG balance of account ${accounts[0]}`)\n          })\n        nonce = wrapper.eth.getTransactionCount(accounts[0]).catch(err => {\n          console.warn(err)\n          throw new Error(\n            `Cannot get transactions count of account ${accounts[0]}`\n          )\n        })\n\n        try {\n          ethBalance = await ethBalance\n        } catch (err) {\n          console.warn(err)\n          throw new Error(`Cannot get ETH balance of account ${accounts[0]}`)\n        }\n        try {\n          grgBalance = await grgBalance\n        } catch (err) {\n          console.warn(err)\n          throw new Error(`Cannot get GRG balance of account ${accounts[0]}`)\n        }\n        try {\n          nonce = await nonce\n        } catch (err) {\n          console.warn(err)\n          throw new Error(\n            `Cannot get transactions count of account ${accounts[0]}`\n          )\n        }\n\n        nonce = new BigNumber(0)\n        let accountsMetaMask = {\n          [accounts[0]]: {\n            ethBalance: new BigNumber(web3.utils.fromWei(ethBalance)).toFixed(\n              3\n            ),\n            ethBalanceWei: new BigNumber(ethBalance),\n            grgBalance: new BigNumber(web3.utils.fromWei(grgBalance)).toFixed(\n              3\n            ),\n            grgBalanceWei: new BigNumber(grgBalance),\n            name: 'MetaMask',\n            source: 'MetaMask',\n            nonce: nonce\n          }\n        }\n        return accountsMetaMask\n      }\n    } catch (error) {\n      console.warn(error)\n      // return {}\n      throw new Error(`getAccountsMetamask`)\n    }\n  }\n\n  attachInterfaceInfuraV2 = async () => {\n\n    const api = this._api\n    try {\n      let accountsMetaMask\n      try {\n        accountsMetaMask = await this.getAccountsMetamask(api)\n      } catch (e) {\n        console.warn(e)\n        throw new Error(`attachInterfaceInfuraV2`)\n      }\n      const allAccounts = {\n        ...accountsMetaMask\n      }\n      // let blockNumber = 0\n      // try {\n      //   blockNumber = await api.eth.getBlockNumber()\n      // } catch (error) {\n      //   console.warn(error)\n      // }\n      console.log(\n        'Metamask account loaded: ',\n        accountsMetaMask\n        // new BigNumber(blockNumber).toFixed()\n      )\n\n      const stateUpdate = {\n        loading: false,\n        // prevBlockNumber: blockNumber.toFixed(),\n        accounts: Object.keys(allAccounts).map(address => {\n          const info = allAccounts[address] || {}\n          return {\n            address,\n            name: info.name,\n            source: info.source,\n            ethBalance: info.ethBalance,\n            ethBalanceWei: info.ethBalanceWei,\n            grgBalance: info.grgBalance,\n            grgBalanceWei: info.grgBalanceWei,\n            nonce: info.nonce\n          }\n        })\n      }\n      const result = {\n        ...this._success,\n        ...stateUpdate\n      }\n      // this._success = result\n\n      return result\n    } catch (error) {\n      let currentState = this._error\n      const stateUpdate = {\n        networkError: NETWORK_WARNING,\n        networkStatus: MSG_NETWORK_STATUS_ERROR\n      }\n      this._error = {\n        ...currentState,\n        ...stateUpdate\n      }\n      console.warn(`attachInterfaceInfuraV2 -> Error`, error)\n      throw this._error\n    }\n  }\n\n  attachInterfaceRigoBlockV2 = async () => {\n\n    const api = this._api\n    let accountsParity = {}\n    let accountsMetaMask = {}\n    try {\n      // Check if the parity node is running in --public-mode\n      let nodeKind = await api.parity.nodeKind()\n      if (nodeKind.availability === 'public') {\n        // if Parity in --public-node then getting only MetaMask accounts\n        try {\n          accountsMetaMask = await this.getAccountsMetamask()\n        } catch (err) {\n          console.warn(err)\n          throw new Error(`Error ongetAccountsMetamask()`)\n        }\n      } else {\n        // if Parity NOT in --public-node then getting both Parity and MetaMask accounts\n        accountsMetaMask = await this.getAccountsMetamask()\n        accountsParity = await this.getAccountsParity()\n      }\n      const blockNumber = await api.eth.getBlockNumber()\n      const allAccounts = {\n        ...accountsParity,\n        ...accountsMetaMask\n      }\n      const stateUpdate = {\n        loading: false,\n        prevBlockNumber: new BigNumber(blockNumber).toFixed(),\n        ethBalance: new BigNumber(0),\n        accounts:\n          Object.keys(allAccounts).length !== 0\n            ? Object.keys(allAccounts).map(address => {\n                const info = allAccounts[address] || {}\n                return {\n                  address,\n                  name: info.name,\n                  source: info.source,\n                  ethBalance: info.ethBalance,\n                  ethBalanceWei: info.ethBalanceWei,\n                  grgBalance: info.grgBalance,\n                  grgBalanceWei: info.grgBalanceWei,\n                  nonce: info.nonce\n                }\n              })\n            : []\n      }\n      const result = {\n        ...this._success,\n        ...stateUpdate\n      }\n      this._success = result\n      return result\n    } catch (error) {\n      let currentState = this._error\n      const stateUpdate = {\n        networkError: NETWORK_WARNING,\n        networkStatus: MSG_NETWORK_STATUS_ERROR\n      }\n      this._error = {\n        ...currentState,\n        ...stateUpdate\n      }\n\n      throw new Error(this._error)\n    }\n  }\n\n  detachInterface = (api, subscriptionData) => {\n    // if (typeof subscriptionData === 'object') {\n    //   console.log(subscriptionData)\n    //   try {\n    //     subscriptionData.unsubscribe(function(error, success) {\n    //       if (success) {\n    //         console.log(`Successfully unsubscribed from eth_blockNumber.`)\n    //       }\n    //       if (error) {\n    //         console.log(`Unsubscribe error ${error}.`)\n    //       }\n    //     })\n    //   } catch (error) {\n    //     console.log(error)\n    //   }\n    // } else {\n    //   try {\n    //     api\n    //       .unsubscribe(subscriptionData)\n    //       .then(() => {\n    //         console.log(\n    //           `Successfully unsubscribed from eth_blockNumber -> Subscription ID: ${subscriptionData}.`\n    //         )\n    //       })\n    //       .catch(error => {\n    //         console.log(`Unsubscribe error ${error}.`)\n    //       })\n    //   } catch (error) {\n    //     console.log(error)\n    //   }\n    // }\n  }\n}\n\nexport { Interfaces }\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions'\nimport { DEBUGGING, INFURA } from '../../../_utils/const'\nimport { Interfaces } from '../../../_utils/interfaces'\nimport { concat, defer, from, of, timer } from 'rxjs'\nimport {\n  delay,\n  finalize,\n  map,\n  mergeMap,\n  retryWhen,\n  switchMap,\n  takeUntil\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport { sha3_512 } from 'js-sha3'\nimport Web3Wrapper from '../../../_utils/web3Wrapper/src'\nimport utils from '../../../_utils/utils'\n\n//\n// CONNECT TO SOURCES OF ACCOUNTS AND POPULATE STATE WITH ACCOUNTS DATA\n//\n\nconst attachInterfacePromise = async (api, endpoint) => {\n  const selectedEndpointName = endpoint.endpointInfo.name\n  const networkId = endpoint.networkInfo.id\n  let blockchain\n  try {\n    blockchain = new Interfaces(api, networkId)\n  } catch (err) {\n    console.warn(err)\n    throw new Error(`Error endpoint_epic}`)\n  }\n  let newEndpoint\n  switch (selectedEndpointName) {\n    case INFURA:\n\n      try {\n        newEndpoint = await blockchain.attachInterfaceInfuraV2(api, networkId)\n      } catch (err) {\n        console.warn(err)\n        throw new Error(`Error endpoint_epic -> ${INFURA}`)\n      }\n\n      break\n    // case RIGOBLOCK:\n    //   console.log(`endpoint_epic -> ${RIGOBLOCK}`)\n    //   newEndpoint = await blockchain.attachInterfaceRigoBlockV2(api, networkId)\n    //   break\n    // case LOCAL:\n    //   console.log(`endpoint_epic -> ${LOCAL}`)\n    //   newEndpoint = await blockchain.attachInterfaceRigoBlockV2(api, networkId)\n    //   break\n    default:\n\n      try {\n        newEndpoint = await blockchain.attachInterfaceInfuraV2(api, networkId)\n      } catch (err) {\n        console.warn(err)\n        throw new Error(`Error endpoint_epic -> ${INFURA}`)\n      }\n\n      break\n  }\n  return newEndpoint\n}\n\nconst attachInterface$ = (api, endpoint) => {\n  return defer(() =>\n    attachInterfacePromise(api, endpoint).catch(error => {\n      console.warn(error)\n      return error\n    })\n  )\n}\n\nexport const attachInterfaceEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(TYPE_.ATTACH_INTERFACE),\n    switchMap(action => {\n      const web3 = Web3Wrapper.getInstance(state$.value.endpoint.networkInfo.id)\n      return attachInterface$(web3, action.payload.endpoint).pipe(\n        mergeMap(endpoint => {\n          let accounts = endpoint.accounts.map(element => {\n            return element.address\n          })\n          const currentAccountsAddressHash = sha3_512(accounts.toString())\n          const savedAccountsAddressHash = state$.value.app.accountsAddressHash\n          if (currentAccountsAddressHash !== savedAccountsAddressHash) {\n            return concat(\n              of(\n                Actions.drago.updateDragoTransactionsHolder([\n                  Array(0),\n                  Array(0),\n                  Array(0)\n                ])\n              ),\n              of(\n                Actions.drago.updateDragoTransactionsManager([\n                  Array(0),\n                  Array(0),\n                  Array(0)\n                ])\n              ),\n              of(\n                Actions.vault.updateVaultTransactionsHolder([\n                  Array(0),\n                  Array(0),\n                  Array(0)\n                ])\n              ),\n              of(\n                Actions.vault.updateVaultTransactionsManager([\n                  Array(0),\n                  Array(0),\n                  Array(0)\n                ])\n              ),\n              of(\n                Actions.app.updateAppStatus({\n                  appLoading: false,\n                  accountsAddressHash: currentAccountsAddressHash\n                })\n              ),\n              of(Actions.endpoint.updateInterface(endpoint))\n            )\n          }\n          return concat(\n            of(\n              Actions.app.updateAppStatus({\n                appLoading: false,\n                accountsAddressHash: currentAccountsAddressHash\n              })\n            ),\n            of(Actions.endpoint.updateInterface(endpoint))\n          )\n        })\n      )\n    }),\n    retryWhen(error => {\n      let scalingDuration = 1000\n      return error.pipe(\n        mergeMap((error, i) => {\n          console.warn(error)\n          const retryAttempt = i + 1\n\n          return timer(scalingDuration)\n        }),\n        finalize(() => console.log('We are done!'))\n      )\n    })\n  )\n\nexport const delayShowAppEpic = action$ =>\n  action$.pipe(\n    ofType(TYPE_.ATTACH_INTERFACE),\n    delay(7000),\n    map(() => {\n      return Actions.app.updateAppStatus({\n        appLoading: false\n      })\n    })\n  )\n\n//\n// SUBSCRIBE TO NEW BLOCK AND MONITOR ACCOUNTS\n//\n\nconst monitorAccounts$ = state$ => {\n  const api = Web3Wrapper.getInstance(state$.value.endpoint.networkInfo.id)\n  return api.rigoblock.ob.newBlock$.pipe(\n    switchMap(newBlock => {\n      const currentEndpoint = { ...state$.value.endpoint }\n      return from(utils.updateAccounts(api, newBlock, currentEndpoint))\n    })\n  )\n}\n\nexport const monitorAccountsEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.MONITOR_ACCOUNTS_START),\n    mergeMap(() => {\n      return monitorAccounts$(state$).pipe(\n        takeUntil(action$.pipe(ofType(TYPE_.MONITOR_ACCOUNTS_STOP))),\n        mergeMap(accountsUpdate => {\n\n          const observablesArray = Array(0)\n\n          observablesArray.push(\n            of(Actions.endpoint.updateInterface(accountsUpdate[0]))\n          )\n          if (accountsUpdate[1].length !== 0)\n            observablesArray.push(\n              of({\n                type: TYPE_.QUEUE_ACCOUNT_NOTIFICATION,\n                payload: accountsUpdate[1]\n              })\n            )\n          if (DEBUGGING.initAccountsTransactionsInEpic) {\n            const currentState = state$.value\n            if (accountsUpdate[2]) {\n              // if (\n              //   currentState.transactionsDrago.selectedDrago.details.dragoId\n              // ) {\n              //   console.log('Account monitoring - > DRAGO details fetch.')\n              //   observablesArray.push(\n              //     of(\n              //       Actions.pools.getPoolsSingleDetails(\n              //         currentState.transactionsDrago.selectedDrago.details\n              //           .dragoId,\n              //         action.payload.api,\n              //         {\n              //           poolType: 'drago'\n              //         }\n              //       )\n              //     )\n              //   )\n              // }\n\n              // if (\n              //   currentState.transactionsVault.selectedVault.details.vaultId\n              // ) {\n              //   console.log('Account monitoring - > VAULT details fetch.')\n              //   observablesArray.push(\n              //     of(\n              //       Actions.pools.getPoolsSingleDetails(\n              //         currentState.transactionsVault.selectedVault.details\n              //           .vaultId,\n              //         action.payload.api,\n              //         {\n              //           poolType: 'vault'\n              //         }\n              //       )\n              //     )\n              //   )\n              // }\n              // observablesArray.push(of(DEBUGGING.DUMB_ACTION))\n              console.log(\n                'Account monitoring - > DRAGO transactions fetch trader'\n              )\n              observablesArray.push(\n                of(\n                  Actions.endpoint.getAccountsTransactions(\n                    null,\n                    currentState.endpoint.accounts,\n                    {\n                      balance: true,\n                      supply: false,\n                      limit: 20,\n                      trader: true,\n                      drago: true\n                    }\n                  )\n                )\n              )\n              console.log(\n                'Account monitoring - > DRAGO transactions fetch manager'\n              )\n              observablesArray.push(\n                of(\n                  Actions.endpoint.getAccountsTransactions(\n                    null,\n                    currentState.endpoint.accounts,\n                    {\n                      balance: false,\n                      supply: true,\n                      limit: 20,\n                      trader: false,\n                      drago: true\n                    }\n                  )\n                )\n              )\n\n              console.log(\n                'Account monitoring - > VAULT transactions fetch manager'\n              )\n              observablesArray.push(of(DEBUGGING.DUMB_ACTION))\n              observablesArray.push(\n                of(\n                  Actions.endpoint.getAccountsTransactions(\n                    null,\n                    currentState.endpoint.accounts,\n                    {\n                      balance: false,\n                      supply: true,\n                      limit: 20,\n                      trader: false,\n                      drago: false\n                    }\n                  )\n                )\n              )\n              console.log(\n                'Account monitoring - > VAULT transactions fetch trader'\n              )\n              observablesArray.push(\n                of(\n                  Actions.endpoint.getAccountsTransactions(\n                    null,\n                    currentState.endpoint.accounts,\n                    {\n                      balance: true,\n                      supply: false,\n                      limit: 20,\n                      trader: true,\n                      drago: false\n                    }\n                  )\n                )\n              )\n            }\n          }\n\n          return concat(...observablesArray)\n        }),\n        retryWhen(error => {\n\n          let scalingDuration = 3000\n          return error.pipe(\n            mergeMap((error, i) => {\n              console.warn(error)\n              const retryAttempt = i + 1\n\n              // retry after 1s, 2s, etc...\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../actions/const'\nimport { Actions } from '../actions'\n// import { DEBUGGING } from '../../_utils/const'\nimport * as utils from '../../_utils/pools'\nimport { Observable, from, of, timer } from 'rxjs'\nimport {\n  catchError,\n  finalize,\n  map,\n  mergeMap,\n  retryWhen,\n  takeUntil\n} from 'rxjs/operators'\nimport { getBlockChunks } from '../../_utils/blockChain'\nimport { getFromBlock, getWeb3 } from '../../_utils/misc'\nimport { ofType } from 'redux-observable'\nimport BigNumber from 'bignumber.js'\nimport PoolsApi from '../../PoolsApi/src'\n\n//\n// FETCH LIST OF DRAGOS\n//\n\nconst getPoolsChunkedEvents$ = (options, state$) => {\n  return Observable.create(observer => {\n    let { startBlock, lastBlock } = state$.value.poolsList.lastFetchRange\n    let { networkInfo } = state$.value.endpoint\n    const web3 = getWeb3(networkInfo)\n    const poolApi = new PoolsApi(web3)\n    startBlock === 0\n      ? (startBlock = getFromBlock(networkInfo))\n      : (startBlock = lastBlock)\n\n    const logToEvent = log => {\n      const hexToString = hex => {\n        let string = ''\n        for (let i = 0; i < hex.length; i += 2) {\n          string += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n        }\n        return string\n      }\n      const { returnValues } = log\n      let symbol\n      if (typeof returnValues.symbol === 'string') {\n        '0x' === returnValues.symbol.substring(0, 2)\n          ? (symbol = hexToString(returnValues.symbol.substring(2)))\n          : (symbol = returnValues.symbol)\n      } else {\n        for (let i = 0; i < returnValues.symbol.length; ++i) {\n          symbol += String.fromCharCode(returnValues.symbol[i])\n        }\n      }\n      let id = returnValues.dragoId || returnValues.vaultId\n      let poolType = returnValues.dragoId ? 'drago' : 'vault'\n      let address = returnValues.drago || returnValues.vault\n      return {\n        symbol,\n        id,\n        name: returnValues.name,\n        address,\n        poolType\n      }\n    }\n\n    Promise.all([\n      poolApi.contract.vaulteventful.init(),\n      poolApi.contract.dragoeventful.init(),\n      web3.eth.getBlockNumber()\n    ])\n      .then(async results => {\n        lastBlock = new BigNumber(results[2]).toNumber()\n        let chunck = 250000\n        let chunks\n        try {\n          chunks = await getBlockChunks(startBlock, lastBlock, chunck, web3)\n        } catch (err) {\n          return observer.error(err)\n        }\n        let i = 0\n        chunks.map(async (chunk, key) => {\n          let optionsVault = {\n            topics: [\n              poolApi.contract.vaulteventful.hexSignature.VaultCreated,\n              null,\n              null,\n              null\n            ],\n            fromBlock: chunk.fromBlock,\n            toBlock: chunk.toBlock\n          }\n          let optionsDrago = {\n            topics: [\n              poolApi.contract.dragoeventful.hexSignature.DragoCreated,\n              null,\n              null,\n              null\n            ],\n            fromBlock: chunk.fromBlock,\n            toBlock: chunk.toBlock\n          }\n          const vaultPromise = poolApi.contract.vaulteventful.getAllLogs(\n            optionsVault\n          )\n          const dragoPromise = poolApi.contract.dragoeventful.getAllLogs(\n            optionsDrago\n          )\n          try {\n            const [logsVault, logsDrago] = await Promise.all([\n              vaultPromise,\n              dragoPromise\n            ])\n            i++\n            const list = [...logsVault, ...logsDrago].map(logToEvent)\n            let listId = {}\n            list.forEach(pool => {\n              listId[pool.id] = { details: pool }\n            })\n            let result = {\n              list: listId,\n              lastFetchRange: {\n                chunk: {\n                  key: key,\n                  total: chunks.length,\n                  progress: i / chunks.length,\n                  toBlock:\n                    chunk.toBlock === 'latest'\n                      ? Number(lastBlock)\n                      : Number(chunk.toBlock),\n                  fromBlock: chunk.fromBlock\n                },\n\n                startBlock: Number(startBlock),\n                lastBlock: Number(lastBlock)\n              }\n            }\n\n            observer.next(result)\n          } catch (err) {\n            return observer.error(err)\n          }\n        })\n      })\n      .catch(err => {\n        return observer.error(err)\n      })\n  })\n}\n\nexport const getPoolsListEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(TYPE_.POOLS_LIST_GET),\n    mergeMap(action => {\n      return getPoolsChunkedEvents$(action.payload.options, state$).pipe(\n        map(results => {\n          return Actions.pools.updatePoolsList(results)\n        }),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: 'Error fetching list of dragos.'\n          })\n        })\n      )\n    })\n  )\n\n//\n// FETCH ACCOUNT TRANSACTIONS\n//\n\nconst getPoolsSingleTransactions$ = (\n  networkInfo,\n  poolAddress,\n  accounts,\n  options\n) => {\n  return options.drago\n    ? from(\n      utils.getTransactionsDragoOptV2(\n        networkInfo,\n        poolAddress,\n        accounts,\n        options\n      )\n    )\n    : from(\n      utils.getTransactionsVaultOptV2(\n        networkInfo,\n        poolAddress,\n        accounts,\n        options\n      )\n    )\n}\n\nexport const getAccountsTransactionsEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.GET_ACCOUNTS_TRANSACTIONS),\n    mergeMap(action => {\n      const { networkInfo } = state$.value.endpoint\n      return getPoolsSingleTransactions$(\n        networkInfo,\n        action.payload.poolAddress,\n        action.payload.accounts,\n        action.payload.options\n      ).pipe(\n        map(results => {\n          if (action.payload.options.drago) {\n            if (!action.payload.options.trader) {\n              return Actions.drago.updateDragoTransactionsManager(\n                results.length === 0 ? [Array(0), Array(0), Array(0)] : results\n              )\n            }\n            return Actions.drago.updateDragoTransactionsHolder(results)\n            // return DEBUGGING.DUMB_ACTION\n          } else {\n            if (!action.payload.options.trader) {\n              return Actions.vault.updateVaultTransactionsManager(\n                results.length === 0 ? [Array(0), Array(0), Array(0)] : results\n              )\n            }\n            return Actions.vault.updateVaultTransactionsHolder(results)\n            // return DEBUGGING.DUMB_ACTION\n          }\n        }),\n        retryWhen(error => {\n          console.warn('getAccountsTransactionsEpic error')\n          let scalingDuration = 10000\n          return error.pipe(\n            mergeMap(error => {\n              console.warn(error)\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    })\n  )\n}\n\n//\n// FETCH POOL TRANSACTIONS\n//\n\nexport const getPoolTransactionsEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(TYPE_.POOLS_SINGLE_TRANSACTIONS_GET),\n    mergeMap(action => {\n      const { networkInfo } = state$.value.endpoint\n      return getPoolsSingleTransactions$(\n        networkInfo,\n        action.payload.poolAddress,\n        action.payload.accounts,\n        action.payload.options\n      ).pipe(\n        map(transactions => {\n          if (action.payload.options.drago) {\n            return Actions.drago.updateDragoSelectedDetails({\n              transactions\n            })\n          } else {\n            return Actions.vault.updateVaultSelectedDetails({\n              transactions\n            })\n          }\n        }),\n        takeUntil(\n          action$.pipe(\n            ofType(\n              TYPE_.DRAGO_SELECTED_DETAILS_RESET,\n              TYPE_.VAULT_SELECTED_DETAILS_RESET\n            )\n          )\n        ),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: 'Error fetching account transactions.'\n          })\n        })\n      )\n    })\n  )\n","import { BigNumber } from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\n\nexport const getTokensBalances = async (dragoAddress, allowedTokens, web3) => {\n  let dragoAssets = {}\n  const poolApi = new PoolApi(web3)\n  try {\n    poolApi.contract.drago.init(dragoAddress)\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  let tokenAddresses = []\n  let tokenWrappersAddresses = []\n\n  Object.keys(allowedTokens).forEach(token => {\n    if (web3.utils.isAddress(allowedTokens[token].address)) {\n      let address = allowedTokens[token].address\n      tokenAddresses.push(address)\n    }\n    if (typeof allowedTokens[token].wrappers.Ethfinex !== 'undefined') {\n      let address = allowedTokens[token].wrappers.Ethfinex.address\n      if (web3.utils.isAddress(address)) {\n        tokenWrappersAddresses.push(address)\n      }\n    }\n  })\n\n  // Getting token balances\n  let tokenBalances = poolApi.contract.drago.getMultiBalancesAndAddressesFromAddresses(\n    tokenAddresses\n  )\n\n  // Getting token wrappers balances\n  let tokenWrappersBalances = poolApi.contract.drago.getMultiBalancesAndAddressesFromAddresses(\n    tokenWrappersAddresses\n  )\n\n  ;[tokenBalances, tokenWrappersBalances] = await Promise.all([\n    tokenBalances,\n    tokenWrappersBalances\n  ])\n\n  tokenBalances.tokenAddresses = tokenBalances.tokenAddresses.map(address =>\n    address.toLowerCase()\n  )\n  tokenWrappersBalances.tokenAddresses = tokenWrappersBalances.tokenAddresses.map(\n    address => address.toLowerCase()\n  )\n  for (let token in allowedTokens) {\n    let tokenAddress = allowedTokens[token].address.toLowerCase()\n    if (tokenAddress !== '0x0') {\n      let balances = {\n        token: new BigNumber(0),\n        wrappers: {},\n        total: new BigNumber(0)\n      }\n      let balanceIndex\n      let total = new BigNumber(0)\n\n      // Adding token balance\n\n      balanceIndex = tokenBalances.tokenAddresses.indexOf(tokenAddress)\n      if (balanceIndex !== -1) {\n        balances.token = new BigNumber(tokenBalances.balances[balanceIndex])\n        // console.log(token, balances.token)\n        total = total.plus(balances.token)\n      }\n\n      // Adding token wrapper balance\n      for (let wrapper in allowedTokens[token].wrappers) {\n        let wrapperAddess = allowedTokens[token].wrappers[\n          wrapper\n        ].address.toLowerCase()\n        balanceIndex = tokenWrappersBalances.tokenAddresses.indexOf(\n          wrapperAddess\n        )\n        if (balanceIndex !== -1) {\n          balances.wrappers[wrapper] = new BigNumber(\n            tokenWrappersBalances.balances[balanceIndex]\n          )\n          // console.log(token, tokenWrappersBalances.balances[balanceIndex])\n          total = total.plus(balances.wrappers[wrapper])\n        }\n      }\n      if (!total.eq(0)) {\n        balances.total = new BigNumber(total)\n        dragoAssets[token] = Object.assign({}, allowedTokens[token])\n        dragoAssets[token].balances = Object.assign({}, balances)\n      }\n    }\n  }\n\n  return dragoAssets\n}\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nexport const ERCdEX = 'ERCdEX'\nexport const Ethfinex = 'Ethfinex'\n\nexport const NETWORKS_ID = {\n  mainnet: 1,\n  ropsten: 3,\n  kovan: 42,\n  1: 'mainnet',\n  3: 'ropsten',\n  42: 'kovan'\n}\n\nexport const SupportedExchanges = {\n  ERCdEX: {\n    supportedNetworks: ['1', '42'],\n    tickersTokenPairs: [],\n    http: {\n      mainnet: 'https://api.ercdex.com/api',\n      ropsten: 'https://api.ercdex.com/api',\n      kovan: 'https://kovan-staging.ercdex.com/api/v2'\n    },\n    ws: {\n      mainnet: 'wss://api.ercdex.com',\n      ropsten: 'wss://api.ercdex.com',\n      kovan: 'wss://api.ercdex.com'\n    }\n  },\n  Ethfinex: {\n    supportedNetworks: ['1', '3', '42'],\n    tickersTokenPairs: ['tZRXETH', 'tMKRETH', 'tGNTETH'],\n    http: {\n      mainnet: 'https://api.ethfinex.com',\n      ropsten: 'https://test.ethfinex.com',\n      kovan: 'https://test.ethfinex.com'\n    },\n    ws: {\n      mainnet: 'wss://api.ethfinex.com/ws/2',\n      ropsten: 'wss://test.ethfinex.com/ws/2',\n      kovan: 'wss://test.ethfinex.com/ws/2'\n    }\n  }\n}\n","import { BigNumber } from 'bignumber.js'\nimport { ERCdEX, Ethfinex } from './const'\nimport { ZeroEx } from '0x.js'\nimport Web3 from 'web3'\nimport moment from 'moment'\n\nconst formatOrdersFromAggregateERCdEX = orders => {\n  let orderPrice, orderAmount\n  let web3 = new Web3(Web3.currentProvider)\n  let formattedOrders = orders.map(order => {\n    orderPrice = new BigNumber(order.price).toFixed(7)\n    orderAmount = new BigNumber(\n      web3.utils.fromWei(Web3.utils.toBN(order.volume))\n    ).toFixed(5)\n    let orderObject = {\n      orderAmount,\n      orderPrice\n    }\n    return orderObject\n  })\n  return formattedOrders\n}\n\nexport const formatOrdersFromERCdEX = (orders, orderType) => {\n  let orderPrice, orderAmount\n  let web3 = new Web3(Web3.currentProvider)\n  let formattedOrders = orders.map(order => {\n    switch (orderType) {\n      case 'asks':\n        orderPrice = new BigNumber(order.takerAssetAmount)\n          .div(new BigNumber(order.makerAssetAmount))\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          web3.utils.fromWei(Web3.utils.toBN(order.makerAssetAmount), 'ether')\n        ).toFixed(5)\n        break\n      case 'bids':\n        orderPrice = new BigNumber(1)\n          .div(\n            new BigNumber(order.takerAssetAmount).div(\n              new BigNumber(order.makerAssetAmount)\n            )\n          )\n          .toFixed(7)\n        orderAmount = new BigNumber(\n          web3.utils.fromWei(Web3.utils.toBN(order.takerAssetAmount), 'ether')\n        ).toFixed(5)\n        break\n      default:\n        return null\n    }\n    let orderHash = ZeroEx.getOrderHashHex(order)\n    let orderObject = {\n      order,\n      orderAmount,\n      orderType,\n      orderPrice,\n      orderHash\n    }\n    return orderObject\n  })\n  return formattedOrders\n}\n\nconst formatOrdersFromAggregateEthfinex = orders => {\n  let orderPrice, orderAmount\n  let formattedOrders = orders.map(order => {\n    orderPrice = new BigNumber(order[0]).toFixed(7)\n    orderAmount = new BigNumber(order[2]).abs().toFixed(5)\n    let orderObject = {\n      orderAmount,\n      orderPrice\n    }\n    return orderObject\n  })\n  return formattedOrders\n}\n\nconst calculateSpread = (asksOrders, bidsOrders) => {\n  let spread = 0\n  if (bidsOrders.length !== 0 && asksOrders.length !== 0) {\n    spread = new BigNumber(asksOrders[asksOrders.length - 1].orderPrice)\n      .minus(new BigNumber(bidsOrders[0].orderPrice))\n      .toFixed(6)\n  } else {\n    spread = new BigNumber(0).toFixed(6)\n  }\n  return spread\n}\n\nexport const tickers = {\n  [ERCdEX]: tickers => {\n    let tickersList = []\n    tickers.forEach(ticker => {\n      if (ticker.quoteTokenSymbol === 'WETH') {\n        tickersList.push({\n          priceEth: ticker.last,\n          priceUsd: null,\n          symbol: ticker.baseTokenSymbol\n        })\n      }\n    })\n    tickersList.push({\n      priceEth: 1,\n      priceUsd: null,\n      symbol: 'WETH'\n    })\n    return tickersList\n  },\n  [Ethfinex]: tickers => {\n    let tickersList = tickers.map(ticker => {\n      return {\n        priceEth: ticker[7].toString(),\n        priceUsd: '',\n        symbol: ticker[0].substr(1, 3)\n      }\n    })\n    tickersList.push({\n      priceEth: '1',\n      priceUsd: '',\n      symbol: 'WETH'\n    })\n    tickersList.push({\n      priceEth: '1',\n      priceUsd: '',\n      symbol: 'ETH'\n    })\n    return tickersList\n  }\n}\n\nexport const aggregatedOrders = {\n  [ERCdEX]: orders => {\n    const bidsOrders = formatOrdersFromAggregateERCdEX(\n      orders.buys.priceLevels,\n      'bids'\n    )\n    const asksOrders = formatOrdersFromAggregateERCdEX(\n      orders.sells.priceLevels,\n      'asks'\n    )\n    const spread = calculateSpread(asksOrders, bidsOrders)\n    return {\n      bids: bidsOrders,\n      asks: asksOrders,\n      spread\n      // aggregated: true\n    }\n  },\n  [Ethfinex]: orders => {\n    let bids = new Array(0)\n    let asks = new Array(0)\n    orders.forEach(order => {\n      order[2] > 0 ? bids.push(order) : asks.push(order)\n    })\n    const bidsOrders = formatOrdersFromAggregateEthfinex(bids, 'bids')\n    const asksOrders = formatOrdersFromAggregateEthfinex(asks.reverse(), 'asks')\n    // console.log(bidsOrders)\n    // console.log(asksOrders)\n    const spread = calculateSpread(asksOrders, bidsOrders)\n    return {\n      bids: bidsOrders,\n      asks: asksOrders,\n      spread\n      // aggregated: true\n    }\n  }\n}\n\nexport const orders = {\n  [ERCdEX]: orders => {\n    const bidsOrders = formatOrdersFromERCdEX(orders.bids, 'bids')\n    const asksOrders = formatOrdersFromERCdEX(orders.asks, 'asks')\n    const spread = calculateSpread(asksOrders, bidsOrders)\n    return {\n      bids: bidsOrders,\n      asks: asksOrders,\n      spread\n      // aggregated: false\n    }\n  },\n  [Ethfinex]: orders => {\n    let bids = new Array(0)\n    let asks = new Array(0)\n    orders.forEach(order => {\n      order[2] > 0 ? bids.push(order) : asks.push(order)\n    })\n    const bidsOrders = formatOrdersFromAggregateEthfinex(bids, 'bids')\n    const asksOrders = formatOrdersFromAggregateEthfinex(asks.reverse(), 'asks')\n    // console.log(bidsOrders)\n    // console.log(asksOrders)\n    const spread = calculateSpread(asksOrders, bidsOrders)\n    return {\n      bids: bidsOrders,\n      asks: asksOrders,\n      spread,\n      aggregated: true\n    }\n  }\n}\n\nexport const accountOrders = {\n  // [ERCdEX]: (orders) => {\n  //   const bidsOrders = formatOrdersFromERCdEX(orders.bids, 'bids')\n  //   const asksOrders = formatOrdersFromERCdEX(orders.asks, 'asks')\n  //   const spread = calculateSpread(asksOrders, bidsOrders)\n  //   return {\n  //     bids: bidsOrders,\n  //     asks: asksOrders,\n  //     spread,\n  //     // aggregated: false\n  //   }\n  // },\n  [Ethfinex]: orders => {\n    let orderPrice, orderAmount, remainingAmount\n    let formattedOrders = orders.map(order => {\n      let orderType = order.amount > 0 ? 'bids' : 'asks'\n      orderPrice = new BigNumber(order.price).toFixed(7)\n      orderAmount = new BigNumber(order.amount).toFixed(5)\n      remainingAmount = new BigNumber(order.amount).toFixed(5)\n      let date = moment(order.created_at)\n      let yesterday = moment()\n        .subtract(1, 'days')\n        .endOf('day')\n      let orderObject = {\n        order,\n        dateCreated: date.isAfter(yesterday)\n          ? date.format('h:mm:ss')\n          : date.format('YYYY-MM-DD'),\n        orderAmount,\n        remainingAmount,\n        orderType,\n        orderPrice,\n        active: order.active\n      }\n\n      return orderObject\n    })\n    return formattedOrders\n  }\n}\n\nexport const historicalPricesData = {\n  [ERCdEX]: historical => {\n    // return historical\n    return historical.map(entry => {\n      const date = new Date(entry.date)\n      entry.date = date\n      return entry\n    })\n  }\n  // [Ethfinex]: (orders) => {\n  //   var bids = new Array()\n  //   var asks = new Array()\n  //   orders.map(order => {\n  //     (order[2] > 0) ? bids.push(order) : asks.push(order)\n  //   })\n  //   const bidsOrders = formatOrdersFromAggregateEthfinex(bids, 'bids')\n  //   const asksOrders = formatOrdersFromAggregateEthfinex(asks.reverse(), 'asks')\n  //   // console.log(bidsOrders)\n  //   // console.log(asksOrders)\n  //   const spread = calculateSpread(asksOrders, bidsOrders)\n  //   return {\n  //     bids: bidsOrders,\n  //     asks: asksOrders,\n  //     spread,\n  //     aggregated: true\n  //   }\n  // },\n}\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport { NETWORKS_ID, SupportedExchanges } from './const'\n\n// Get a list of orders aggregated by price levels\nexport const getAggregatedOrders = {\n  ERCdEX: (networkId = 1, baseTokenAddress, quoteTokenAddress) => {\n    const options = {\n      method: 'GET',\n      uri: `${\n        SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]\n      }/aggregated_orders`,\n      qs: {\n        networkId: networkId,\n        baseTokenAddress: baseTokenAddress,\n        quoteTokenAddress: quoteTokenAddress\n      },\n      json: true\n    }\n    return options\n  },\n  Ethfinex: (networkId = 1, baseToken, quoteToken) => {\n    if (baseToken.length > 4) {\n      throw new Error('baseToken has to be a shorter than 4 characters')\n    }\n    if (quoteToken.length > 4) {\n      throw new Error('quoteToken has to be a shorter than 4 characters')\n    }\n    const options = {\n      method: 'GET',\n      url: `${\n        SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]\n      }/v2/book/t${baseToken}${quoteToken}/P2`,\n      qs: {},\n      json: true\n    }\n    return options\n  }\n}\n\n// Get a list of orders\nexport const getOrders = {\n  ERCdEX: (networkId = 1, baseTokenAddress, quoteTokenAddress) => {\n    const options = {\n      method: 'GET',\n      uri: `${\n        SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]\n      }/standard/${networkId}/v0/orderbook`,\n      qs: {\n        baseTokenAddress: baseTokenAddress,\n        quoteTokenAddress: quoteTokenAddress\n      },\n      json: true\n    }\n    return options\n  },\n  Ethfinex: (networkId = 1, baseToken, quoteToken) => {\n    if (baseToken.length > 4) {\n      throw new Error('baseToken has to be a shorter than 4 characters')\n    }\n    if (quoteToken.length > 4) {\n      throw new Error('quoteToken has to be a shorter than 4 characters')\n    }\n    const options = {\n      method: 'GET',\n      url: `${\n        SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]\n      }/v2/book/t${baseToken}${quoteToken}/P2`,\n      qs: {},\n      json: true\n    }\n    return options\n  }\n}\n\n// Get historical prices data for a given period of time\n// export const getConf = {\n//   Ethfinex: (networkId = 1) => {\n//     const options = {\n//       method: 'POST',\n//       uri: `${\n//         SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]\n//       }/reports/historical`,\n//       body: {\n//         networkId: networkId,\n//         baseTokenAddress: baseTokenAddress,\n//         quoteTokenAddress: quoteTokenAddress,\n//         startDate: startDate\n//       },\n//       json: true\n//     }\n//     return options\n//   }\n// }\n\n// Get historical prices data for a given period of time\nexport const getHistoricalPricesData = {\n  ERCdEX: (networkId = 1, baseTokenAddress, quoteTokenAddress, startDate) => {\n    const options = {\n      method: 'POST',\n      uri: `${\n        SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]\n      }/reports/historical`,\n      body: {\n        networkId: networkId,\n        baseTokenAddress: baseTokenAddress,\n        quoteTokenAddress: quoteTokenAddress,\n        startDate: startDate\n      },\n      json: true\n    }\n    return options\n  }\n  // Ethfinex: (networkId = 1, baseToken, quoteToken) => {\n  //   if (baseToken.length > 4) {\n  //     throw new Error('baseToken has to be a shorter than 4 characters')\n  //   }\n  //   if (quoteToken.length > 4) {\n  //     throw new Error('quoteToken has to be a shorter than 4 characters')\n  //   }\n  //   const options = {\n  //     method: 'GET',\n  //     url: `${SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]}/book/t${baseToken}${quoteToken}/P0`,\n  //     qs: {},\n  //     json: true\n  //   }\n  //   return options\n  // }\n}\n\n// Get a list of tokens with price information\nexport const getTickers = {\n  ERCdEX: (networkId = 1) => {\n    const options = {\n      method: 'GET',\n      url: `${\n        SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]\n      }/ticker?networkId=${networkId}`,\n      qs: {},\n      json: true\n    }\n    return options\n  },\n  Ethfinex: (networkId = 1, symbols) => {\n    const options = {\n      method: 'GET',\n      url: `${\n        SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]\n      }/v2/tickers`,\n      qs: {\n        symbols: `${symbols}`\n      },\n      json: true\n    }\n    return options\n  }\n}\n\n// Get a list of submitted orders for a specific account\nexport const getAccountOrders = {\n  // ERCdEX: (networkId = 1) => {\n  //   const options = {\n  //     method: 'GET',\n  //     url: `${SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]}/reports/ticker?networkId=${networkId}`,\n  //     qs: {},\n  //     json: true\n  //   }\n  //   return options\n  // },\n  Ethfinex: (networkId = 1, account, protocol = '0x') => {\n\n    const options = {\n      method: 'POST',\n      url: `${\n        SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]\n      }/trustless/v1/r/orders`,\n      body: {\n        signature: account.signature,\n        nonce: account.nonce,\n        protocol: protocol\n      },\n      json: true\n    }\n    return options\n  }\n}\n\nexport const getAccountHistory = {\n  // ERCdEX: (networkId = 1) => {\n  //   const options = {\n  //     method: 'GET',\n  //     url: `${SupportedExchanges.ERCdEX.http[NETWORKS_ID[networkId]]}/reports/ticker?networkId=${networkId}`,\n  //     qs: {},\n  //     json: true\n  //   }\n  //   return options\n  // },\n  Ethfinex: (networkId = 1, account, protocol = '0x') => {\n    const options = {\n      method: 'POST',\n      url: `${\n        SupportedExchanges.Ethfinex.http[NETWORKS_ID[networkId]]\n      }/trustless/v1/r/orders/hist`,\n      body: {\n        signature: account.signature,\n        nonce: account.nonce,\n        protocol: protocol\n      },\n      json: true\n    }\n    return options\n  }\n}\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport { NETWORKS_ID, SupportedExchanges } from './const'\n// import ReconnectingWebSocket from 'reconnecting-websocket'\nimport ReconnectingWebSocket from 'reconnecting-websocket/dist/reconnecting-websocket-amd.js'\n\nconst wsOptions = ['', { minReconnectionDelay: 1 }]\n\nexport const getAggregatedOrders = {\n  // ERCdEX: (networkId = 1, baseTokenAddress, quoteTokenAddress) => {\n  //   const websocket = new ReconnectingWebSocket(\n  //     SupportedExchanges.ERCdEX.ws[NETWORKS_ID[networkId]]\n  //   )\n  //   websocket.addEventListener('open', () => {\n  //     console.log('WebSocket open.')\n  //     try {\n  //       websocket.send(`sub:ticker`)\n  //       websocket.send(\n  //         `sub:pair-order-change/${baseTokenAddress}/${quoteTokenAddress}`\n  //       )\n  //       websocket.send(\n  //         `sub:pair-order-change/${quoteTokenAddress}/${baseTokenAddress}`\n  //       )\n  //     } catch (err) {\n  //       throw new Error(\n  //         `Error connectiong to ${\n  //           SupportedExchanges.ERCdEX.ws[NETWORKS_ID[networkId]]\n  //         }`\n  //       )\n  //     }\n  //   })\n  //   return websocket\n  // },\n  Ethfinex: (networkId = 1, baseTokenSymbol, quoteTokenSymbol) => {\n    const websocket = new ReconnectingWebSocket(\n      SupportedExchanges.Ethfinex.ws[NETWORKS_ID[networkId]],\n      ...wsOptions\n    )\n    return websocket\n  }\n}\n\nexport const getTicker = {\n  ERCdEX: (networkId = 1, baseTokenAddress, quoteTokenAddress) => {\n    const websocket = new ReconnectingWebSocket(\n      SupportedExchanges.ERCdEX.ws[NETWORKS_ID[networkId]],\n      ...wsOptions\n    )\n    websocket.addEventListener('open', () => {\n\n      try {\n        websocket.send(`sub:ticker`)\n        websocket.send(\n          `sub:pair-order-change/${baseTokenAddress}/${quoteTokenAddress}`\n        )\n        websocket.send(\n          `sub:pair-order-change/${quoteTokenAddress}/${baseTokenAddress}`\n        )\n      } catch (err) {\n        throw new Error(\n          `Error connectiong to ${\n            SupportedExchanges.ERCdEX.ws[NETWORKS_ID[networkId]]\n          }`\n        )\n      }\n    })\n    return websocket\n  },\n  Ethfinex: (networkId = 1 /* baseTokenSymbol , */ /* quoteTokenSymbol */) => {\n    const websocket = new ReconnectingWebSocket(\n      SupportedExchanges.Ethfinex.ws[NETWORKS_ID[networkId]],\n      ...wsOptions\n    )\n    return websocket\n  }\n}\n\nexport const getTickers = {\n  ERCdEX: networkId => {\n    throw Error(\n      `NetworkId ${networkId} getTickers Ws for ERCdEX not implemented.`\n    )\n  },\n  Ethfinex: networkId => {\n    const websocket = new ReconnectingWebSocket(\n      SupportedExchanges.Ethfinex.ws[NETWORKS_ID[networkId]],\n      ...wsOptions\n    )\n    // websocket.addEventListener('open', () => {\n    //   let msg = JSON.stringify({\n    //     event: `subscribe`,\n    //     channel: `candles`,\n    //     key: `trade:1m:t${baseToken}${quoteToken}`\n    //   })\n    //   websocket.send(msg);\n    // })\n    return websocket\n  }\n}\n\nexport const getHistoricalPricesData = {\n  ERCdEX: networkId => {\n    throw Error(\n      `NetworkId ${networkId} getTickers Ws for ERCdEX not implemented.`\n    )\n  },\n  Ethfinex: networkId => {\n    const websocket = new ReconnectingWebSocket(\n      SupportedExchanges.Ethfinex.ws[NETWORKS_ID[networkId]],\n      ...wsOptions\n    )\n    // websocket.addEventListener('open', () => {\n    //   let msg = JSON.stringify({\n    //     event: `subscribe`,\n    //     channel: `candles`,\n    //     key: `trade:1m:t${baseToken}${quoteToken}`\n    //   })\n    //   websocket.send(msg);\n    // })\n    return websocket\n  }\n}\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as FORMAT from './format'\nimport * as http from './exchanges'\nimport * as ws from './exchangesWs'\nimport { ERCdEX, Ethfinex } from './const'\nimport { SupportedExchanges } from './const'\nimport rp from 'request-promise'\n\nclass Exchange {\n  constructor(exchange, networkId, transport = 'http') {\n    if (typeof SupportedExchanges[exchange] === 'undefined') {\n      throw new Error('Exchange not supported: ' + exchange)\n    }\n    if (\n      !SupportedExchanges[exchange].supportedNetworks.includes(\n        networkId.toString()\n      )\n    ) {\n      throw new Error('Network not supported on this exchange: ' + networkId)\n    }\n    this._exchange = exchange\n    this._network = networkId\n    // this._network = 3\n    this._transport = transport\n    this._exchangeProperties = SupportedExchanges[exchange]\n    this._call = {\n      http,\n      ws\n    }\n  }\n\n  returnResults = (\n    query,\n    formatFunction = input => {\n      return input\n    }\n  ) => {\n    switch (this._transport) {\n      case 'ws':\n        return query()\n      case 'http':\n        return rp(query())\n          .then(results => {\n            // console.log(results)\n            // console.log(formatFunction)\n            // console.log(formatFunction(results))\n            // console.log('formatting')\n            return formatFunction(results)\n          })\n          .catch(err => {\n\n            throw new Error(err)\n          })\n      default:\n        throw new Error('Transport unknown')\n    }\n  }\n\n  getAggregatedOrders = (baseToken, quoteToken) => {\n\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n          return this._call[this._transport].getAggregatedOrders[\n            this._exchange\n          ](this._network, baseToken, quoteToken)\n        case Ethfinex:\n          return this._call[this._transport].getAggregatedOrders[\n            this._exchange\n          ](this._network, baseToken, quoteToken)\n        default:\n          throw new Error('Relay unknown')\n      }\n    }, FORMAT.aggregatedOrders[this._exchange])\n  }\n\n  submbitOrder = signedOrder => {\n\n    if (!signedOrder) {\n      throw new Error('signedOrder needs to be set')\n    }\n    return this.returnResults(\n      () => {\n        switch (this._exchange) {\n          case ERCdEX:\n            return this._call[this._transport].getOrders[this._exchange](\n              signedOrder\n            )\n          // case Ethfinex:\n          //   return this._call[this._transport].getOrders[this._exchange](signedOrder)\n          default:\n            throw new Error('Relay unknown')\n        }\n      }\n      // FORMAT.orders[this._exchange]\n    )\n  }\n\n  getAccountOrders = (account, baseToken, quoteToken) => {\n    if (!account) {\n      throw new Error('account needs to be set')\n    }\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n          throw new Error(\n            `getAccountOrders not implemented fo ${this._exchange}`\n          )\n        case Ethfinex:\n          return this._call[this._transport].getAccountOrders[this._exchange](\n            this._network,\n            account\n          )\n        default:\n          throw new Error('Relay unknown')\n      }\n    }, FORMAT.accountOrders[this._exchange])\n  }\n\n  getAccountHistory = (account, baseToken, quoteToken) => {\n    if (!account) {\n      throw new Error('account needs to be set')\n    }\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n          throw new Error(\n            `getAccountHistory not implemented fo ${this._exchange}`\n          )\n        case Ethfinex:\n          return this._call[this._transport].getAccountHistory[this._exchange](\n            this._network,\n            account\n          )\n        default:\n          throw new Error('Relay unknown')\n      }\n    }, FORMAT.accountOrders[this._exchange])\n  }\n\n  getOrders = (baseToken, quoteToken) => {\n\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n          return this._call[this._transport].getOrders[this._exchange](\n            this._network,\n            baseToken,\n            quoteToken\n          )\n        case Ethfinex:\n          return this._call[this._transport].getOrders[this._exchange](\n            this._network,\n            baseToken,\n            quoteToken\n          )\n        default:\n          throw new Error('Relay unknown')\n      }\n    }, FORMAT.orders[this._exchange])\n  }\n\n  getHistoricalPricesData = (baseToken, quoteToken, startDate) => {\n\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    if (!startDate) {\n      throw new Error('startDate needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n          return this._call[this._transport].getHistoricalPricesData[\n            this._exchange\n          ](this._network, baseToken, quoteToken, startDate)\n        case Ethfinex:\n          return this._call[this._transport].getHistoricalPricesData[\n            this._exchange\n          ](this._network, baseToken, quoteToken, startDate)\n        default:\n          throw new Error('Relay unknown')\n      }\n    }, FORMAT.historicalPricesData[this._exchange])\n  }\n\n  getTicker = (baseToken, quoteToken) => {\n    if (!baseToken) {\n      throw new Error('baseToken needs to be set')\n    }\n    if (!quoteToken) {\n      throw new Error('quoteToken needs to be set')\n    }\n    return this.returnResults(() => {\n      switch (this._exchange) {\n        case ERCdEX:\n\n          return this._call[this._transport].getTicker[this._exchange](\n            this._network,\n            baseToken,\n            quoteToken\n          )\n        case Ethfinex:\n          return this._call[this._transport].getTicker[this._exchange](\n            this._network,\n            baseToken,\n            quoteToken\n          )\n        default:\n          throw new Error('Relay unknown')\n      }\n    })\n  }\n\n  getTickers = (\n    symbols = SupportedExchanges.Ethfinex.tickersTokenPairs.toString()\n  ) => {\n\n    // I have only added Ethfinex so far, because this function return every tokens price\n    // and we use the data to calcuate the funds assets value.\n    // Ethfinex will be our source of truth for the moment.\n    // On the exchange, for now, we only need the price of the selected token.\n    // Anyway, it's a mock.\n\n    return this.returnResults(() => {\n      return this._call[this._transport].getTickers[this._exchange](\n        this._network,\n        symbols\n      )\n    }, FORMAT.tickers[this._exchange])\n  }\n}\n\nexport default Exchange\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport {\n  FETCH_CANDLES_DATA_PORTFOLIO_START,\n  FETCH_CANDLES_DATA_PORTFOLIO_STOP,\n  QUEUE_ERROR_NOTIFICATION,\n  SET_TOKEN_ALLOWANCE,\n  TOKENS_TICKERS_UPDATE,\n  TOKEN_PRICE_TICKERS_FETCH_START,\n  TOKEN_PRICE_TICKERS_FETCH_STOP,\n  SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT,\n  SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT,\n  UPDATE_TRADE_TOKENS_PAIR\n} from '../actions/const'\nimport { Observable, from, merge, of, timer } from 'rxjs'\nimport {\n  catchError,\n  exhaustMap,\n  filter,\n  finalize,\n  map,\n  mergeMap,\n  retryWhen,\n  switchMap,\n  takeUntil\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport { setTokenAllowance } from '../../_utils/exchange'\nimport Exchange from '../../_utils/exchange/src/index'\nimport ExchangeConnectorWrapper from '../../_utils/exchangeConnector'\nimport moment from 'moment'\nimport utils from '../../_utils/utils'\n\n// Setting allowance for a token\nconst setTokenAllowance$ = (\n  tokenAddress,\n  ownerAddress,\n  spenderAddress,\n  ZeroExConfig\n) =>\n  from(\n    setTokenAllowance(tokenAddress, ownerAddress, spenderAddress, ZeroExConfig)\n  )\n\nexport const setTokenAllowanceEpic = action$ => {\n  return action$.pipe(\n    ofType(SET_TOKEN_ALLOWANCE),\n    mergeMap(action => {\n      return setTokenAllowance$(\n        action.payload.tokenAddress,\n        action.payload.ownerAddress,\n        action.payload.spenderAddress,\n        action.payload.ZeroExConfig\n      ).pipe(\n        map(() => {\n          return {\n            type: UPDATE_TRADE_TOKENS_PAIR,\n            payload: {\n              baseTokenAllowance: true\n            }\n          }\n        }),\n        catchError(err => {\n          console.warn(err)\n          return of(false)\n        })\n      )\n    })\n  )\n}\n\n//\n// FETCH WS CANDLES DATA FOR A GROUP TRADING PAIRS\n//\n// PRICES ON THE FUNDS PAGE ARE FETCHED FROM ETHFINEX ONLY\n\nconst candlesGroupWebsocket$ = (relay, networkId, symbols) => {\n  const timeframe = '15m'\n  let subscribedSymbols = []\n  const exchange = ExchangeConnectorWrapper.getInstance().getExchange(\n    relay.name,\n    {\n      networkId: networkId\n    }\n  )\n  const observables = symbols.map(symbols =>\n    Observable.create(observer => {\n      const unsubPromise = exchange.ws\n        .getCandles({ timeframe, symbols }, (err, msg) => {\n          if (err) {\n            return observer.error(err)\n          }\n          if (msg.event === 'subscribed') {\n            subscribedSymbols[msg.chanId] = msg.key.split(':t')[1].slice(0, -3)\n          }\n          if (Array.isArray(msg)) {\n            return observer.next([subscribedSymbols[msg[0]], msg[1]])\n          }\n        })\n        .catch(err => console.error(err))\n      return async () => {\n        const unsub = await unsubPromise\n        if (unsub) {\n          return unsub()\n        }\n      }\n    })\n  )\n  return merge(...observables)\n}\n\nconst updateGroupCandles = ticker => {\n  const USDT = 'USDT'\n  let symbol = ticker[0]\n  const oneDayAgo = moment()\n    .startOf('hour')\n    .subtract(24, 'hours')\n    .valueOf()\n  const convertToETH = (symbol, value) => {\n    return symbol === USDT ? 1 / value : value\n  }\n  // We need to express USD valuation in ETH\n  if (symbol === 'ETH') {\n    symbol = USDT\n  }\n  // console.log(symbol)\n  // INITIAL SHAPSHOT\n  if (Array.isArray(ticker[1][0])) {\n    // console.log(`snapshot full ${symbol}:`, ticker[1])\n    let candles = ticker[1]\n      .filter(tick => {\n        return tick[0] >= oneDayAgo\n      })\n      .map(tick => {\n        let entry = {\n          date: new Date(tick[0]),\n          low: convertToETH(symbol, tick[4]),\n          high: convertToETH(symbol, tick[3]),\n          open: convertToETH(symbol, tick[1]),\n          close: convertToETH(symbol, tick[2]),\n          volume: convertToETH(symbol, tick[5]),\n          epoch: tick[0]\n        }\n        // console.log(entry)\n        return entry\n      })\n    const nowPrice = {\n      ...candles[0],\n      ...{ date: moment().toDate(), epoch: moment().valueOf() }\n    }\n    candles.unshift(nowPrice)\n    const oneDayAgoPrice = {\n      ...candles[candles.length - 1],\n      ...{ date: moment(oneDayAgo).toDate(), epoch: oneDayAgo }\n    }\n    candles.push(oneDayAgoPrice)\n    // console.log(`snapshot 24h ${symbol}:`, candles)\n    return {\n      type: SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_DATA_INIT,\n      payload: {\n        [symbol]: {\n          data: candles.reverse()\n        }\n      }\n    }\n  }\n\n  // UPDATE\n  if (!Array.isArray[ticker[1][0]]) {\n    // console.log(`${ticker[1][0]} -> ${date}`)\n    // console.log(new Date(ticker[1][0]))\n    // console.log('update:', ticker)\n    let candles = {\n      date: new Date(ticker[1][0]),\n      low: convertToETH(symbol, ticker[1][4]),\n      high: convertToETH(symbol, ticker[1][3]),\n      open: convertToETH(symbol, ticker[1][1]),\n      close: convertToETH(symbol, ticker[1][2]),\n      volume: convertToETH(symbol, ticker[1][5]),\n      epoch: ticker[1][0]\n    }\n    return {\n      type: SELECTED_DRAGO_DETAILS_UPDATE_CHART_ASSETS_MARKET_ADD_DATAPOINT,\n      payload: {\n        [symbol]: {\n          data: candles\n        }\n      }\n    }\n  }\n}\n\nexport const getCandlesGroupDataEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(FETCH_CANDLES_DATA_PORTFOLIO_START),\n    mergeMap(action => {\n      return candlesGroupWebsocket$(\n        action.payload.relay,\n        action.payload.networkId,\n        utils.ethfinexTickersToArray(\n          state$.value.transactionsDrago.selectedDrago.assets\n        ),\n        action.payload.startDate\n      ).pipe(\n        filter(val => {\n          return val[1] !== 'hb'\n        }),\n        filter(val => {\n          return val[1].length !== 0\n        }),\n        map(historical => {\n          return updateGroupCandles(historical)\n        }),\n        takeUntil(action$.ofType(FETCH_CANDLES_DATA_PORTFOLIO_STOP)),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: QUEUE_ERROR_NOTIFICATION,\n            payload: 'Error fetching candles data.'\n          })\n        })\n      )\n    })\n  )\n}\n\n//\n// FETCH REST TICKERS DATA FOR A GROUP TRADING PAIRS\n//\n// PRICES ON THE FUNDS PAGE ARE FETCHED FROM ETHFINEX ONLY\n\nconst getTickersWs$ = (relay, networkId, symbols) =>\n  Observable.create(observer => {\n    const ethfinex = ExchangeConnectorWrapper.getInstance().getExchange(\n      relay.name,\n      {\n        networkId: networkId\n      }\n    )\n    let subscribedSymbols = Array(0)\n    let symbolsArray = symbols.split(',')\n    if (symbolsArray.length) {\n      const unsubPromise = ethfinex.raw.ws.getTickers(\n        {\n          symbols: symbolsArray\n        },\n        (err, msgWs) => {\n          if (err) {\n            return observer.error(err)\n          }\n          if (msgWs.event === 'subscribed') {\n            subscribedSymbols[msgWs.chanId] = msgWs.symbol\n              .split('t')[1]\n              .slice(0, -3)\n          }\n          if (Array.isArray(msgWs)) {\n            let tick = []\n            if (msgWs[1] !== 'hb') {\n              if (subscribedSymbols[msgWs[0]] === 'ETH') {\n                tick = [\n                  {\n                    priceEth: 1 / msgWs[1][6],\n                    priceUsd: '',\n                    symbol: 'USDT'\n                  }\n                ]\n              } else {\n                tick = [\n                  {\n                    priceEth: msgWs[1][6],\n                    priceUsd: '',\n                    symbol: subscribedSymbols[msgWs[0]]\n                  }\n                ]\n              }\n              return observer.next(tick)\n            }\n          }\n        }\n      )\n      return async () => {\n        const unsub = await unsubPromise\n        return unsub()\n      }\n    }\n    return observer.complete()\n  })\n\nconst getTickers$ = (relay, networkId, symbols, protocol = 'ws') => {\n  if (relay.name === 'ERCdEX') {\n    protocol = 'http'\n  }\n  if (protocol === 'ws') {\n    return getTickersWs$(relay, networkId, symbols)\n  }\n  const exchange = new Exchange(relay.name, networkId, 'http')\n  return timer(0, 3000).pipe(\n    exhaustMap(() => {\n      return from(exchange.getTickers(symbols))\n    })\n  )\n}\n\nexport const getPricesEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(TOKEN_PRICE_TICKERS_FETCH_START),\n    switchMap(action => {\n      const currentState = state$.value\n      const symbols =\n        Object.keys(action.payload.assetsList).length === 0\n          ? utils\n              .ethfinexTickersToArray(\n                currentState.transactionsDrago.selectedDrago.assets\n              )\n              .toString()\n          : utils.ethfinexTickersToArray(action.payload.assetsList).toString()\n\n      return getTickers$(\n        action.payload.relay,\n        action.payload.networkId,\n        symbols,\n        'ws'\n      ).pipe(\n        map(message => {\n          try {\n            const arrayToObject = (arr, keyField) =>\n              Object.assign(\n                {},\n                ...arr.map(item => ({\n                  [item[keyField]]: item\n                }))\n              )\n            const tokenList = arrayToObject(message, 'symbol')\n            tokenList.WETH = {\n              priceEth: 1,\n              priceUsd: '',\n              symbol: 'WETH'\n            }\n            tokenList.ETHW = {\n              priceEth: 1,\n              priceUsd: '',\n              symbol: 'ETHW'\n            }\n            return tokenList\n          } catch (error) {\n            console.warn(error)\n            return {}\n          }\n        }),\n        map(payload => ({\n          type: TOKENS_TICKERS_UPDATE,\n          payload\n        })),\n        takeUntil(action$.ofType(TOKEN_PRICE_TICKERS_FETCH_STOP)),\n        retryWhen(error => {\n          let scalingDuration = 5000\n          return error.pipe(\n            mergeMap(error => {\n              console.warn(error)\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    })\n  )\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport { Observable, forkJoin, from, of, zip,   concat, } from 'rxjs'\nimport {\n  bufferCount,\n  bufferTime,\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport Exchange from '../../../_utils/exchange/src/index'\nimport utils from '../../../_utils/utils'\n\nimport {\n  formatOrders,\n  getHistoricalPricesDataFromERCdEX,\n  getOrdersFromRelayERCdEX\n} from '../../../_utils/exchange'\n\nimport { ERCdEX } from '../../../_utils/const'\n\nimport {\n  CHART_MARKET_DATA_UPDATE,\n  FETCH_ACCOUNT_ORDERS_START,\n  FETCH_ASSETS_PRICE_DATA,\n  FETCH_CANDLES_DATA_SINGLE_START,\n  FETCH_CANDLES_DATA_SINGLE_STOP,\n  RELAY_CLOSE_WEBSOCKET,\n  RELAY_GET_ORDERS,\n  RELAY_MSG_FROM_WEBSOCKET,\n  RELAY_OPEN_WEBSOCKET_TICKER,\n  UPDATE_CURRENT_TOKEN_PRICE,\n  UPDATE_ELEMENT_LOADING,\n  UPDATE_FUND_ORDERS,\n  DRAGO_SELECTED_DETAILS_UPDATE\n} from '../../../_redux/actions/const'\n\n//\n// CONNECTING TO WS AND GETTING UPDATES FROM RELAY ERCdEX\n//\n\n// https://github.com/ReactiveX/rxjs/issues/2048\n\nconst customRelayAction = action => {\n  return `${ERCdEX}_${action}`\n}\n\nconst reconnectingWebsocket$ = (relay, networkId, baseToken, quoteToken) => {\n  return Observable.create(observer => {\n    // const relay = {\n    //   name: 'Ethfinex'\n    // }\n    const exchange = new Exchange(relay.name, networkId, 'ws')\n    const websocket = exchange.getTicker(\n      utils.getTokenSymbolForRelay(relay.name, baseToken),\n      utils.getTokenSymbolForRelay(relay.name, quoteToken)\n    )\n    websocket.onmessage = msg => {\n\n\n      return observer.next(msg.data)\n    }\n    websocket.onclose = msg => {\n      // websocket.send(`unsub:ticker`);\n\n      // return msg.wasClean ? observer.complete() : null\n    }\n    websocket.onerror = error => {\n\n\n      // return observer.error(error)\n    }\n    return () => websocket.close()\n  })\n}\n\nexport const initRelayWebSocketTickerEpic = action$ => {\n  return action$.pipe(\n    ofType(customRelayAction(RELAY_OPEN_WEBSOCKET_TICKER)),\n    mergeMap(action => {\n      return reconnectingWebsocket$(\n        action.payload.relay,\n        action.payload.networkId,\n        action.payload.baseToken,\n        action.payload.quoteToken\n      ).pipe(\n        takeUntil(\n          action$.pipe(\n            ofType(RELAY_CLOSE_WEBSOCKET),\n            filter(closeAction => closeAction.ticker === action.ticker)\n          )\n        ),\n        tap(() => {}),\n        map(payload => ({\n          type: customRelayAction(RELAY_MSG_FROM_WEBSOCKET),\n          payload\n        }))\n      )\n    })\n  )\n}\n\nconst updateCurrentTokenPrice = (tickerOutput, baseToken) => {\n  let ticker = JSON.parse(tickerOutput)\n  if (ticker.channel === 'ticker') {\n    const arrayToObject = (ticker, keyField) =>\n      Object.assign(\n        {},\n        ...ticker.data.tickers.map(item => ({ [item[keyField]]: item }))\n      )\n    const tokenList = arrayToObject(ticker, 'symbol')\n    let current = {\n      price: tokenList[baseToken.symbol].priceEth\n    }\n    return {\n      type: UPDATE_CURRENT_TOKEN_PRICE,\n      payload: {\n        current\n      }\n    }\n  } else {\n    return {\n      type: UPDATE_CURRENT_TOKEN_PRICE,\n      payload: {}\n    }\n  }\n}\n\nexport const orderBookEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(customRelayAction(RELAY_MSG_FROM_WEBSOCKET)),\n    map(action => action.payload),\n    bufferTime(1000),\n    filter(value => {\n      return value.length !== 0\n    }),\n    bufferCount(1),\n    map(ticker => {\n\n      const currentState = state$.value\n      const lastItem = ticker[0].pop()\n      return [lastItem, currentState]\n    }),\n    tap(val => {\n\n      return val\n    }),\n    switchMap(ticker =>\n      of(\n        {\n          type: RELAY_GET_ORDERS,\n          payload: {\n            relay: ticker[1].exchange.selectedRelay,\n            networkId: '42',\n            baseToken: ticker[1].exchange.selectedTokensPair.baseToken,\n            quoteToken: ticker[1].exchange.selectedTokensPair.quoteToken,\n            aggregated: ticker[1].exchange.orderBookAggregated\n          }\n        },\n        updateCurrentTokenPrice(\n          ticker[0],\n          ticker[1].exchange.selectedTokensPair.baseToken\n        )\n      )\n    )\n  )\n}\n\n//\n// FETCH HISTORICAL MARKET DATA\n//\n\nconst getCandlesData$ = (\n  relay,\n  networkId,\n  baseToken,\n  quoteToken,\n  startDate\n) => {\n  // const relay = {\n  //   name: 'ERCdEX'\n  // }\n  const exchange = new Exchange(relay.name, networkId)\n  return from(\n    exchange.getHistoricalPricesData(\n      utils.getTokenSymbolForRelay(relay.name, baseToken),\n      utils.getTokenSymbolForRelay(relay.name, quoteToken),\n      startDate\n    )\n  )\n}\n\n// const getHistoricalPricesData$ = (networkId, baseToken, quoteToken, startDate) =>\n//   Observable.fromPromise(getHistoricalPricesDataFromERCdEX(networkId, baseToken.address, quoteToken.address, startDate))\n\nexport const getCandlesSingleDataEpic = action$ => {\n  return action$.pipe(\n    ofType(customRelayAction(FETCH_CANDLES_DATA_SINGLE_START)),\n    takeUntil(\n      action$.ofType(customRelayAction(FETCH_CANDLES_DATA_SINGLE_STOP))\n    ),\n    mergeMap(action => {\n\n      return concat(\n        of({\n          type: UPDATE_ELEMENT_LOADING,\n          payload: { marketBox: true }\n        }),\n        getCandlesData$(\n          action.payload.selectedRelay,\n          action.payload.networkId,\n          action.payload.baseToken,\n          action.payload.quoteToken,\n          action.payload.startDate\n        ).pipe(\n          map(historical => {\n            return {\n              type: CHART_MARKET_DATA_UPDATE,\n              payload: historical\n            }\n          })\n        ),\n        of({\n          type: UPDATE_ELEMENT_LOADING,\n          payload: { marketBox: false }\n        })\n      )\n    })\n  )\n}\n\n//\n// FETCH OPEN ORDERS\n//\n\nconst getAccountOrdersFromRelay$ = (\n  networkId,\n  maker,\n  baseTokenAddress,\n  quoteTokenAddress\n) =>\n  from(\n    getOrdersFromRelayERCdEX(\n      networkId,\n      maker,\n      baseTokenAddress,\n      quoteTokenAddress\n    )\n  )\n\nexport const getAccountOrdersEpic = action$ => {\n  return action$.pipe(\n    ofType(customRelayAction(FETCH_ACCOUNT_ORDERS_START)),\n    mergeMap(action => {\n      return concat(\n        // of({ type: UPDATE_ELEMENT_LOADING, payload: { marketBox: true }}),\n        zip(\n          getAccountOrdersFromRelay$(\n            action.payload.networkId,\n            action.payload.maker,\n            action.payload.baseTokenAddress,\n            action.payload.quoteTokenAddress\n          ).pipe(\n            map(orders => {\n\n              return formatOrders(orders, 'asks')\n            })\n          ),\n          getAccountOrdersFromRelay$(\n            action.payload.networkId,\n            action.payload.maker,\n            action.payload.quoteTokenAddress,\n            action.payload.baseTokenAddress\n          ).pipe(\n            map(orders => {\n              return formatOrders(orders, 'bids')\n            })\n          )\n        ).pipe(\n          map(orders => {\n\n            return {\n              type: UPDATE_FUND_ORDERS,\n              payload: {\n                open: orders[0].concat(orders[1])\n              }\n            }\n          })\n        )\n        // of({ type: UPDATE_ELEMENT_LOADING, payload: { marketBox: false }}),\n      )\n    })\n  )\n}\n\n//\n// FETCH ASSETS PRICES DATA\n//\n\nconst getAssetsPricesDataFromERCdEX$ = (\n  networkId,\n  symbol,\n  baseTokenAddress,\n  quoteTokenAddress,\n  startDate\n) =>\n  from(\n    getHistoricalPricesDataFromERCdEX(\n      networkId,\n      baseTokenAddress,\n      quoteTokenAddress,\n      startDate\n    )\n  ).pipe(\n    map(result => {\n      const data = {\n        symbol: symbol,\n        startDate,\n        data: result.map(entry => {\n          const date = new Date(entry.date)\n          entry.date = date\n          return entry\n        }),\n        error: ''\n      }\n      return data\n    }),\n    catchError(error => {\n      const data = {\n        symbol: symbol,\n        startDate,\n        data: [],\n        error\n      }\n      return of(data)\n    })\n  )\n\nexport const getAssetsPricesDataFromERCdEXEpic = action$ => {\n  return action$.pipe(\n    ofType(FETCH_ASSETS_PRICE_DATA),\n    mergeMap(action => {\n      const observableArray = () => {\n        const observableArray = Array(0)\n        for (let property in action.payload.assets) {\n          if (action.payload.assets.hasOwnProperty(property)) {\n            // console.log(action.payload.assets[property])\n            observableArray.push(\n              getAssetsPricesDataFromERCdEX$(\n                action.payload.networkId,\n                action.payload.assets[property].symbol,\n                action.payload.assets[property].address,\n                action.payload.quoteToken,\n                new Date(\n                  (Math.floor(Date.now() / 1000) - 86400 * 7) * 1000\n                ).toISOString()\n              )\n            )\n          }\n        }\n        return observableArray\n      }\n      return forkJoin(observableArray()).map(result => {\n        const arrayToObject = (arr, keyField) =>\n          Object.assign({}, ...arr.map(item => ({ [item[keyField]]: item })))\n        const assetsCharts = arrayToObject(result, 'symbol')\n        return {\n          type: DRAGO_SELECTED_DETAILS_UPDATE,\n          payload: {\n            assetsCharts\n          }\n        }\n      })\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as ERRORS from '../../../_const/errors'\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions/'\nimport { BigNumber } from '0x.js'\nimport { Observable, from, of, timer, zip,   concat, } from 'rxjs'\nimport {\n  auditTime,\n  catchError,\n  exhaustMap,\n  filter,\n  map,\n  mergeMap,\n  takeUntil\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport CRC from 'crc-32'\nimport Exchange from '../../../_utils/exchange/src'\nimport ExchangeConnectorWrapper from '../../../_utils/exchangeConnector'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport utils from '../../../_utils/utils'\n\n//\n// CONNECTING TO WS AND GETTING BOOK UPDATES\n//\n// THIS EPIC IS CALLED WHEN THE EXCHANGE IS INITALIZED\n//\n\nconst reconnectingWebsocketBook$ = (relay, networkId, baseToken, quoteToken) =>\n  Observable.create(observer => {\n    let seq = null\n\n    let pair =\n      utils.getTokenSymbolForRelay(relay.name, baseToken) +\n      utils.getTokenSymbolForRelay(relay.name, quoteToken)\n    const ethfinex = ExchangeConnectorWrapper.getNewInstance().getExchange(\n      relay.name,\n      {\n        networkId: networkId\n      }\n    )\n    const BOOK = {\n      bids: [],\n      asks: [],\n      psnap: [],\n      mcnt: 0\n    }\n    const checkCross = () => {\n      let bid = BOOK.psnap.bids[0]\n      let ask = BOOK.psnap.asks[0]\n      if (bid >= ask) {\n        let lm = [moment.utc().format(), 'bid(' + bid + ')>=ask(' + ask + ')']\n\n\n      }\n    }\n    const unsubscribePromise = ethfinex.raw.ws\n      .getAggregatedOrders(\n        {\n          symbols: pair,\n          precision: 'P2',\n          frequency: 'F1',\n          len: 25\n        },\n        (err, msgWs) => {\n          let msg = msgWs\n          if (err) {\n            console.warn('WebSocket order book error.')\n            return observer.error(err)\n          }\n          if (!Array.isArray(msg)) {\n            return\n          }\n          if (msg[1] === 'hb') {\n            seq = +msg[2]\n            return\n          } else if (msg[1] === 'cs') {\n            seq = +msg[3]\n\n            const checksum = msg[2]\n            const csdata = []\n            const bids_keys = BOOK.psnap['bids']\n            const asks_keys = BOOK.psnap['asks']\n\n            for (let i = 0; i < 25; i++) {\n              if (bids_keys[i]) {\n                const price = bids_keys[i]\n                const pp = BOOK.bids[price]\n                csdata.push(pp.price, pp.amount)\n              }\n              if (asks_keys[i]) {\n                const price = asks_keys[i]\n                const pp = BOOK.asks[price]\n                csdata.push(pp.price, -pp.amount)\n              }\n            }\n\n            const cs_str = csdata.join(':')\n            const cs_calc = CRC.str(cs_str)\n\n            if (cs_calc !== checksum) {\n              console.error('CHECKSUM_FAILED')\n            }\n            return\n          }\n\n          if (BOOK.mcnt === 0) {\n            _.each(msg[1], function(pp) {\n              pp = {\n                price: pp[0],\n                cnt: pp[1],\n                amount: pp[2]\n              }\n              const side = pp.amount >= 0 ? 'bids' : 'asks'\n              pp.amount = Math.abs(pp.amount)\n              if (BOOK[side][pp.price]) {\n                console.log(\n                  '[' +\n                    moment().format() +\n                    '] ' +\n                    pair +\n                    ' | ' +\n                    JSON.stringify(pp) +\n                    ' BOOK snap existing bid override\\n'\n                )\n              }\n              BOOK[side][pp.price] = pp\n            })\n          } else {\n            const cseq = +msg[2]\n            msg = msg[1]\n\n            if (!seq) {\n              seq = cseq - 1\n            }\n\n            if (cseq - seq !== 1) {\n              console.error('OUT OF SEQUENCE', seq, cseq)\n            }\n\n            seq = cseq\n\n            let pp = {\n              price: msg[0],\n              cnt: msg[1],\n              amount: msg[2]\n            }\n\n            if (!pp.cnt) {\n              let found = true\n\n              if (pp.amount > 0) {\n                if (BOOK['bids'][pp.price]) {\n                  delete BOOK['bids'][pp.price]\n                } else {\n                  found = false\n                }\n              } else if (pp.amount < 0) {\n                if (BOOK['asks'][pp.price]) {\n                  delete BOOK['asks'][pp.price]\n                } else {\n                  found = false\n                }\n              }\n\n              if (!found) {\n                console.log(\n                  '[' +\n                    moment().format() +\n                    '] ' +\n                    pair +\n                    ' | ' +\n                    JSON.stringify(pp) +\n                    ' BOOK delete fail side not found\\n'\n                )\n              }\n            } else {\n              let side = pp.amount >= 0 ? 'bids' : 'asks'\n              pp.amount = Math.abs(pp.amount)\n              BOOK[side][pp.price] = pp\n            }\n          }\n\n          _.each(['bids', 'asks'], function(side) {\n            let sbook = BOOK[side]\n            let bprices = Object.keys(sbook)\n\n            let prices = bprices.sort(function(a, b) {\n              if (side === 'bids') {\n                return +a >= +b ? -1 : 1\n              } else {\n                return +a <= +b ? -1 : 1\n              }\n            })\n            BOOK.psnap[side] = prices\n          })\n\n          BOOK.mcnt++\n\n          checkCross(msg)\n          return observer.next({\n            asks: BOOK.asks,\n            bids: BOOK.bids\n          })\n        }\n      )\n      .catch(() => observer.error(ERRORS.ERR_EXCHANGE_WS_ORDERBOOK_FETCH))\n\n    return async () => {\n      const unsub = await unsubscribePromise\n      if (unsub) {\n        await unsub()\n      }\n      return ethfinex.raw.ws.close()\n    }\n  })\n\nexport const initRelayWebSocketBookEpic = action$ =>\n  action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.RELAY_OPEN_WEBSOCKET_BOOK)),\n    mergeMap(action => {\n      const { relay, networkId, baseToken, quoteToken } = action.payload\n      return reconnectingWebsocketBook$(\n        relay,\n        networkId,\n        baseToken,\n        quoteToken\n      ).pipe(\n        auditTime(1000),\n        map(payload => {\n          const calculateSpread = (asksOrders, bidsOrders) => {\n            let spread = new BigNumber(0).toFixed(6)\n            if (bidsOrders.length && asksOrders.length) {\n              spread = new BigNumber(\n                asksOrders[asksOrders.length - 1].orderPrice\n              )\n                .minus(new BigNumber(bidsOrders[0].orderPrice))\n                .toFixed(6)\n            }\n            return spread\n          }\n          const asks = Object.values(payload.asks).map(element => {\n            return {\n              orderAmount: element.amount,\n              orderPrice: element.price,\n              orderCount: element.cnt\n            }\n          })\n          asks.sort(function(a, b) {\n            return b.orderPrice - a.orderPrice\n          })\n          const bids = Object.values(payload.bids).map(element => {\n            return {\n              orderAmount: element.amount,\n              orderPrice: element.price,\n              orderCount: element.cnt\n            }\n          })\n          bids.sort(function(a, b) {\n            return b.orderPrice - a.orderPrice\n          })\n          const spread = calculateSpread(asks, bids)\n          return {\n            type: TYPE_.ORDERBOOK_INIT,\n            payload: {\n              asks,\n              bids,\n              spread\n            }\n          }\n        }),\n        takeUntil(\n          action$.ofType(utils.customRelayAction(TYPE_.RELAY_CLOSE_WEBSOCKET))\n        ),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: error\n          })\n        })\n      )\n    })\n  )\n\n//\n// CONNECTING TO WS AND GETTING UPDATES FOR A SPECIFIC TRADING PAIR\n//\n// THIS EPIC IS CALLED WHEN THE EXCHANGE IS INITALIZED\n//\n\nconst websocketTicker$ = (relay, networkId, baseToken, quoteToken) =>\n  Observable.create(observer => {\n    const ethfinex = ExchangeConnectorWrapper.getInstance().getExchange(\n      relay.name,\n      {\n        networkId\n      }\n    )\n    const baseTokenSymbol = utils.getTokenSymbolForRelay(relay.name, baseToken)\n    const quoteTokenSymbol = utils.getTokenSymbolForRelay(\n      relay.name,\n      quoteToken\n    )\n    const unsubscribePromise = ethfinex.raw.ws.getTickers(\n      {\n        symbols: [baseTokenSymbol + quoteTokenSymbol]\n      },\n      (err, msg) => (err ? observer.error(err) : observer.next(msg))\n    )\n    return async () => {\n      const unsub = await unsubscribePromise\n      if (unsub) {\n        return unsub()\n      }\n    }\n  })\n\nconst updateCurrentTokenPrice = ticker => {\n  if (Array.isArray(ticker)) {\n    const current = {\n      price: ticker[6]\n    }\n    return Actions.exchange.updateTokenPrice(current)\n  }\n  return Actions.exchange.updateTokenPrice({})\n}\n\nexport const initRelayWebSocketTickerEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.RELAY_OPEN_WEBSOCKET_TICKER)),\n    mergeMap(action => {\n      const { relay, networkId, baseToken, quoteToken } = action.payload\n      return websocketTicker$(relay, networkId, baseToken, quoteToken).pipe(\n        auditTime(1000),\n        filter(val => val.length),\n        filter(val => {\n          return val[1] !== 'hb'\n        }),\n        map(ticker => {\n          const currentState = state$.value\n          const lastItem = ticker.pop()\n          return updateCurrentTokenPrice(\n            lastItem,\n            currentState.exchange.selectedTokensPair.baseToken\n          )\n        }),\n        takeUntil(\n          action$.ofType(utils.customRelayAction(TYPE_.RELAY_CLOSE_WEBSOCKET))\n        ),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: 'Error connecting to price ticker.'\n          })\n        })\n      )\n    })\n  )\n\n//\n// FETCH OPEN ORDERS\n//\n\nconst getAccountOrdersFromRelay$ = (\n  relay,\n  networkId,\n  account,\n  baseToken,\n  quoteToken\n) => {\n  const exchange = new Exchange(relay.name, networkId)\n  return zip(\n    from(exchange.getAccountOrders(account, baseToken, quoteToken)),\n    from(exchange.getAccountHistory(account, baseToken, quoteToken))\n  )\n}\n\nexport const getAccountOrdersEpic = action$ =>\n  action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.FETCH_ACCOUNT_ORDERS_START)),\n    mergeMap(action => {\n      const {\n        relay,\n        networkId,\n        account,\n        quoteToken,\n        baseToken\n      } = action.payload\n      return timer(0, 5000).pipe(\n        takeUntil(\n          action$.ofType(\n            utils.customRelayAction(TYPE_.FETCH_ACCOUNT_ORDERS_STOP)\n          )\n        ),\n        exhaustMap(() =>\n          getAccountOrdersFromRelay$(\n            relay,\n            networkId,\n            account,\n            quoteToken,\n            baseToken\n          ).pipe(\n            map(orders => {\n\n              return {\n                type: TYPE_.UPDATE_FUND_ORDERS,\n                payload: {\n                  open: orders[0],\n                  history: orders[1]\n                }\n              }\n            }),\n            catchError(() => {\n              return concat(\n                of({\n                  type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n                  payload: 'Error fetching account orders.'\n                }),\n                of(\n                  Actions.exchange.updateAccountSignature({\n                    valid: false\n                  })\n                )\n              )\n            })\n          )\n        )\n      )\n    })\n  )\n","const ERROR_TEXT = 'Error: '\nexport const ERR_EXCHANGE_ORDER_BOOK_FETCH =\n  ERROR_TEXT + 'Cannot get orders book from the Exchange.'\nexport const ERR_EXCHANGE_WS_TICKER_FETCH =\n  ERROR_TEXT + 'Cannot connect to price ticker in the Exchange.'\nexport const ERR_EXCHANGE_WS_CANDLE_FETCH =\n  ERROR_TEXT + 'Cannot connect to candle in the Exchange.'\nexport const ERR_EXCHANGE_WS_ORDERBOOK_FETCH =\n  ERROR_TEXT + 'Cannot connect to orderbook in the Exchange.'\n","import * as TYPE_ from '../../../actions/const'\nimport { Actions } from '../../../actions/'\nimport {\n    assetDataUtils,\n    BigNumber,\n    ContractWrappers,\n    generatePseudoRandomSalt,\n    Order,\n    orderHashUtils,\n    signatureUtils,\n    SignedOrder,\n    SignatureType\n} from '0x.js';\nimport { map, mergeMap, tap } from 'rxjs/operators'\nimport { of,   concat, } from 'rxjs'\nimport { ofType } from 'redux-observable'\nimport Web3 from 'web3'\nimport moment from 'moment'\n\nimport utils from '../../../../_utils/utils'\n\nconst newMakerOrderV0 = (orderSide, options, state$) => {\n  const adjustExpirationTime = lockExpirationTime => {\n    return moment\n      .unix(lockExpirationTime)\n      .subtract(10, 'm')\n      .unix()\n  }\n  let makerTokenAddress, takerTokenAddress, orderExpirationTime\n  const {\n    selectedTokensPair,\n    selectedExchange,\n    selectedFund,\n    selectedRelay\n  } = state$.value.exchange\n  if (selectedRelay.isTokenWrapper) {\n    makerTokenAddress =\n      orderSide === 'asks'\n        ? selectedTokensPair.baseToken.wrappers[selectedExchange.name].address\n        : selectedTokensPair.quoteToken.wrappers[selectedExchange.name].address\n    takerTokenAddress =\n      orderSide === 'asks'\n        ? selectedTokensPair.quoteToken.wrappers[selectedExchange.name].address\n        : selectedTokensPair.baseToken.wrappers[selectedExchange.name].address\n    orderExpirationTime =\n      orderSide === 'asks'\n        ? adjustExpirationTime(selectedTokensPair.baseTokenLockWrapExpire)\n        : adjustExpirationTime(selectedTokensPair.quoteTokenLockWrapExpire)\n  } else {\n    makerTokenAddress =\n      orderSide === 'asks'\n        ? selectedTokensPair.baseToken.address\n        : selectedTokensPair.quoteToken.address\n    takerTokenAddress =\n      orderSide === 'asks'\n        ? selectedTokensPair.quoteToken.address\n        : selectedTokensPair.baseToken.address\n    orderExpirationTime = moment()\n      .add(24, 'h')\n      .unix()\n  }\n\n  const web3 = new Web3()\n\n  const order = {\n    expirationTimeSeconds: orderExpirationTime.toString(),\n    feeRecipientAddress: selectedExchange.feeRecipientAddress.toLowerCase(),\n\n    makerAddress: selectedFund.details.address.toLowerCase(),\n    makerAssetData: assetDataUtils.encodeERC20AssetData(makerTokenAddress.toLowerCase()),\n    makerFee: new BigNumber(0).toString(), // web3.utils.toBN('0'),\n\n    salt: generatePseudoRandomSalt(),\n    senderAddress: selectedExchange.feeRecipientAddress.toLowerCase(), // hot wallet\n    takerAddress: '0x0000000000000000000000000000000000000000',\n    takerAssetData: assetDataUtils.encodeERC20AssetData(takerTokenAddress.toLowerCase()),\n    takerFee: new BigNumber(0).toString(), // web3.utils.toBN('0'),\n\n    exchangeAddress: selectedExchange.exchangeAddress.toLowerCase()\n  }\n  const makerOrder = {\n    details: {\n      order: order,\n      orderAmount: 0,\n      orderPrice: 0,\n      orderType: orderSide\n    },\n    orderAmountError: true,\n    orderPriceError: true,\n    orderFillAmount: '0',\n    orderMaxAmount: '0',\n    orderPrice: '0',\n    orderType: orderSide,\n    takerOrder: false,\n    selectedTokensPair: selectedTokensPair\n  }\n  return makerOrder\n}\n\nconst createOrderEthfinexV0Epic = (action$, state$) => {\n  return action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.ORDER_CREATE)),\n    mergeMap(action => {\n      const { orderSide, options } = action.payload\n      return concat(of(newMakerOrderV0(orderSide, options, state$))).pipe(\n        map(order => {\n          return Actions.exchange.updateOrder(order)\n        }),\n        tap(val => {\n          return val\n        })\n      )\n    })\n  )\n}\n\nexport default createOrderEthfinexV0Epic\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../../actions/const'\nimport { Actions } from '../../../actions'\nimport { BigNumber } from '0x.js'\nimport { ERC20_TOKENS } from '../../../../_utils/tokens'\nimport {\n  concat,\n  filter,\n  finalize,\n  map,\n  mergeMap,\n  retryWhen,\n  switchMap,\n  takeUntil\n} from 'rxjs/operators'\nimport { defer, from, timer } from 'rxjs'\nimport { getBlockChunks } from '../../../../_utils/blockChain'\nimport { ofType } from 'redux-observable'\nimport { toUnitAmount } from '../../../../_utils/format'\nimport Web3Wrapper from '../../../../_utils/web3Wrapper/src'\nimport exchangeEfxV0Abi from '../../../../PoolsApi/src/contracts/abi/v2/exchange-efx-v0.json'\nimport utils from '../../../../_utils/utils'\n\nconst getPastExchangeEvents$ = (fund, exchange, state$) => {\n  const { networkInfo } = state$.value.endpoint\n  const web3 = Web3Wrapper.getInstance(networkInfo.id)\n  const efxEchangeContract = new web3.eth.Contract(\n    exchangeEfxV0Abi,\n    exchange.exchangeAddress.toLowerCase()\n  )\n  const makerAddress = '0x' + fund.address.substr(2).padStart(64, '0')\n  const chunkSize = 100000\n  let fromBlock\n  switch (networkInfo.id) {\n    case 1:\n      fromBlock = '6000000'\n      break\n    case 42:\n      fromBlock = '7000000'\n      break\n    case 3:\n      fromBlock = '3000000'\n      break\n    default:\n      fromBlock = '3000000'\n  }\n\n  // This code may be used to filter by tokens. Do not remove.\n\n  // console.log(\n  //   '0x3f3fb7135a4e1512b508f90733145ab182cc196e127cd9281a8e9f636de79a67'\n  // )\n  // let tokens1 = web3.utils.soliditySha3(\n  //   {\n  //     t: 'address',\n  //     v: tokens.quoteToken.wrappers.Ethfinex.address.toLowerCase()\n  //   },\n  //   {\n  //     t: 'address',\n  //     v: tokens.baseToken.wrappers.Ethfinex.address.toLowerCase()\n  //   }\n  // )\n  // tokens1 = web3.utils.padLeft(tokens1, 64)\n  // let tokens2 = web3.utils.soliditySha3(\n  //   {\n  //     t: 'address',\n  //     v: tokens.baseToken.wrappers.Ethfinex.address.toLowerCase()\n  //   },\n  //   {\n  //     t: 'address',\n  //     v: tokens.quoteToken.wrappers.Ethfinex.address.toLowerCase()\n  //   }\n  // )\n  // tokens2 = web3.utils.padLeft(tokens2, 64)\n  // 0x3f3fb7135a4e1512b508f90733145ab182cc196e127cd9281a8e9f636de79a67\n  // console.log(fund)\n\n  return defer(() =>\n    from(getBlockChunks(fromBlock, 'latest', chunkSize, web3))\n  ).pipe(\n    switchMap(chunks => {\n      const eventsPromises = chunks.map(chunk => {\n        const options = {\n          fromBlock: chunk.fromBlock,\n          toBlock: chunk.toBlock,\n          topics: [null, makerAddress, null, null]\n        }\n        return efxEchangeContract.getPastEvents(\n          'allEvents',\n          options,\n          (err, res) => (err ? err : res)\n        )\n      })\n      return from(Promise.all(eventsPromises))\n    }),\n    map(events => [].concat(...events))\n  )\n}\n\nconst processTradesHistory = (trades, state$) => {\n  let networkName = state$.value.endpoint.networkInfo.name\n  let quoteTokensWrappers = new Map()\n  let baseTokensWrappers = new Map()\n  let tokensSymbols = new Map()\n  Object.keys(state$.value.exchange.availableTradeTokensPairs).forEach(\n    quoteToken => {\n      quoteTokensWrappers.set(\n        ERC20_TOKENS[networkName][\n          quoteToken\n        ].wrappers.Ethfinex.address.toLowerCase(),\n        ERC20_TOKENS[networkName][quoteToken].wrappers.Ethfinex\n      )\n    }\n  )\n\n  Object.keys(ERC20_TOKENS[networkName]).forEach(token => {\n    if (Object.keys(ERC20_TOKENS[networkName][token].wrappers).length !== 0) {\n      baseTokensWrappers.set(\n        ERC20_TOKENS[networkName][\n          token\n        ].wrappers.Ethfinex.address.toLowerCase(),\n        ERC20_TOKENS[networkName][token].wrappers.Ethfinex\n      )\n      tokensSymbols.set(\n        ERC20_TOKENS[networkName][\n          token\n        ].wrappers.Ethfinex.address.toLowerCase(),\n        ERC20_TOKENS[networkName][token].symbolTicker.Ethfinex\n      )\n    }\n  })\n\n  let tradeHistory = trades.map(trade => {\n    let transaction = {\n      type: '',\n      baseTokenSymbol: '',\n      quoteTokenSymbol: '',\n      transactionHash: trade.transactionHash,\n      price: '0',\n      amount: '0'\n    }\n    let makerTokenAddress = trade.returnValues.makerToken.toLowerCase()\n    let takerTokenAddress = trade.returnValues.takerToken.toLowerCase()\n    let makerAmount, takerAmount\n\n    // Trade between ETH and USD\n\n    if (\n      (tokensSymbols.get(makerTokenAddress) === 'ETH' &&\n        tokensSymbols.get(takerTokenAddress) === 'USD') ||\n      (tokensSymbols.get(makerTokenAddress) === 'USD' &&\n        tokensSymbols.get(takerTokenAddress) === 'ETH')\n    ) {\n      let makerTokenSymbol = tokensSymbols.get(makerTokenAddress)\n\n      // SYMBOLS\n      transaction.baseTokenSymbol = 'ETH'\n      transaction.quoteTokenSymbol = 'USD'\n\n      if (makerTokenSymbol === 'ETH') {\n        transaction.type = 'sell'\n        let makerDecimals = 18\n        let takerDecimals = 6\n        makerAmount = toUnitAmount(\n          new BigNumber(trade.returnValues.filledMakerTokenAmount),\n          makerDecimals\n        )\n        takerAmount = toUnitAmount(\n          new BigNumber(trade.returnValues.filledTakerTokenAmount),\n          takerDecimals\n        )\n        transaction.price = takerAmount.div(makerAmount).toFixed(5)\n        transaction.amount = makerAmount.toFixed(5)\n        return transaction\n      } else {\n        let makerDecimals = 6\n        let takerDecimals = 18\n        makerAmount = toUnitAmount(\n          new BigNumber(trade.returnValues.filledTakerTokenAmount),\n          takerDecimals\n        )\n        takerAmount = toUnitAmount(\n          new BigNumber(trade.returnValues.filledMakerTokenAmount),\n          makerDecimals\n        )\n        transaction.amount = toUnitAmount(\n          new BigNumber(trade.returnValues.filledTakerTokenAmount),\n          takerDecimals\n        ).toFixed(5)\n\n        transaction.price = new BigNumber(1)\n          .div(new BigNumber(makerAmount).div(new BigNumber(takerAmount)))\n          .toFixed(5)\n        return transaction\n      }\n    }\n\n    // Trade betweem ERC20 token and ETH or USD\n\n    if (!quoteTokensWrappers.has(makerTokenAddress)) {\n      transaction.type = 'sell'\n      let makerDecimals = baseTokensWrappers.get(makerTokenAddress).decimals\n      let takerDecimals = quoteTokensWrappers.get(takerTokenAddress).decimals\n      makerAmount = toUnitAmount(\n        new BigNumber(trade.returnValues.filledMakerTokenAmount),\n        makerDecimals\n      )\n      // console.log(makerAmount.toFixed(5))\n      takerAmount = toUnitAmount(\n        new BigNumber(trade.returnValues.filledTakerTokenAmount),\n        takerDecimals\n      )\n      // console.log(takerAmount.toFixed(5))\n      transaction.price = takerAmount.div(makerAmount).toFixed(5)\n      transaction.amount = makerAmount.toFixed(5)\n\n      // SYMBOLS\n      transaction.baseTokenSymbol = tokensSymbols.get(makerTokenAddress)\n      transaction.quoteTokenSymbol = tokensSymbols.get(takerTokenAddress)\n      return transaction\n    }\n    if (quoteTokensWrappers.has(makerTokenAddress)) {\n      transaction.type = 'buy'\n      let makerDecimals = quoteTokensWrappers.get(makerTokenAddress).decimals\n      let takerDecimals = baseTokensWrappers.get(takerTokenAddress).decimals\n      makerAmount = toUnitAmount(\n        new BigNumber(trade.returnValues.filledTakerTokenAmount),\n        takerDecimals\n      )\n      // console.log(makerAmount.toFixed(5))\n      takerAmount = toUnitAmount(\n        new BigNumber(trade.returnValues.filledMakerTokenAmount),\n        takerDecimals\n      )\n      // console.log(takerAmount.toFixed(5), takerDecimals)\n      transaction.amount = toUnitAmount(\n        new BigNumber(trade.returnValues.filledTakerTokenAmount),\n        makerDecimals\n      ).toFixed(5)\n\n      transaction.price = new BigNumber(1)\n        .div(new BigNumber(makerAmount).div(new BigNumber(takerAmount)))\n        .toFixed(5)\n\n      // SYMBOLS\n      transaction.baseTokenSymbol = tokensSymbols.get(takerTokenAddress)\n      transaction.quoteTokenSymbol = tokensSymbols.get(makerTokenAddress)\n      return transaction\n    }\n    return null\n  })\n  return tradeHistory\n}\n\nconst ethfinexEventful$ = (fund, networkInfo) => {\n  const web3 = Web3Wrapper.getInstance(networkInfo.id)\n  return web3.rigoblock.ob.exchangeEfxV0$.pipe(\n    filter(val => {\n      return val.returnValues.makerAddress.toLowerCase() === fund.address.toLowerCase()\n    }),\n    map(val => [val])\n  )\n}\n\nexport const monitorExchangeEventsEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.MONITOR_EXCHANGE_EVENTS_START)),\n    switchMap(action => {\n      const { fund, exchange, networkInfo } = action.payload\n      return getPastExchangeEvents$(fund, exchange, state$).pipe(\n        concat(\n          ethfinexEventful$(fund, networkInfo),\n          takeUntil(\n            action$.ofType(\n              utils.customRelayAction(TYPE_.MONITOR_EXCHANGE_EVENTS_STOP)\n            )\n          )\n        )\n      )\n    }),\n    filter(trades => Array.isArray(trades) && trades.length),\n    map(trades => {\n      let tradesHistory = processTradesHistory(trades.reverse(), state$)\n      return Actions.exchange.updateTradesHistory(tradesHistory)\n    }),\n    retryWhen(error$ => {\n      let scalingDuration = 10000\n      return error$.pipe(\n        mergeMap(err => {\n          console.warn(err)\n          return timer(scalingDuration)\n        }),\n        finalize(() => console.log('We are done!'))\n      )\n    })\n  )\n}\n\nfinalize(() => console.log('We are done!'))\n","import * as ERCdEX from './ercdex'\nimport * as EthfinexEpics from './ethfinex_epics'\nimport { connectToRelayEpic } from './relay_epics/connectToRelayEfx_epic'\nimport { createOrderEthfinexV0Epic } from './orders_epics'\nimport { getCandlesSingleDataEpic } from './ethfinex_epics/getCandlesSingleData_epic'\nimport { monitorExchangeEventsEpic } from './ethfinex_epics/exchangeEvents_epic'\n\nlet Ethfinex = {\n  ...EthfinexEpics,\n  monitorExchangeEventsEpic,\n  createOrderEthfinexV0Epic,\n  getCandlesSingleDataEpic,\n  connectToRelayEpic\n}\n\nexport { Ethfinex, ERCdEX }\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../../actions/const'\nimport { Observable, of, race } from 'rxjs'\nimport { catchError, filter, map, mergeMap, takeUntil } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport ExchangeConnectorWrapper from '../../../../_utils/exchangeConnector'\nimport utils from '../../../../_utils/utils'\n\n//\n// FETCH HISTORICAL MARKET DATA FOR A SPECIFIC TRADING PAIR\n//\n\nconst candlesSingleWebsocket$ = (relay, networkId, baseToken, quoteToken) =>\n  Observable.create(observer => {\n    const baseTokenSymbol = utils.getTokenSymbolForRelay(relay.name, baseToken)\n    const quoteTokenSymbol = utils.getTokenSymbolForRelay(\n      relay.name,\n      quoteToken\n    )\n\n    const ethfinex = ExchangeConnectorWrapper.getInstance().getExchange(\n      relay.name,\n      {\n        networkId: networkId\n      }\n    )\n    const unsubscribePromise = ethfinex.raw.ws\n      .getCandles(\n        {\n          timeframe: '1m',\n          symbols: baseTokenSymbol + quoteTokenSymbol\n        },\n        (err, msg) => (err ? observer.error(err) : observer.next(msg))\n      )\n      .catch(err => console.error(err))\n\n    return async () => {\n      const unsub = await unsubscribePromise\n      if (unsub) {\n        return unsub()\n      }\n    }\n  })\n\nconst updateSingleCandles = tickerOutput => {\n  let ticker = tickerOutput\n  if (Array.isArray(ticker[1][0]) && ticker[1] !== 'hb') {\n    let candles = ticker[1].map(tick => {\n      let entry = {\n        date: new Date(tick[0]),\n        low: tick[4],\n        high: tick[3],\n        open: tick[1],\n        close: tick[2],\n        volume: tick[5],\n        epoch: tick[0]\n      }\n      return entry\n    })\n    return {\n      type: TYPE_.CHART_MARKET_DATA_INIT,\n      payload: candles.reverse()\n    }\n  }\n  if (!Array.isArray(ticker[1][0]) && ticker[1] !== 'hb') {\n    let candles = {\n      date: new Date(ticker[1][0]),\n      low: ticker[1][4],\n      high: ticker[1][3],\n      open: ticker[1][1],\n      close: ticker[1][2],\n      volume: ticker[1][5],\n      epoch: ticker[1][0]\n    }\n\n    return {\n      type: TYPE_.CHART_MARKET_DATA_ADD_DATAPOINT,\n      payload: candles\n    }\n  }\n  return {\n    type: TYPE_.CHART_MARKET_DATA_ADD_DATAPOINT,\n    payload: ''\n  }\n}\n\nexport const getCandlesSingleDataEpic = action$ =>\n  action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.FETCH_CANDLES_DATA_SINGLE_START)),\n    mergeMap(action => {\n      const {\n        relay,\n        networkId,\n        baseToken,\n        quoteToken,\n        startDate\n      } = action.payload\n\n      return race(\n        candlesSingleWebsocket$(\n          relay,\n          networkId,\n          baseToken,\n          quoteToken,\n          startDate\n        ).pipe(\n          filter(tick => tick[0] && tick[1] && tick[1] !== 'hb'),\n          map(historical => updateSingleCandles(historical)),\n          takeUntil(\n            action$.ofType(\n              utils.customRelayAction(TYPE_.FETCH_CANDLES_DATA_SINGLE_STOP)\n            )\n          ),\n          catchError(err => {\n            console.warn(err)\n            return of({\n              type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n              payload: err\n            })\n          })\n        )\n      )\n    })\n  )\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../../actions/const'\nimport { Actions } from '../../../actions'\nimport { concat, of } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport utils from '../../../../_utils/utils'\n\n//\n// CONNECT TO RELAY DATA FEEDS\n//\n\nexport const connectToRelayEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(utils.customRelayAction(TYPE_.RELAY_CONNECT)),\n    mergeMap(action => {\n      const { relay, tokensPair } = action.payload\n      const networkId = state$.value.endpoint.networkInfo.id\n      const tsYesterday = new Date(\n        (Math.floor(Date.now() / 1000) - 86400 * 7) * 1000\n      ).toISOString()\n      return concat(\n        of({\n          type: TYPE_.CHART_MARKET_DATA_INIT,\n          payload: []\n        }),\n        of({\n          type: TYPE_.ORDERBOOK_INIT,\n          payload: {\n            asks: [],\n            bids: [],\n            spread: '0'\n          }\n        }),\n        of(\n          Actions.exchange.relayOpenWsTicker(\n            relay,\n            networkId,\n            tokensPair.baseToken,\n            tokensPair.quoteToken\n          )\n        ),\n        of(\n          Actions.exchange.relayOpenWsBook(\n            relay,\n            networkId,\n            tokensPair.baseToken,\n            tokensPair.quoteToken\n          )\n        ),\n        of(\n          Actions.exchange.fetchCandleDataSingleStart(\n            relay,\n            networkId,\n            tokensPair.baseToken,\n            tokensPair.quoteToken,\n            tsYesterday\n          )\n        )\n      )\n    })\n  )\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as ERRORS from '../../_const/errors'\nimport * as TYPE_ from '../actions/const'\nimport { Actions } from '../actions/'\nimport { Observable, concat, from, of, timer } from 'rxjs'\nimport {\n  catchError,\n  exhaustMap,\n  map,\n  mergeMap,\n  skipWhile,\n  switchMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators'\nimport { getTradeHistoryLogsFromRelayERCdEX } from '../../_utils/exchange'\nimport { ofType } from 'redux-observable'\nimport BigNumber from 'bignumber.js'\nimport Exchange from '../../_utils/exchange/src/index'\n\nimport utils from '../../_utils/utils'\n\nexport * from './exchanges'\n\n//\n// GETTING ORDERS FROM RELAY\n//\n\n// Creating an observable from the promise\nconst getOrderBookFromRelay$ = (\n  relay,\n  networkId,\n  baseToken,\n  quoteToken,\n  aggregated\n) => {\n  // console.log(aggregated)\n  if (aggregated) {\n    const exchange = new Exchange(relay.name, networkId)\n    return from(\n      exchange.getAggregatedOrders(\n        utils.getTokenSymbolForRelay(relay.name, baseToken),\n        utils.getTokenSymbolForRelay(relay.name, quoteToken)\n      )\n    )\n    // console.log(supportedExchanges.ETHFINEX)\n    // console.log(supportedExchanges.ETHFINEX_RAW)\n    // console.log(relay.name)\n\n    // const baseTokenSymbol = utils.getTokenSymbolForRelay(relay.name, baseToken)\n    // const quoteTokenSymbol = utils.getTokenSymbolForRelay(\n    //   relay.name,\n    //   quoteToken\n    // )\n    // const ethfinex = exchangeConnector(relay.name, {\n    //   networkId: networkId\n    // })\n    // return from(\n    //   ethfinex.http\n    //     .getOrders({\n    //       symbols: baseTokenSymbol + quoteTokenSymbol,\n    //       precision: exchanges[relay.name + 'Raw'].OrderPrecisions.P2\n    //     })\n    //     .then(orders => {\n    //       console.log(orders)\n    //     })\n    //     .catch(error => {\n    //       console.log('error')\n    //       console.log(error)\n    //     })\n    // )\n  } else {\n    const exchange = new Exchange(relay.name, networkId)\n    // console.log('not aggregated')\n    return from(\n      exchange.getOrders(\n        utils.getTokenSymbolForRelay(relay.name, baseToken),\n        utils.getTokenSymbolForRelay(relay.name, quoteToken)\n      )\n    )\n  }\n}\n\n// Setting the epic\nexport const getOrderBookFromRelayEpic = action$ => {\n  return action$.pipe(\n    ofType(TYPE_.RELAY_GET_ORDERS),\n    mergeMap(action => {\n      return getOrderBookFromRelay$(\n        action.payload.relay,\n        action.payload.networkId,\n        action.payload.baseToken,\n        action.payload.quoteToken,\n        action.payload.aggregated\n      ).pipe(\n        map(payload => {\n          // console.log(payload)\n          return { type: TYPE_.ORDERBOOK_INIT, payload: { ...payload } }\n        }),\n        catchError(error => {\n\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: ERRORS.ERR_EXCHANGE_ORDER_BOOK_FETCH\n          })\n        })\n      )\n    })\n  )\n}\n\n//\n// UPDATE TOKEN WRAPPER LOCK TIME\n//\n\n// const getTokenWrapperLockTime$ = (fundAddress, api) =>\n//   Observable.fromPromise(utils.getDragoLiquidity(fundAddress, api)).map(\n//     liquidity => {\n//       const payload = {\n//         liquidity: {\n//           ETH: liquidity[0],\n//           WETH: liquidity[1],\n//           ZRX: liquidity[2]\n//         }\n//       }\n//       return {\n//         type: TYPE_.UPDATE_SELECTED_FUND,\n//         payload: payload\n//       }\n//     }\n//   )\n\n// export const updateTokenWrapperLockTimeEpic = action$ => {\n//   return action$.pipe(\n//     ofType(TYPE_.UPDATE_TOKEN_WRAPPER_LOCK_TIME),\n//     switchMap(action => {\n//       return getTokenWrapperLockTime$(action.payload.api, action.payload.api)\n//     })\n//   )\n// }\n\n//\n// UPDATE FUND LIQUIDITY\n//\n\n// const updateFundLiquidity$ = (fundAddress, api) =>\n//   Observable.from(utils.getDragoLiquidity(fundAddress, api)).pipe(\n//     map(liquidity => {\n//       const payload = {\n//         liquidity: {\n//           ETH: liquidity[0]\n//           // WETH: liquidity[1],\n//           // ZRX: liquidity[2]\n//         }\n//       }\n//       return {\n//         type: TYPE_.UPDATE_SELECTED_FUND,\n//         payload: payload\n//       }\n//     })\n//   )\n\n// export const updateFundLiquidityEpic = action$ => {\n//   return action$.pipe(\n//     ofType(TYPE_.UPDATE_FUND_LIQUIDITY),\n//     mergeMap(action => {\n//       return Observable.pipe(\n//         concat(\n//           of({\n//             type: TYPE_.UPDATE_ELEMENT_LOADING,\n//             payload: { liquidity: true }\n//           }),\n//           updateFundLiquidity$(action.payload.fundAddress, action.payload.api),\n//           of({\n//             type: TYPE_.UPDATE_ELEMENT_LOADING,\n//             payload: { liquidity: false }\n//           })\n//         )\n//       )\n//     })\n//   )\n// }\n\n//\n// UPDATE LIQUIDITY AND TOKEN BALANCES IN FUND\n//\n\nconst updateLiquidityAndTokenBalances$ = (fundAddress, state$) => {\n  const { selectedRelay, selectedTokensPair } = state$.value.exchange\n  const { networkInfo } = state$.value.endpoint\n  return from(\n    utils.getDragoLiquidityAndTokenBalances(\n      fundAddress,\n      networkInfo,\n      selectedTokensPair,\n      selectedRelay\n    )\n  ).pipe(\n    mergeMap(liquidity => {\n      const payload = {\n        loading: false,\n        liquidity: {\n          ETH: liquidity.dragoETHBalance,\n          baseToken: {\n            balance: liquidity.baseTokenBalance,\n            balanceWrapper: liquidity.baseTokenWrapperBalance\n          },\n          quoteToken: {\n            balance: liquidity.quoteTokenBalance,\n            balanceWrapper: liquidity.quoteTokenWrapperBalance\n          }\n        }\n      }\n\n      return concat(\n        of(Actions.exchange.updateSelectedFund(payload)),\n        of(\n          Actions.exchange.updateSelectedTradeTokensPair({\n            baseTokenLockWrapExpire: liquidity.baseTokenLockWrapExpire,\n            quoteTokenLockWrapExpire: liquidity.quoteTokenLockWrapExpire\n          })\n        )\n      )\n    })\n  )\n}\n\nexport const getLiquidityAndTokenBalancesEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE),\n    exhaustMap(action => {\n      return updateLiquidityAndTokenBalances$(\n        action.payload.dragoAddress,\n        state$\n      )\n    })\n  )\n}\n\nexport const resetLiquidityAndTokenBalancesEpic = action$ => {\n  return action$.pipe(\n    ofType(TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_RESET),\n    exhaustMap(() => {\n\n      const payload = {\n        loading: false,\n        liquidity: {\n          ETH: new BigNumber(0),\n          baseToken: {\n            balance: new BigNumber(0),\n            balanceWrapper: new BigNumber(0)\n          },\n          quoteToken: {\n            balance: new BigNumber(0),\n            balanceWrapper: new BigNumber(0)\n          }\n        }\n      }\n      return of(Actions.exchange.updateSelectedFund(payload))\n    })\n  )\n}\n\nexport const updateLiquidityAndTokenBalancesEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_START),\n    switchMap(() => {\n      return timer(0, 10000).pipe(\n        takeUntil(\n          action$.pipe(ofType(TYPE_.UPDATE_LIQUIDITY_AND_TOKENS_BALANCE_STOP))\n        ),\n        skipWhile(\n          () =>\n            typeof state$.value.exchange.selectedFund.details.address ===\n            'undefined'\n        ),\n        tap(val => {\n          // console.log('*** Update liquidity ***')\n          // console.log(val)\n          return val\n        }),\n        exhaustMap(() => {\n          return updateLiquidityAndTokenBalances$(\n            state$.value.exchange.selectedFund.details.address,\n            state$\n          )\n        })\n      )\n    })\n  )\n}\n\n//\n// FETCH HISTORICAL TRANSCATION LOGS DATA\n//\n\nconst getTradeHistoryLogsFromRelayERCdEX$ = (\n  networkId,\n  baseTokenAddress,\n  quoteTokenAddress\n) =>\n  Observable.from(\n    getTradeHistoryLogsFromRelayERCdEX(\n      networkId,\n      baseTokenAddress,\n      quoteTokenAddress\n    )\n  )\n\nexport const getTradeHistoryLogsFromRelayERCdEXEpic = action$ => {\n  return action$.pipe(\n    ofType(TYPE_.FETCH_HISTORY_TRANSACTION_LOGS),\n    mergeMap(action => {\n      return Observable.pipe(\n        concat(\n          // of({ type: UPDATE_ELEMENT_LOADING, payload: { marketBox: true }}),\n          getTradeHistoryLogsFromRelayERCdEX$(\n            action.payload.networkId,\n            action.payload.baseTokenAddress,\n            action.payload.quoteTokenAddress\n          ).pipe(\n            map(logs => {\n              // const payload = historical.map(entry =>{\n              //   const date = new Date(entry.date)\n              //   entry.date = date\n              //   return entry\n              // })\n              // console.log(payload)\n              // console.log(logs)\n              return {\n                type: TYPE_.UPDATE_HISTORY_TRANSACTION_LOGS,\n                payload: logs\n              }\n            })\n          )\n          // of({ type: UPDATE_ELEMENT_LOADING, payload: { marketBox: false }}),\n        )\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as Endpoint from './endpoint'\nimport * as Eventful from './eventful_epics'\nimport * as Pools from './pools'\nimport * as Tokens from './token_epics'\nimport { ERCdEX, Ethfinex } from './exchanges'\nimport { catchError } from 'rxjs/operators'\nimport { combineEpics } from 'redux-observable'\nimport {\n  getLiquidityAndTokenBalancesEpic,\n  getOrderBookFromRelayEpic,\n  getTradeHistoryLogsFromRelayERCdEXEpic,\n  resetLiquidityAndTokenBalancesEpic,\n  updateLiquidityAndTokenBalancesEpic\n} from './exchange_epics'\n\nconst ERCdEX_Epics = [\n  ERCdEX.getCandlesSingleDataEpic,\n  ERCdEX.initRelayWebSocketTickerEpic,\n  ERCdEX.orderBookEpic,\n  ERCdEX.getAccountOrdersEpic\n]\n\nconst Tokens_Epics = [\n  Tokens.setTokenAllowanceEpic,\n  Tokens.getPricesEpic,\n  Tokens.getCandlesGroupDataEpic\n]\n\nconst Ethfinex_Epics = [\n  Ethfinex.getCandlesSingleDataEpic,\n  Ethfinex.initRelayWebSocketTickerEpic,\n  Ethfinex.initRelayWebSocketBookEpic,\n  Ethfinex.getAccountOrdersEpic,\n  Ethfinex.monitorExchangeEventsEpic,\n  Ethfinex.createOrderEthfinexV0Epic,\n  Ethfinex.connectToRelayEpic\n]\n\nconst Endpoint_Epics = [\n  Endpoint.checkMetaMaskIsUnlockedEpic,\n  Endpoint.monitorAccountsEpic,\n  Endpoint.monitorEventfulEpic,\n  Endpoint.connectedToNodeEpic,\n  Endpoint.attachInterfaceEpic,\n  Endpoint.delayShowAppEpic\n]\n\nconst Eventful_Epics = [\n  Eventful.getPoolsListEpic,\n  Eventful.getAccountsTransactionsEpic,\n  Eventful.getPoolTransactionsEpic\n]\n\nconst Pools_Epics = [\n  Pools.getPoolDetailsEpic,\n  Pools.getTokensBalancesEpic,\n  Pools.getPoolsGroupDetailsEpic\n]\n\n// https://github.com/redux-observable/redux-observable/issues/263#issuecomment-334625730\n\nconst combineAndIsolateEpics = (...epics) => (...args) => {\n  const isolatedEpics = epics.map(epic => (...args) =>\n    epic(...args).pipe(\n      catchError((e, source) => {\n        console.warn(\n          `${epic.name} terminated with error: ${e}, restarting it...`\n        )\n        return source\n      })\n    )\n  )\n  return combineEpics(...isolatedEpics)(...args)\n}\n\nexport const rootEpic = combineAndIsolateEpics(\n  ...Endpoint_Epics,\n  ...ERCdEX_Epics,\n  ...Ethfinex_Epics,\n  ...Tokens_Epics,\n  ...Eventful_Epics,\n  ...Pools_Epics,\n  getOrderBookFromRelayEpic,\n  getLiquidityAndTokenBalancesEpic,\n  updateLiquidityAndTokenBalancesEpic,\n  resetLiquidityAndTokenBalancesEpic,\n  getTradeHistoryLogsFromRelayERCdEXEpic\n)\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\n// import { Observable } from 'rxjs';\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions'\nimport { DEBUGGING } from '../../../_utils/const'\nimport { Interfaces } from '../../../_utils/interfaces'\nimport {\n  catchError,\n  distinctUntilChanged,\n  exhaustMap,\n  finalize,\n  map,\n  mergeMap,\n  retryWhen,\n  timeout\n} from 'rxjs/operators'\nimport { concat, from, of, timer } from 'rxjs'\nimport { ofType } from 'redux-observable'\nimport { sha3_512 } from 'js-sha3'\nimport BigNumber from 'bignumber.js'\nimport Web3Wrapper from '../../../_utils/web3Wrapper/src'\nimport shallowequal from 'shallowequal'\n\n//\n// CHECK THAT METAMASK IS UNLOCKED AND UPDATE ACTIVE ACCOUNT\n//\n\nconst checkMetaMaskIsUnlocked$ = endpoint => {\n  let newEndpoint = { ...endpoint }\n  let oldAccounts = [].concat(endpoint.accounts)\n  let newAccounts = []\n  let metaMaskAccountAddress = ''\n  const web3Metamask = window.web3\n  const api = Web3Wrapper.getInstance(endpoint.networkInfo.id)\n  // console.log('checkMetaMaskIsUnlocked$')\n  return from(web3Metamask.eth.getAccounts()).pipe(\n    exhaustMap(accountsMetaMask => {\n      // MM is not locked\n      if (accountsMetaMask.length !== 0) {\n        metaMaskAccountAddress = accountsMetaMask[0]\n        // Check if a MetaMask account is already in accounts list.\n        let metaMaskAccountIndex = oldAccounts.findIndex(account => {\n          return account.address === metaMaskAccountAddress\n        })\n        if (metaMaskAccountIndex < 0) {\n          const networkId = endpoint.networkInfo.id\n          const blockchain = new Interfaces(api, networkId)\n          return from(blockchain.attachInterfaceInfuraV2()).pipe(\n            timeout(5000),\n            map(result => {\n              if (result.accounts.length !== 0) {\n                newAccounts.push(result.accounts[0])\n              }\n              newEndpoint = {\n                ...result\n              }\n              // newEndpoint.accounts = newAccounts\n              // Update total ETH and GRG balance\n              newEndpoint.ethBalance = newEndpoint.accounts.reduce(\n                (total, account) => total.plus(account.ethBalanceWei),\n                new BigNumber(0)\n              )\n              newEndpoint.grgBalance = newEndpoint.accounts.reduce(\n                (total, account) => total.plus(account.grgBalanceWei),\n                new BigNumber(0)\n              )\n              // console.log('attachInterfaceInfuraV2', newEndpoint)\n              return newEndpoint\n            }),\n            catchError(err => {\n              console.warn(err)\n              return of(false)\n            })\n          )\n        }\n        return of(newEndpoint)\n      }\n\n      // MM is locked\n      if (accountsMetaMask.length === 0) {\n        // console.log('**** MM locked ****')\n        let metaMaskAccountIndex = oldAccounts.findIndex(account => {\n          return account.source === 'MetaMask'\n        })\n        // console.log(metaMaskAccountIndex)\n        if (metaMaskAccountIndex !== -1) {\n          newAccounts = oldAccounts.filter(account => {\n            return account.source !== 'MetaMask'\n          })\n          // console.log(newAccounts)\n          newEndpoint.accounts = newAccounts\n          newEndpoint.isMetaMaskLocked = true\n        }\n        return of(newEndpoint)\n      }\n    }),\n    catchError(err => {\n      console.warn(err)\n      return of(false)\n    })\n  )\n}\n\nexport const checkMetaMaskIsUnlockedEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.CHECK_METAMASK_IS_UNLOCKED),\n    mergeMap(() => {\n      return timer(0, 1000).pipe(\n        exhaustMap(() => {\n          const currentState = state$.value\n          return checkMetaMaskIsUnlocked$(currentState.endpoint)\n        }),\n        timeout(5000),\n        distinctUntilChanged((a, b) => {\n          return shallowequal(\n            JSON.stringify(a.accounts),\n            JSON.stringify(b.accounts)\n          )\n        }),\n        exhaustMap(newEndpoint => {\n\n          let optionsManager = {\n            balance: false,\n            supply: true,\n            limit: 20,\n            trader: false,\n            drago: true\n          }\n          let optionsHolder = {\n            balance: true,\n            supply: false,\n            limit: 20,\n            trader: true,\n            drago: true\n          }\n          let accountsAddressHash\n          if (typeof newEndpoint.accounts !== 'undefined') {\n            let accounts = newEndpoint.accounts.map(element => {\n              return element.address\n            })\n            accountsAddressHash = sha3_512(accounts.toString())\n          }\n          let arrayObservables =\n            DEBUGGING.initAccountsTransactionsInEpic &&\n            !newEndpoint.isMetaMaskLocked\n              ? [\n                  of(\n                    Actions.endpoint.getAccountsTransactions(\n                      null,\n                      newEndpoint.accounts,\n                      optionsHolder\n                    )\n                  ),\n                  of(\n                    Actions.endpoint.getAccountsTransactions(\n                      null,\n                      newEndpoint.accounts,\n                      optionsManager\n                    )\n                  ),\n                  of(\n                    Actions.endpoint.getAccountsTransactions(\n                      null,\n                      newEndpoint.accounts,\n                      {\n                        ...optionsHolder,\n                        ...{\n                          drago: false\n                        }\n                      }\n                    )\n                  ),\n                  of(\n                    Actions.endpoint.getAccountsTransactions(\n                      null,\n                      newEndpoint.accounts,\n                      {\n                        ...optionsManager,\n                        ...{\n                          drago: false\n                        }\n                      }\n                    )\n                  )\n                ]\n              : []\n          delete newEndpoint.prevBlockNumber\n          return concat(\n            of(Actions.endpoint.updateInterface(newEndpoint)),\n            of(\n              Actions.app.updateAppStatus({\n                accountsAddressHash: accountsAddressHash\n              })\n            ),\n            ...arrayObservables\n          )\n        }),\n        retryWhen(error => {\n          let scalingDuration = 2000\n          return error.pipe(\n            mergeMap((error, i) => {\n              console.warn(error)\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\n// import { Observable } from 'rxjs';\nimport * as TYPE_ from '../../actions/const'\n// import { Actions } from '../../actions'\nimport { DEBUGGING } from '../../../_utils/const'\nimport { Observable, concat, merge, of, timer } from 'rxjs'\nimport {\n  finalize,\n  flatMap,\n  mergeMap,\n  retryWhen,\n  takeUntil,\n  tap\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport Web3Wrapper from '../../../_utils/web3Wrapper/src'\n\n//\n// SUBSCRIBES TO EVENTFULL CONTRACTS AND EMIT NEW EVENTS\n//\n\nconst monitorEventful$ = state$ => {\n  return merge(\n    Observable.create(observer => {\n      const api = Web3Wrapper.getInstance(state$.value.endpoint.networkInfo.id)\n      const subscription = api.rigoblock.ob.eventful$.subscribe(val => {\n        return observer.next(val)\n      })\n      return () => subscription.unsubscribe\n    })\n  )\n}\n\nexport const monitorEventfulEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.MONITOR_ACCOUNTS_START),\n    mergeMap(action => {\n      return monitorEventful$(state$).pipe(\n        takeUntil(action$.pipe(ofType(TYPE_.MONITOR_ACCOUNTS_STOP))),\n        tap(val => {\n\n          return val\n        }),\n        flatMap(() => {\n          const observablesArray = Array(0)\n          // const currentState = state$.value\n          observablesArray.push(of(DEBUGGING.DUMB_ACTION))\n          // if (currentState.transactionsDrago.selectedDrago.details.dragoId) {\n          //   console.log('Account monitoring - > DRAGO details fetch.')\n          //   observablesArray.push(\n          //     of(\n          //       Actions.pools.getPoolsSingleDetails(\n          //         currentState.transactionsDrago.selectedDrago.details.dragoId,\n          //\n          //         {\n          //           poolType: 'drago'\n          //         }\n          //       )\n          //     )\n          //   )\n          // }\n\n          // if (currentState.transactionsVault.selectedVault.details.vaultId) {\n          //   console.log('Account monitoring - > VAULT details fetch.')\n          //   observablesArray.push(\n          //     of(\n          //       Actions.pools.getPoolsSingleDetails(\n          //         currentState.transactionsVault.selectedVault.details.vaultId,\n\n          //         {\n          //           poolType: 'vault'\n          //         }\n          //       )\n          //     )\n          //   )\n          // }\n          return concat(...observablesArray)\n        }),\n        retryWhen(error => {\n\n          let scalingDuration = 10000\n          return error.pipe(\n            mergeMap((error, i) => {\n              console.warn(error)\n              const retryAttempt = i + 1\n\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n        // catchError(error => {\n        //   console.log(error)\n        //   return of({\n        //     type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n        //     payload: 'Error: cannot subscribe to eventful.'\n        //   })\n        // })\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions/'\nimport { distinctUntilChanged, map, mergeMap } from 'rxjs/operators'\nimport Web3Wrapper from '../../../_utils/web3Wrapper/src'\n\n//\n// CHECK IF THE APP If NETWORK IS UP AND THERE IS A CONNECTION TO A NODE\n//\n\nexport const connectedToNodeEpic = (action$, state$) =>\n  action$.ofType(TYPE_.CHECK_APP_IS_CONNECTED).pipe(\n    mergeMap(() => {\n      const web3 = Web3Wrapper.getInstance(state$.value.endpoint.networkInfo.id)\n      return web3.rigoblock.ob.nodeStatus$.pipe(\n        distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b))\n      )\n    }),\n    map(res => Actions.app.updateAppStatus(res))\n  )\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions/'\nimport { BigNumber } from 'bignumber.js'\nimport { ERCdEX, Ethfinex } from '../../../_utils/const'\nimport { Observable, from, timer } from 'rxjs'\nimport { defaultDragoDetails } from '../../../_utils/const'\nimport {\n  finalize,\n  flatMap,\n  map,\n  mergeMap,\n  retryWhen,\n  takeUntil\n} from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport utils from '../../../_utils/utils'\n\n//\n// GET DETAILS FOR A DRAGO\n//\n\nconst getPoolsSingleDetails$ = (poolId, networkInfo, options, state$) => {\n  return Observable.create(observer => {\n    const getDetails = async () => {\n      let poolDetails = { ...defaultDragoDetails }\n      const { accounts } = state$.value.endpoint\n      const list = Object.assign({}, state$.value.poolsList.list)\n      try {\n        let details\n        if (typeof list[poolId] !== 'undefined') {\n          poolDetails = { ...poolDetails, ...list[poolId].details }\n          observer.next([list[poolId], { updateCache: false }])\n        }\n        try {\n          details = await utils.getPoolDetailsFromId(poolId, networkInfo)\n          if (options.poolType === 'drago') {\n            poolDetails = {\n              ...poolDetails,\n              ...{\n                address: details[0][0],\n                name:\n                  details[0][1].charAt(0).toUpperCase() +\n                  details[0][1].slice(1),\n                symbol: details[0][2],\n                dragoId: new BigNumber(details[0][3]).toFixed(),\n                addressOwner: details[0][4],\n                addressGroup: details[0][5]\n              }\n            }\n            observer.next([{ details: poolDetails }])\n          } else {\n            poolDetails = {\n              ...poolDetails,\n              ...{\n                address: details[0][0],\n                name:\n                  details[0][1].charAt(0).toUpperCase() +\n                  details[0][1].slice(1),\n                symbol: details[0][2],\n                vaultId: new BigNumber(details[0][3]).toFixed(),\n                addressOwner: details[0][4],\n                addressGroup: details[0][5]\n              }\n            }\n            observer.next([{ details: poolDetails }])\n          }\n        } catch (err) {\n          console.warn(err)\n          observer.error(err)\n        }\n\n        try {\n          poolDetails =\n            options.poolType === 'drago'\n              ? await utils.getDragoDetails(\n                  details,\n                  accounts,\n                  networkInfo,\n                  options\n                )\n              : await utils.getVaultDetails(\n                  details,\n                  accounts,\n                  networkInfo,\n                  options\n                )\n\n          observer.next([{ details: poolDetails }])\n        } catch (err) {\n          console.warn(err)\n          observer.error(err)\n        }\n        try {\n          poolDetails =\n            options.poolType === 'drago'\n              ? await utils.getDragoDetails(details, accounts, networkInfo, {\n                  ...options,\n                  dateOnly: true\n                })\n              : await utils.getVaultDetails(details, accounts, networkInfo, {\n                  ...options,\n                  dateOnly: true\n                })\n\n          observer.next([{ details: poolDetails }])\n        } catch (err) {\n          console.warn(err)\n          observer.error(err)\n        }\n      } catch (err) {\n        console.warn(err)\n        observer.error(err)\n      }\n    }\n\n    getDetails()\n\n    return () => observer.complete()\n  })\n}\n\nexport const getPoolDetailsEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.POOLS_SINGLE_DETAILS_GET),\n    mergeMap(action => {\n      const { networkInfo, accounts } = state$.value.endpoint\n      let i = 0\n      return getPoolsSingleDetails$(\n        action.payload.poolId,\n        networkInfo,\n        action.payload.options,\n        state$\n      ).pipe(\n        map(result => {\n          return result.length === 1\n            ? { payload: result[0], meta: { updateCache: true } }\n            : { payload: result[0], meta: result[1] }\n        }),\n        flatMap(result => {\n          let drago = action.payload.options.poolType === 'drago' ? true : false\n          let options = {\n            balance: true,\n            supply: false,\n            limit: 20,\n            trader: !state$.value.user.isManager,\n            drago\n          }\n          const { payload, meta } = result\n\n          let relayName\n          switch (networkInfo.id) {\n            case 1:\n              relayName = Ethfinex\n              break\n            case 3:\n              relayName = Ethfinex\n              break\n            case 42:\n              relayName = Ethfinex\n              break\n            default:\n              relayName = Ethfinex\n          }\n          const relay = {\n            name: relayName\n          }\n          let actionsArray = []\n          if (drago) {\n            actionsArray.push(\n              Actions.drago.updateDragoSelectedDetails(payload, meta)\n            )\n            if (i === 0) {\n              const { address } = payload.details\n              actionsArray.push(\n                Actions.pools.getPoolsSingleTransactions(\n                  address,\n                  accounts,\n                  options\n                ),\n                Actions.drago.getTokenBalancesDrago(address, relay)\n              )\n            }\n          } else {\n            actionsArray.push(\n              Actions.vault.updateVaultSelectedDetails(payload, meta)\n            )\n            if (i === 0) {\n              const { address } = payload.details\n              actionsArray.push(\n                Actions.pools.getPoolsSingleTransactions(\n                  address,\n                  accounts,\n                  options\n                )\n              )\n            }\n          }\n          i++\n          return from(actionsArray)\n        }),\n        takeUntil(\n          action$.pipe(\n            ofType(\n              TYPE_.DRAGO_SELECTED_DETAILS_RESET,\n              TYPE_.VAULT_SELECTED_DETAILS_RESET\n            )\n          )\n        ),\n        retryWhen(error => {\n          let scalingDuration = 5000\n          return error.pipe(\n            mergeMap(error => {\n              console.warn(error)\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    }),\n    retryWhen(error => {\n      let scalingDuration = 5000\n      return error.pipe(\n        mergeMap(error => {\n          console.warn(error)\n          return timer(scalingDuration)\n        }),\n        finalize(() => console.log('We are done!'))\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions'\nimport { catchError, flatMap, map, mergeMap } from 'rxjs/operators'\nimport { from, of } from 'rxjs'\nimport { ofType } from 'redux-observable'\n// import { DEBUGGING } from '../../_utils/const'\nimport { ERC20_TOKENS } from '../../../_utils/tokens'\nimport { getTokensBalances } from '../../../_utils/pools/getTokensBalances'\nimport Web3Wrapper from '../../../_utils/web3Wrapper/src'\nimport utils from '../../../_utils/utils'\n\nconst getTokensBalances$ = (dragoAddress, networkInfo) => {\n  const allowedTokens = ERC20_TOKENS[networkInfo.name]\n  const web3 = Web3Wrapper.getInstance(networkInfo.id)\n\n  return from(\n    getTokensBalances(dragoAddress, allowedTokens, web3).catch(err => {\n      console.warn(err)\n      throw err\n    })\n  )\n}\n\nexport const getTokensBalancesEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.GET_TOKEN_BALANCES_DRAGO),\n    mergeMap(action => {\n      const { networkInfo } = state$.value.endpoint\n      return getTokensBalances$(action.payload.dragoDetails, networkInfo).pipe(\n        map(dragoAssets => {\n          const ordered = {}\n          Object.keys(dragoAssets)\n            .sort()\n            .forEach(function(key) {\n              ordered[key] = dragoAssets[key]\n            })\n          return ordered\n        }),\n        map(dragoAssets => {\n          if (state$.value.app.config.isMock) {\n            if (\n              Object.keys(state$.value.transactionsDrago.selectedDrago.assets)\n                .length === 0\n            ) {\n              dragoAssets = utils.generateMockAssets(networkInfo.name)\n            }\n          }\n          return dragoAssets\n        }),\n        flatMap(dragoAssets => {\n          const actionsArray = [\n            Actions.drago.updateDragoSelectedDetails({\n              assets: Object.values(dragoAssets)\n            }),\n            Actions.tokens.priceTickersStart(\n              action.payload.relay,\n              networkInfo.id,\n              dragoAssets\n            )\n          ]\n          if (action.payload.relay.name === 'Ethfinex') {\n            actionsArray.push(\n              Actions.exchange.getPortfolioChartDataStart(\n                action.payload.relay,\n                networkInfo.id\n              )\n            )\n          }\n          return from(actionsArray)\n        }),\n        catchError(error => {\n          console.warn(error)\n          return of({\n            type: TYPE_.QUEUE_ERROR_NOTIFICATION,\n            payload: 'Error fetching fund assets balances.'\n          })\n        })\n      )\n    })\n  )\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport * as TYPE_ from '../../actions/const'\nimport { Actions } from '../../actions/'\nimport { BigNumber } from 'bignumber.js'\nimport { from, timer } from 'rxjs'\nimport { finalize, flatMap, map, mergeMap, retryWhen } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport utils from '../../../_utils/utils'\nimport { formatCoins, formatEth } from '../../../_utils/format'\n\n//\n// GET DETAILS FOR A GROUP OF POOLS\n//\n\nconst getPoolsGroupDetails$ = (poolsIdArray, networkInfo) => {\n  return from(utils.getPoolsGroupDetails(poolsIdArray, networkInfo))\n}\n\nexport const getPoolsGroupDetailsEpic = (action$, state$) => {\n  return action$.pipe(\n    ofType(TYPE_.POOLS_GROUP_DETAILS_GET),\n    mergeMap(action => {\n      const { networkInfo } = state$.value.endpoint\n      return getPoolsGroupDetails$(\n        action.payload.poolsIdArray,\n        networkInfo,\n        state$\n      ).pipe(\n        map(poolsArray => {\n          const formattedArray = poolsArray.map(pool => {\n            const [\n              name,\n              symbol,\n              sellPrice,\n              buyPrice,\n              owner,\n              feeCollector,\n              dragoDao,\n              ratio,\n              transactionFee,\n              totalSupply,\n              ethBalance,\n              minPeriod,\n              id,\n              ,\n            ] = pool\n            return {\n              id,\n              name: name.charAt(0).toUpperCase() + name.slice(1),\n              symbol: symbol,\n              addressOwner: owner.toLowerCase(),\n              addressDao: dragoDao.toLowerCase(),\n              sellPrice: formatEth(sellPrice, 4),\n              buyPrice: formatEth(buyPrice, 4),\n              totalSupply: formatCoins(new BigNumber(totalSupply), 4),\n              totalSupplyBaseUnits: new BigNumber(totalSupply),\n              dragoETHBalance: formatEth(ethBalance, 4),\n              dragoETHBalanceWei: new BigNumber(ethBalance),\n              minPeriod,\n              ratio,\n              transactionFee,\n              feeCollector: feeCollector.toLowerCase()\n\n            }\n          })\n\n          return formattedArray\n        }),\n        flatMap(poolsArray => {\n          let actionsArray = poolsArray.map(pool => {\n            const payload = {\n              payload: { details: { ...pool } },\n              meta: { poolId: pool.id }\n            }\n            return Actions.pools.writeItemPoolsList(payload)\n          }\n          )\n          return from(actionsArray)\n        }),\n        retryWhen(error => {\n          let scalingDuration = 5000\n          return error.pipe(\n            mergeMap(error => {\n              console.warn(error)\n              return timer(scalingDuration)\n            }),\n            finalize(() => console.log('We are done!'))\n          )\n        })\n      )\n    }),\n    retryWhen(error => {\n      let scalingDuration = 5000\n      return error.pipe(\n        mergeMap(error => {\n          console.warn(error)\n          return timer(scalingDuration)\n        }),\n        finalize(() => console.log('We are done!'))\n      )\n    })\n  )\n}\n","import * as Colors from 'material-ui/styles/colors'\nimport { Col, Row } from 'react-flexbox-grid'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport React, { Component } from 'react'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport styles from './elementAppLoading.module.css'\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: '#054186'\n  },\n  appBar: {\n    height: 45,\n    fontSize: '20px !important'\n  }\n})\n\nclass AppLoading extends Component {\n  renderNotConnected = () => {\n    return (\n      <div className={styles.divFullHeight}>\n        <Row className={styles.loadingDiv}>\n          <Col xs={12}>\n            <Row>\n              <Col xs={12} style={{ textAlign: 'center' }}>\n                <img\n                  src=\"/img/rb-logo-final.png\"\n                  className={styles.logoImg}\n                  alt=\"\"\n                />\n                <LinearProgress\n                  mode=\"indeterminate\"\n                  color={Colors.blueGrey900}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={muiTheme}>\n        {this.renderNotConnected()}\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default AppLoading\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport { ENDPOINTS, INFURA, KOVAN, PROD, WS } from './const'\nimport Web3 from 'web3'\nimport Web3Wrapper from '../_utils/web3Wrapper/src'\n\nclass Endpoint {\n  constructor(\n    endpointInfo,\n    networkInfo = { name: KOVAN },\n    prod = PROD,\n    ws = WS\n  ) {\n    if (!endpointInfo) {\n      throw new Error(\n        'endpointInfo connection data needs to be provided to Endpoint'\n      )\n    }\n    if (!networkInfo) {\n      throw new Error('network name needs to be provided to Endpoint')\n    }\n    this._timeout = 10000\n    this._endpoint = Object.assign({}, endpointInfo)\n    this._network = Object.assign({}, networkInfo)\n    this._prod = prod\n    // Infura does not support WebSocket on Kovan network yet. Disabling.\n    this._onWs = ws\n    /*this._onWs =\n      this._network.name === KOVAN && this._endpoint.name === INFURA\n        ? false\n        : ws*/\n    // Setting production or development endpoints\n    if (prod) {\n      this._https = endpointInfo.https[this._network.name].prod\n\n      this._wss = endpointInfo.wss[this._network.name].prod\n    } else {\n      this._https = endpointInfo.https[this._network.name].dev\n\n      this._wss = endpointInfo.wss[this._network.name].dev\n    }\n  }\n\n  get timeout() {\n    return this._timeout\n  }\n\n  set timeout(timeout) {\n    this._timeout = timeout\n  }\n\n  _checkLocal = () => {\n    if (typeof window.parity !== 'undefined') {\n\n      return true\n    }\n    return false\n  }\n\n  _checkWeb3 = async () => {\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof window.web3 !== 'undefined') {\n\n      // if (typeof window.ethereum !== 'undefined') {\n      //   try {\n      //     // Request account access if needed\n      //     await window.ethereum.enable()\n      //     console.warn('User allowed account access')\n      //   } catch (error) {\n      //     console.warn('User denied account access')\n      //   }\n      // }\n      try {\n        window.web3 = new Web3(window.web3.currentProvider)\n      } catch (error) {\n\n      }\n      window.web3._rb = {}\n      window.web3._rb.network = this._network\n      window.web3._rb.wss = ENDPOINTS.infura.wss[this._network.name].dev\n    } else {\n\n    }\n  }\n\n  connect = () => {\n    this._checkWeb3()\n    let web3Wrapper\n    try {\n      web3Wrapper = Web3Wrapper.getInstance(\n        this._network.id,\n        this._endpoint.name\n      )\n    } catch (error) {\n      console.warn(error)\n    }\n\n    let api\n    if (this._checkLocal()) {\n\n      window.parity.api._rb = {}\n      window.parity.api._rb.network = this._network\n      return window.parity.api\n    }\n\n    try {\n      api = web3Wrapper\n      api._rb = {}\n      api._rb.network = this._network\n      api._rb.network.transportWs = this._wss\n      api._rb.network.transportHttp = this._https\n\n\n\n      return api\n    } catch (error) {\n\n      return error\n    }\n\n    // if (this._onWs) {\n    //   try {\n    //     console.log('Network: ', this._network.name)\n    //     console.log('Connecting to WebSocket: ', this._wss)\n    //     const transport = new Api.Provider.WsSecure(this._wss)\n    //     api = new Web3(window.web3.currentProvider)\n    //     api._rb = {}\n    //     api._rb.network = this._network\n    //     api._rb.network.transportWs = this._wss\n    //     console.log(api)\n    //     return api\n    //   } catch (error) {\n    //     console.log('Connection error: ', error)\n    //     return error\n    //   }\n    // } else {\n    //   try {\n    //     console.log('Network: ', this._network.name)\n    //     console.log('Connecting to HTTPS: ', this._https)\n    //     const transport = new Api.Provider.Http(this._https, this._timeout)\n    //     api = new Web3(window.web3.currentProvider)\n    //     api._rb = {}\n    //     api._rb.network = this._network\n    //     api._rb.network.transportWs = this._wss\n    //     console.log(api)\n    //     return api\n    //   } catch (error) {\n    //     console.log('Connection error: ', error)\n    //     return error\n    //   }\n    // }\n  }\n}\n\nexport default Endpoint\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport TopBarMenu from '../Elements/topBarMenu'\n\nimport { Col, Grid, Row } from 'react-flexbox-grid'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\n\nimport { connect } from 'react-redux'\nimport ElementNotConnected from '../Elements/elementNotConnected'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport classNames from 'classnames'\nimport styles from './application.module.css'\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    primary1Color: '#054186'\n  },\n  fontFamily: \"'Muli', sans-serif\",\n  appBar: {\n    height: 45,\n    fontSize: '20px !important'\n  }\n})\n\nfunction mapStateToProps(state) {\n  return state\n}\n\nclass Whoops404 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      notificationsOpen: false\n    }\n  }\n\n  // Context\n  static childContextTypes = {\n    muiTheme: PropTypes.object\n  }\n\n  getChildContext() {\n    return {\n      muiTheme\n    }\n  }\n\n  static contextTypes = {\n    api: PropTypes.object.isRequired\n  }\n\n  UNSAFE_componentWillMount() {}\n\n  componentWillUnmount() {}\n\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    app: PropTypes.object.isRequired\n  }\n\n  handleToggleNotifications = () => {\n    this.setState({ notificationsOpen: !this.state.notificationsOpen })\n  }\n\n  render() {\n    const { location } = this.props\n    const { isSyncing, syncStatus, isConnected } = this.props.app\n    return (\n      <MuiThemeProvider muiTheme={muiTheme}>\n        <Grid fluid className={styles.maincontainer}>\n          <Row>\n            <Col xs={12}>\n              <TopBarMenu\n                handleTopBarSelectAccountType={\n                  this.handleTopBarSelectAccountType\n                }\n                handleToggleNotifications={this.handleToggleNotifications}\n              />\n            </Col>\n          </Row>\n          <Row className={classNames(styles.content)}>\n            <Col xs={12}>\n              {isConnected && !isSyncing ? (\n                // {false ? (\n                <div className=\"\">\n                  <h1>\n                    Page not found. Resource not found at {location.pathname}\n                  </h1>\n                </div>\n              ) : (\n                <ElementNotConnected\n                  isSyncing={isSyncing}\n                  syncStatus={syncStatus}\n                />\n              )}\n            </Col>\n          </Row>\n        </Grid>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Whoops404)\n","// Copyright 2016-2017 Rigo Investment Sagl.\n// import 'babel-polyfill'\nimport 'react-virtualized/styles.css'\nimport * as Sentry from '@sentry/browser'\nimport { Actions } from './_redux/actions'\nimport { Redirect, Route, Router, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { notificationWrapper } from './_utils/notificationWrapper'\nimport AppLoading from './Elements/elementAppLoading'\n// import ApplicationConfigPage from './Application/applicationConfig'\n// import ApplicationDragoPage from './Application/applicationDrago'\n// import ApplicationExchangePage from './Application/applicationExchange'\n// import ApplicationHomeEfxPage from './Application/applicationHomeEfxPage'\n// import ApplicationHomePage from './Application/applicationHomePage'\n// import ApplicationVaultPage from './Application/applicationVault'\nimport Endpoint from './_utils/endpoint'\nimport NotificationSystem from 'react-notification-system'\nimport PropTypes from 'prop-types'\nimport React, { Component, Suspense, lazy } from 'react'\nimport ReactGA from 'react-ga'\nimport Whoops404 from './Application/whoops404'\nimport createHashHistory from 'history/createHashHistory'\nimport styles from './App.module.css'\nimport utils from './_utils/utils'\n\n\nconst ApplicationHomePage = lazy(() =>\n  import('./Application/applicationHomePage')\n)\nconst ApplicationConfigPage = lazy(() =>\n  import('./Application/applicationConfig')\n)\nconst ApplicationDragoPage = lazy(() =>\n  import('./Application/applicationDrago')\n)\nconst ApplicationExchangePage = lazy(() =>\n  import('./Application/applicationExchange')\n)\nconst ApplicationHomeEfxPage = lazy(() =>\n  import('./Application/applicationHomeEfxPage')\n)\nconst ApplicationVaultPage = lazy(() =>\n  import('./Application/applicationVault')\n)\n\nlet appHashPath = 'web'\n\nReactGA.initialize('UA-117171641-1')\nReactGA.pageview(window.location.pathname + window.location.search)\n\nconst history = createHashHistory()\n\nfunction mapStateToProps(state) {\n  return {\n    app: {\n      appLoading: state.app.appLoading\n    },\n    endpoint: state.endpoint\n  }\n}\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this._notificationSystem = null\n    let endpoint = new Endpoint(\n      this.props.endpoint.endpointInfo,\n      this.props.endpoint.networkInfo\n    )\n    try {\n      this._api = endpoint.connect()\n    } catch (error) {\n      console.warn(error)\n    }\n  }\n\n  scrollPosition = 0\n  tdIsConnected = null\n  tdIsMetaMaskUnlocked = null\n\n  state = {\n    isConnected: this.props.app.isConnected,\n    isSyncing: this.props.app.isSyncing,\n    syncStatus: this.props.app.syncStatus\n  }\n\n  static childContextTypes = {\n    api: PropTypes.object\n  }\n\n  static propTypes = {\n    app: PropTypes.object.isRequired,\n    endpoint: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  initNotificationSystem = instance => {\n    if (!this._notificationSystem) {\n      this._notificationSystem = React.createRef()\n      notificationWrapper.getInstance(instance)\n    }\n  }\n\n  callback = data => {\n    const { action, index, type } = data\n\n  }\n\n  getChildContext() {\n    return {\n      api: this._api\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const propsUpdate = !utils.shallowEqual(this.props, nextProps)\n    const stateUpdate = !utils.shallowEqual(this.state, nextState)\n    return stateUpdate || propsUpdate\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key])\n      })\n      Sentry.captureException(error)\n    })\n  }\n\n  componentDidMount = async () => {\n    const { endpoint } = this.props\n    this.props.dispatch(Actions.endpoint.checkIsConnectedToNode())\n    this.props.dispatch(Actions.endpoint.attachInterface(endpoint))\n    if (typeof window.web3 !== 'undefined') {\n      this.props.dispatch(Actions.endpoint.checkMetaMaskIsUnlocked())\n    }\n    this.props.dispatch(Actions.endpoint.monitorAccountsStart())\n    let options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n    this.props.dispatch(Actions.pools.getPoolsList(options))\n    this.setState({ run: true })\n  }\n\n  render() {\n    let notificationStyle = {\n      NotificationItem: {\n        // Override the notification item\n        DefaultStyle: {\n          // Applied to every notification, regardless of the notification level\n          margin: '0px 0px 0px 0px'\n        },\n        info: {\n          // Applied only to the success notification item\n          border: '1px solid',\n          borderColor: '#EEEEEE',\n          WebkitBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          MozBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          boxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          backgroundColor: 'white',\n          marginBottom: '5px'\n        },\n        error: {\n          borderTop: '2px solid',\n          WebkitBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          MozBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          boxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          backgroundColor: '#F44336',\n          color: '#ffffff',\n          marginBottom: '5px'\n        },\n        warning: {\n          borderTop: '0px solid',\n          WebkitBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          MozBoxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          boxShadow: 'rgba(0, 0, 0, 0.1) 0px 5px 5px',\n          backgroundColor: '#E65100',\n          color: '#ffffff',\n          marginBottom: '5px'\n        }\n      },\n      Title: {\n        error: {\n          color: '#ffffff',\n          fontWeight: 700\n        },\n        warning: {\n          color: '#ffffff',\n          fontWeight: 700\n        }\n      },\n      Dismiss: {\n        info: {\n          backgroundColor: '',\n          color: '#000000'\n        },\n        error: {\n          backgroundColor: '',\n          color: '#ffffff'\n        },\n        warning: {\n          backgroundColor: '',\n          color: '#ffffff'\n        }\n      }\n    }\n\n    return (\n      <div className={styles.appContainer}>\n        <NotificationSystem\n          ref={this.initNotificationSystem}\n          style={notificationStyle}\n        />\n        {this.props.app.appLoading ? (\n          <Router history={history}>\n            <AppLoading />\n          </Router>\n        ) : (\n          <Router history={history}>\n            <Suspense fallback={<AppLoading />}>\n              <Switch>\n                <Route\n                  exact\n                  path={'/ethfinex'}\n                  render={props => <ApplicationHomeEfxPage {...props} />}\n                  // component={ApplicationHomeEfxPage}\n                />\n                <Route\n                  exact\n                  path={'/app/' + appHashPath + '/home'}\n                  render={props => <ApplicationHomePage {...props} />}\n                  // component={ApplicationHomePage}\n                />\n                <Route\n                  path={'/app/' + appHashPath + '/vault'}\n                  render={props => <ApplicationVaultPage {...props} />}\n                  // component={ApplicationVaultPage}\n                />\n                <Route\n                  path={'/app/' + appHashPath + '/drago'}\n                  render={props => <ApplicationDragoPage {...props} />}\n                  // component={ApplicationDragoPage}\n                />\n                <Route\n                  path={'/app/' + appHashPath + '/exchange'}\n                  render={props => <ApplicationExchangePage {...props} />}\n                  // component={ApplicationExchangePage}\n                />\n                <Route\n                  path={'/app/' + appHashPath + '/config'}\n                  render={props => <ApplicationConfigPage {...props} />}\n                  // component={ApplicationConfigPage}\n                />\n                <Redirect\n                  from=\"/exchange/\"\n                  to={'/app/' + appHashPath + '/exchange'}\n                />\n                <Redirect\n                  from=\"/vault/\"\n                  to={'/app/' + appHashPath + '/vault'}\n                />\n                <Redirect from=\"/drago\" to={'/app/' + appHashPath + '/drago'} />\n                <Redirect from=\"/\" to={'/app/' + appHashPath + '/home'} />\n                <Route\n                  render={props => <Whoops404 {...props} />}\n                  // component={Whoops404}\n                />\n              </Switch>\n            </Suspense>\n          </Router>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","// Copyright 2016-2017 Rigo Investment Sagl.\n// By the Power of Grayskull! I Have the Power!\n\nimport Reactotron from './ReactotronConfig'\n\nimport * as Sentry from '@sentry/browser'\nimport { Provider } from 'react-redux'\nimport { Reducers } from './_redux/reducers/root_reducer'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { persistReducer, persistStore } from 'redux-persist'\n\n// import { reduxBatch } from '@manaflair/redux-batch'\nimport { rootEpic } from './_redux/epics/root_epics'\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import registerServiceWorker, { unregister } from './registerServiceWorker'\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { GIT_HASH } from './_utils/const'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { createFilter } from 'redux-persist-transform-filter'\nimport {\n  notificationsMiddleWare,\n  poolCalculateValueMiddleWare,\n  poolsCachingMiddleWare,\n  relayActionsMiddleWare\n} from './_redux/middlewares'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n// import reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport storage from 'redux-persist/lib/storage'\n\nimport './index.module.css'\n\nfunction noop() {}\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst middlewares = [\n  epicMiddleware,\n  relayActionsMiddleWare,\n  notificationsMiddleWare,\n  poolCalculateValueMiddleWare,\n  poolsCachingMiddleWare\n]\n\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(require('redux-immutable-state-invariant').default())\n}\n\n// Redux Persist\nconst saveSubsetFilterEndpoint = createFilter('endpoint', [\n  'endpointInfo',\n  'networkInfo'\n])\nconst saveSubsetFilterApp = createFilter('app', [\n  // 'isConnected',\n  // 'isSyncing',\n  'lastBlockNumberUpdate',\n  'accountsAddressHash',\n  'config'\n])\nconst saveSubsetFilterTransactionsDrago = createFilter('transactionsDrago', [\n  'holder',\n  'manager'\n])\n\n//   const saveSubsetBlacklistFilter = createBlacklistFilter(\n//     'endpoint',\n//     ['accounts']\n//   );\n\nconst persistConfig = {\n  key: 'rigoblock',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  whitelist: ['endpoint', 'app', 'user', 'transactionsDrago'],\n  transforms: [\n    saveSubsetFilterEndpoint,\n    saveSubsetFilterApp,\n    saveSubsetFilterTransactionsDrago\n    // saveSubsetFilterApp\n    // saveSubsetBlacklistFilter\n  ]\n}\nconst persistedReducer = persistReducer(persistConfig, Reducers.rootReducer)\n\nlet composeEnhancers\nif (process.env.NODE_ENV === `development`) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n} else {\n  composeEnhancers = compose\n}\n\n// TO DO: test batch action dispatch\n// const enhancer = compose(\n//   reduxBatch,\n//   applyMiddleware(...middlewares),\n//   reduxBatch\n// )\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares))\n\nlet store\nif (process.env.NODE_ENV !== 'development') {\n  console.log = noop\n  console.warn = noop\n  console.error = noop\n  Sentry.init({\n    dsn: 'https://b8304e9d588a477db619fbb026f31549@sentry.io/1329485',\n    environment: process.env.NODE_ENV,\n    release: 'webapp-v1@' + GIT_HASH\n  })\n}\n\nif (process.env.NODE_ENV === `development`) {\n  // Sentry.init({\n  //   dsn: 'https://b8304e9d588a477db619fbb026f31549@sentry.io/1329485',\n  //   environment: process.env.NODE_ENV\n  // })\n  store = Reactotron.createStore(persistedReducer, enhancer)\n} else {\n  store = createStore(persistedReducer, enhancer)\n}\n\nepicMiddleware.run(rootEpic)\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// if (process.env.NODE_ENV === 'development') {\n//   // registerServiceWorker()\n// }\n// unregister()\n\n// Hot Module Reload\nif (module.hot) {\n  module.hot.accept()\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n// By the Power of Grayskull! I Have the Power!\n\nimport * as TYPE_ from '../actions/const'\n\nexport const relayActionsMiddleWare = store => next => action => {\n  const state = store.getState()\n  if (TYPE_.CUSTOM_EXCHANGE_ACTIONS.includes(action.type)) {\n    action.type = `${state.exchange.selectedRelay.name.toUpperCase()}_${\n      action.type\n    }`\n  }\n  next(action)\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n// By the Power of Grayskull! I Have the Power!\n\nimport * as TYPE_ from '../actions/const'\nimport { notificationWrapper } from '../../_utils/notificationWrapper'\nimport serializeError from 'serialize-error'\nimport utils from '../../_utils/utils'\n\nexport const notificationsMiddleWare = store => next => action => {\n  // const state = store.getState()\n  const notificationEngine = notificationWrapper.getInstance()\n  if (action.type === TYPE_.QUEUE_ACCOUNT_NOTIFICATION) {\n    action.payload.forEach(notification => {\n      utils.notificationAccount(notificationEngine, notification, 'info')\n    })\n  }\n  if (action.type === TYPE_.QUEUE_ERROR_NOTIFICATION) {\n    utils.notificationError(\n      notificationEngine,\n      serializeError(action.payload),\n      'error'\n    )\n  }\n  if (action.type === TYPE_.QUEUE_WARNING_NOTIFICATION) {\n    utils.notificationError(\n      notificationEngine,\n      serializeError(action.payload),\n      'warning'\n    )\n  }\n  next(action)\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n// By the Power of Grayskull! I Have the Power!\n\nimport * as TYPE_ from '../actions/const'\nimport { Actions } from '../actions'\nimport BigNumber from 'bignumber.js'\nimport isFinite from 'lodash/isFinite'\nimport utils from '../../_utils/utils'\n\nexport const poolCalculateValueMiddleWare = store => next => action => {\n  if (action.type === TYPE_.TOKENS_TICKERS_UPDATE) {\n    const state = store.getState()\n    const { assets } = state.transactionsDrago.selectedDrago\n    let { current } = state.exchange.prices\n    const { details } = state.transactionsDrago.selectedDrago\n    current = { ...current, ...action.payload }\n    let portfolioValue = utils.calculatePortfolioValue(assets, current)\n    let estimatedPrice\n    if (new BigNumber(details.totalSupply).eq(0)) {\n      estimatedPrice = '0.0000'\n    } else {\n      estimatedPrice = new BigNumber(portfolioValue)\n        .plus(new BigNumber(details.dragoETHBalance))\n        .div(new BigNumber(details.totalSupply))\n        .toFixed(4)\n    }\n    portfolioValue = isFinite(Number(portfolioValue)) ? portfolioValue : '-'\n    estimatedPrice = isFinite(Number(estimatedPrice)) ? estimatedPrice : '-'\n    store.dispatch(\n      Actions.drago.updateDragoSelectedDetails({\n        values: {\n          portfolioValue,\n          estimatedPrice\n        }\n      })\n    )\n  }\n  next(action)\n}\n","import * as TYPE_ from '../actions/const'\nimport { Actions } from '../actions'\n\nexport const poolsCachingMiddleWare = store => next => action => {\n  if (action.type === TYPE_.DRAGO_SELECTED_DETAILS_UPDATE) {\n    // console.log(action)\n    if (typeof action.meta !== 'undefined') {\n      if (action.meta.updateCache) {\n        const state = store.getState()\n        const { selectedDrago } = state.transactionsDrago\n        let poolId\n        if (action.payload.details) {\n          poolId = action.payload.details.dragoId || action.payload.details.id\n        }\n        poolId =\n          typeof poolId !== 'undefined'\n            ? poolId\n            : selectedDrago.details.dragoId || selectedDrago.details.id\n        const cachePayload = {\n          payload: { ...action.payload },\n          meta: { poolId: poolId }\n        }\n        if (poolId)\n          store.dispatch(Actions.pools.writeItemPoolsList(cachePayload))\n      }\n    }\n  }\n  next(action)\n}\n","// Copyright 2016-2017 Rigo Investment Sagl.\n\nimport BigNumber from 'bignumber.js'\n\nconst DIVISOR = 10 ** 6\nconst ZERO = new BigNumber(0)\n\nexport const formatPriceOrderBook = price => {\n  const number = Number(price)\n  if (number < 1) {\n    return number.toFixed(7)\n  }\n  if (number < 100) {\n    return number.toFixed(4)\n  }\n  if (number < 1000) {\n    return number.toFixed(3)\n  }\n  if (number < 10000) {\n    return number.toFixed(2)\n  }\n  if (number < 100000) {\n    return number.toFixed(1)\n  }\n  return number.toFixed(4)\n}\n\nexport const formatPrice = price => {\n  const number = Number(price)\n  if (number < 100) {\n    return number.toFixed(4)\n  }\n  if (number < 1000) {\n    return number.toFixed(3)\n  }\n  if (number < 10000) {\n    return number.toFixed(2)\n  }\n  if (number < 100000) {\n    return number.toFixed(1)\n  }\n  return number.toFixed(4)\n}\n\nexport const formatPriceTrades = price => {\n  const number = Number(price)\n  if (number < 1) {\n    return number.toFixed(4)\n  }\n  if (number < 10) {\n    return number.toFixed(2)\n  }\n  if (number < 1000) {\n    return number.toFixed(1)\n  }\n  if (number < 10000) {\n    return number.toFixed(1)\n  }\n  if (number < 100000) {\n    return number.toFixed(1)\n  }\n  return number.toFixed(1)\n}\n\n/**\n * A unit amount is defined as the amount of a token above the specified decimal places (integer part).\n * E.g: If a currency has 18 decimal places, 1e18 or one quintillion of the currency is equivalent\n * to 1 unit.\n * @param   amount      The amount in baseUnits that you would like converted to units.\n * @param   decimals    The number of decimal places the unit amount has.\n * @return  The amount in units.\n */\nexport function toUnitAmount(amount, decimals) {\n  const aUnit = new BigNumber(10).pow(decimals)\n  const unit = new BigNumber(amount).div(aUnit)\n  return unit\n}\n/**\n * A baseUnit is defined as the smallest denomination of a token. An amount expressed in baseUnits\n * is the amount expressed in the smallest denomination.\n * E.g: 1 unit of a token with 18 decimal places is expressed in baseUnits as 1000000000000000000\n * @param   amount      The amount of units that you would like converted to baseUnits.\n * @param   decimals    The number of decimal places the unit amount has.\n * @return  The amount in baseUnits.\n */\nexport function toBaseUnitAmount(amount, decimals) {\n  const unit = new BigNumber(10).pow(decimals)\n  const baseUnitAmount = new BigNumber(amount).times(unit)\n  const hasDecimals = baseUnitAmount.decimalPlaces() !== 0\n  if (hasDecimals) {\n    throw new Error(\n      `Invalid unit amount: ${amount.toString()} - Too many decimal places`\n    )\n  }\n  return baseUnitAmount\n}\n\nexport function formatBlockNumber(blockNumber) {\n  return ZERO.eq(blockNumber || 0) ? 'Pending' : `#${blockNumber.toFormat()}`\n}\n\nexport function formatCoins(amount, decimals = 4) {\n  //prev. decimals = 6\n  // console.log(amount.toNumber())\n\n  const adjusted = new BigNumber(amount).div(DIVISOR)\n  if (decimals === -1) {\n    if (adjusted.gte(10000)) {\n      decimals = 0\n    } else if (adjusted.gte(1000)) {\n      decimals = 1\n    } else if (adjusted.gte(100)) {\n      decimals = 2\n    } else if (adjusted.gte(10)) {\n      decimals = 3\n    } else {\n      decimals = 4\n    }\n  }\n\n  return adjusted.toFormat(decimals)\n}\n\nexport function formatEth(eth, decimals = 4) {\n  return toUnitAmount(new BigNumber(eth), 18).toFormat(decimals)\n}\n\nexport function formatHash(hash) {\n  return `${hash.substr(0, 10)}...${hash.substr(-8)}`\n}\n\nexport function toHex(str) {\n  if (str && str.toString) {\n    str = str.toString(16)\n  }\n\n  if (str && str.substr(0, 2) === '0x') {\n    return str.toLowerCase()\n  }\n\n  return `0x${(str || '').toLowerCase()}`\n}\n","import moment from 'moment'\n\nexport const dateFromTimeStampHuman = timestamp => {\n  try {\n    let date = moment.unix(timestamp).format('D MMMM YYYY')\n    return date\n  } catch (error) {\n    console.warn(error)\n    return '-'\n  }\n}\n","import { formatCoins, formatEth } from '../format'\nimport BigNumber from 'bignumber.js'\nimport Web3 from 'web3'\n\nexport const logToEvent = (log, dragoSymbolRegistry) => {\n  const key = Web3.utils.sha3(JSON.stringify(log))\n\n  const {\n    address,\n    blockNumber,\n    event,\n    logIndex,\n    returnValues,\n    transactionHash,\n    transactionIndex\n  } = log\n\n  const hexToString = hex => {\n    let string = ''\n    for (let i = 0; i < hex.length; i += 2) {\n      string += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n    }\n    return string\n  }\n\n  // Getting the transaction amounts if it's a buy or sell event\n  let ethvalue,\n    drgvalue = 0\n\n  if (\n    typeof returnValues.amount !== 'undefined' &&\n    typeof returnValues.revenue !== 'undefined'\n  ) {\n    ethvalue =\n      event === 'BuyDrago' || event === 'BuyVault'\n        ? formatEth(returnValues.amount, null)\n        : formatEth(returnValues.revenue, null)\n    drgvalue =\n      event === 'SellDrago' || event === 'SellVault'\n        ? formatCoins(returnValues.amount, null)\n        : formatCoins(returnValues.revenue, null)\n  }\n  // Creating a map with list of dragos\n  if (\n    event === 'BuyDrago' ||\n    event === 'DragoCreated' ||\n    event === 'BuyVault' ||\n    event === 'VaultCreated'\n  ) {\n    let poolAddress = returnValues.drago || returnValues.vault\n    let data\n    if (returnValues.drago) {\n      data = {\n        symbol: returnValues.symbol,\n        vaultId: null,\n        name: null,\n        address: poolAddress\n      }\n    }\n    if (returnValues.vault) {\n      data = {\n        symbol: returnValues.symbol,\n        vaultId: null,\n        name: null,\n        address: poolAddress\n      }\n    }\n\n    if (!dragoSymbolRegistry.has(poolAddress)) {\n      dragoSymbolRegistry.set(poolAddress, data)\n    }\n  }\n  let symbol\n  if (typeof returnValues.symbol === 'string') {\n    '0x' === returnValues.symbol.substring(0, 2)\n      ? (symbol = hexToString(returnValues.symbol.substring(2)))\n      : (symbol = returnValues.symbol)\n  } else {\n    for (let i = 0; i < returnValues.symbol.length; ++i) {\n      symbol += String.fromCharCode(returnValues.symbol[i])\n    }\n  }\n  return {\n    address,\n    type: event,\n    blockNumber: new BigNumber(blockNumber),\n    logIndex,\n    transactionHash,\n    transactionIndex,\n    params: returnValues,\n    key,\n    ethvalue,\n    drgvalue,\n    symbol: symbol\n  }\n}\n","export * from './getBlockChunks'\nexport * from './logToEvent'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"sectionHeader_title__1oNhN\",\"drago\":\"sectionHeader_drago__1azEn\",\"vault\":\"sectionHeader_vault__23iKv\",\"container\":\"sectionHeader_container__3scrs\",\"actionButtonContainer\":\"sectionHeader_actionButtonContainer__29PtQ\",\"help\":\"sectionHeader_help__IVeyI\"};","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\n// kovan register address 0xfAb104398BBefbd47752E7702D9fE23047E1Bca3\n\nimport * as abis from '../contracts/abi'\nimport { PARITY_REGISTRY_ADDRESSES } from '../utils/const'\nimport { isMetamask } from './../utils/utils'\n\nclass Registry {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Registry')\n    }\n    this._api = api\n    this._constunctorName = this.constructor.name\n    this._getContractAddressFromRegister = this._getContractAddressFromRegister.bind(\n      this\n    )\n    this._getParityRegistryContractAddress = this._getParityRegistryContractAddress.bind(\n      this\n    )\n    this._isWeb3 = isMetamask(api)\n    this._isParity = typeof api._parity !== 'undefined' ? true : false\n    this._isInfura = () => {\n      if (typeof api.provider !== 'undefined') {\n        if (api.provider._url.includes('infura')) {\n          return true\n        }\n      } else {\n        return false\n      }\n    }\n  }\n\n  _getParityRegistryContractAddress = () => {\n    const api = this._api\n    // Checking if using Web3\n    // if (typeof api.version !== 'undefined') {\n    //   return api.eth.net.getId()\n    //     .then((id) => {\n    //       return PARITY_REGISTRY_ADDRESSES[id]\n    //     }\n    //     )\n    // }\n    // // Using Parity API\n    // return api.parity.chain()\n    //   .then((id) => {\n    //     return PARITY_REGISTRY_ADDRESSES[id]\n    //   }\n    //   )\n    return api.eth.net.getId().then(networkId => {\n      return PARITY_REGISTRY_ADDRESSES[networkId]\n    })\n  }\n\n  /**\n   * @param  {} contractName\n   */\n  _getContractAddressFromRegister = async contractName => {\n    const api = this._api\n    const parityRegistryContractAddress = await this._getParityRegistryContractAddress()\n    if (!contractName) {\n      throw new Error('contractName needs to be provided to Registry')\n    }\n    // console.log(`${this.constructor.name} -> Looking for contract: ${contractName}`)\n\n    // Checking if using Web3\n    if (typeof api.version !== 'undefined') {\n      const registryContract = new api.eth.Contract(abis.parityregister)\n      // console.log(`${this.constructor.name} -> Web3 detected.`)\n      // console.log(\n      //   `${\n      //     this.constructor.name\n      //   } -> Registry found at ${parityRegistryContractAddress}`\n      // )\n      registryContract.options.address = parityRegistryContractAddress\n      return Promise.all([\n        registryContract.methods\n          .getAddress(api.utils.sha3(contractName), 'A')\n          .call()\n      ]).then(address => {\n        // console.log(address)\n        return address[0]\n      })\n    }\n  }\n\n  /**\n   * @param  {} abi\n   * @param  {} contractName\n   */\n  instance = (abi, contractName) => {\n    if (!abi) {\n      throw new Error('Contract ABI needs to be provided to Registry')\n    }\n    if (!contractName) {\n      throw new Error('contractName needs to be provided to Registry')\n    }\n    const api = this._api\n    const contract = this._getContractAddressFromRegister(contractName).then(\n      address => {\n        // console.log(`${contractName} -> ${address}`)\n        if (address[0] === '0x0000000000000000000000000000000000000000') {\n          throw new Error('The contract address was not found in the Register.')\n        }\n        if (!api) {\n          throw new Error('API instance needs to be provided to Contract')\n        }\n        if (isMetamask(api)) {\n          // console.log(\n          //   `${\n          //     this.constructor.name\n          //   } -> Contract ${contractName} found at ${address}`\n          // )\n          return new api.eth.Contract(abi, address)\n        }\n        // console.log(\n        //   `${\n        //     this.constructor.name\n        //   } -> Contract ${contractName} found at ${address}`\n        // )\n        return api.newContract(abi, address)\n      }\n    )\n    return contract\n  }\n}\n\nexport default Registry\n","export const RELAY_CONNECT = 'RELAY_CONNECT'\nexport const RELAY_GET_CONFIG = 'RELAY_GET_CONFIG'\n","export const APP_STATUS_UPDATE = 'APP_STATUS_UPDATE'\nexport const APP_CONFIG_UPDATE = 'APP_CONFIG_UPDATE'\n","export const isMetamask = api => {\n  if (typeof api.version === 'undefined') {\n    return false\n  } else {\n    return true\n  }\n}\n","export const notificationWrapper = (function() {\n  let instance\n\n  return {\n    getInstance: function(notificatioInstance) {\n      if (!instance) {\n        if (notificatioInstance) {\n          // throw new Error('An instance must be provided.')\n        }\n        instance = notificatioInstance\n      }\n      return instance\n    }\n  }\n})()\n","export const PARITY_REGISTRY_KOVAN =\n  '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3'\nexport const PARITY_REGISTRY_MAINNET =\n  '0xe3389675d0338462dC76C6f9A3e432550c36A142'\nexport const PARITY_REGISTRY_ROPSTEN =\n  '0x81a4B044831C4F12bA601aDB9274516939e9B8a2'\nexport const GRG_ADDRESS_KV = '0x56B28058d303bc0475a34D439aa586307adAc1f5'\nexport const KOVAN = 'kovan'\nexport const KOVAN_ID = 42\nexport const ROPSTEN = 'ropsten'\nexport const ROPSTEN_ID = 3\nexport const MAINNET = 'mainnet'\nexport const MAINNET_ID = 1\n\nexport const MULTI_BALANCE_CONTRACT_ADDRESS = {\n  42: '0x5c25ac8f1c5168cc0bd194414d13e761a72cdb9e',\n  3: '0xd53bebaa2e65753453cb53efcc65ad23268d4dec',\n  1: '0x768e09703318e8514aaaabcf16d62b6ff6e9d706',\n  kovan: '0x5c25ac8f1c5168cc0bd194414d13e761a72cdb9e',\n  ropsten: '0xd53bebaa2e65753453cb53efcc65ad23268d4dec',\n  foundation: '0x768e09703318e8514aaaabcf16d62b6ff6e9d706'\n}\n\nexport const MULTI_POOL_DATA_CONTRACT_ADDRESS = {\n  42: '0xDB7Dbcb9d325138738DC9D0F0765089683350315',\n  3: '0x2Bce283a5264FE69E96B6F48C128650Df566406b',\n  1: '0xf43835E6c0E68268e3e95C903e85aAEa49e350e3',\n  kovan: '0xDB7Dbcb9d325138738DC9D0F0765089683350315',\n  ropsten: '0x2Bce283a5264FE69E96B6F48C128650Df566406b',\n  foundation: '0xf43835E6c0E68268e3e95C903e85aAEa49e350e3'\n}\n\nexport const PARITY_REGISTRY_ADDRESSES = {\n  42: '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3',\n  3: '0x81a4B044831C4F12bA601aDB9274516939e9B8a2',\n  1: '0xe3389675d0338462dC76C6f9A3e432550c36A142',\n  kovan: '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3',\n  ropsten: '0x81a4B044831C4F12bA601aDB9274516939e9B8a2',\n  foundation: '0xe3389675d0338462dC76C6f9A3e432550c36A142'\n}\n\nexport const RIGOTOKEN_ADDRESSES = {\n  42: '0x9F121AFBc98A7a133fbb31fE975205f39e8f08D2',\n  3: '0x6FA8590920c5966713b1a86916f7b0419411e474',\n  1: '0x4fbb350052bca5417566f188eb2ebce5b19bc964',\n  kovan: '0x9F121AFBc98A7a133fbb31fE975205f39e8f08D2',\n  ropsten: '0x6FA8590920c5966713b1a86916f7b0419411e474',\n  foundation: '0x4fbb350052bca5417566f188eb2ebce5b19bc964'\n}\n\n// console.log(global.baseContracts['WETH9'].address)\n\nexport const WETH_ADDRESSES = {\n  42: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  3: '0xA8E9Fa8f91e5Ae138C74648c9C304F1C75003A8D',\n  1: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  kovan: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  ropsten: '0xA8E9Fa8f91e5Ae138C74648c9C304F1C75003A8D',\n  foundation: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'\n}\n\nexport const ZRX_ADDRESSES = {\n  42: '0x6Ff6C0Ff1d68b964901F986d4C9FA3ac68346570',\n  3: '0xA8E9Fa8f91e5Ae138C74648c9C304F1C75003A8D',\n  1: '0xE41d2489571d322189246DaFA5ebDe1F4699F498',\n  kovan: '0x6Ff6C0Ff1d68b964901F986d4C9FA3ac68346570',\n  ropsten: '0xA8E9Fa8f91e5Ae138C74648c9C304F1C75003A8D',\n  foundation: '0xE41d2489571d322189246DaFA5ebDe1F4699F498'\n}\n\nexport const V2 = true\n\nexport const EXCHANGE = 'exchange2'\n// export const ENVENTFUL = 'eventful'\nexport const ETHUSD = 'ethusd'\n// export const DRAGOFACTORY = 'dragofactory'\n\nexport const DRAGOREGISTRY = 'dragoregistry-v2'\n\nexport const DRAGOEVENTFUL = 'dragoeventful-v2'\nexport const DRAGOFACTORY = 'dragofactory-v2'\nexport const VAULTEVENTFUL = 'vaulteventful-v2'\nexport const VAULTFACTORY = 'vaultfactory-v2'\nexport const RIGOTOKEN = 'rigotoken-v2'\n\nexport const SUPPORTED_NETWORKS = ['kovan', 'ropsten', 'mainnet']\n","export const EXCHANGE_PANEL_UI_PROPERTIES_UPDATE =\n  'EXCHANGE_PANEL_UI_PROPERTIES_UPDATE'\n","export const KOVAN = 'KOVAN'\nexport const ROPSTEN = 'ROPSTEN'\nexport const MAINNET = 'MAINNET'\n\nexport const INFURA = 'infura'\n\nexport const DRAGOEVENTFUL = 'dragoeventful-v2'\nexport const VAULTEVENTFUL = 'vaulteventful-v2'\n\nexport const CALL_TIMEOUT = 10000\nexport const RETRY_DELAY = 5000\n\nexport const PARITY_REGISTRY_ADDRESSES = {\n  42: '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3',\n  3: '0x81a4B044831C4F12bA601aDB9274516939e9B8a2',\n  1: '0xe3389675d0338462dC76C6f9A3e432550c36A142',\n  [KOVAN]: '0xfAb104398BBefbd47752E7702D9fE23047E1Bca3',\n  [ROPSTEN]: '0x81a4B044831C4F12bA601aDB9274516939e9B8a2',\n  [MAINNET]: '0xe3389675d0338462dC76C6f9A3e432550c36A142'\n}\n\nexport const RB_API = {\n  3: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n  1: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n  [ROPSTEN]: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n  [MAINNET]: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n}\n\nexport const EFX_EXCHANGE_CONTRACT = {\n  42: '0x35dD2932454449b14Cee11A94d3674a936d5d7b2', // EFX HOT WALLET 0x9faf5515f177F3A8a845D48C19032b33Cc54C09C\n  3: '0x1D8643aaE25841322ecdE826862A9FA922770981', // mock address\n  1: '0x4f833a24e1f95d70f028921e27040ca56e09ab0b',\n  [KOVAN]: '0x35dD2932454449b14Cee11A94d3674a936d5d7b2',\n  [ROPSTEN]: '0x1D8643aaE25841322ecdE826862A9FA922770981', // mock address\n  [MAINNET]: '0x4f833a24e1f95d70f028921e27040ca56e09ab0b'\n}\n\nexport const EFX_HOT_WALLET = {\n  42: '0x9faf5515f177F3A8a845D48C19032b33Cc54C09C',\n  3: '0x9faf5515f177F3A8a845D48C19032b33Cc54C09C', // mock address\n  1: '0x61b9898C9b60A159fC91ae8026563cd226B7a0C1',\n  [KOVAN]: '0x9faf5515f177F3A8a845D48C19032b33Cc54C09C',\n  [ROPSTEN]: '0x9faf5515f177F3A8a845D48C19032b33Cc54C09C', // mock address\n  [MAINNET]: '0x61b9898C9b60A159fC91ae8026563cd226B7a0C1'\n}\n\n// Parity - Kovan\nexport const EP_RIGOBLOCK_KV_DEV = 'https://kovan.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_KV_DEV_WS = 'wss://kovan.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_KV_PROD = 'https://kovan..dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_KV_PROD_WS = 'wss://kovan.dev.endpoint.network/ws'\n\n// Parity - Ropsten\nexport const EP_RIGOBLOCK_RP_DEV = 'https://ropsten.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_RP_DEV_WS = 'wss://ropsten.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_RP_PROD = 'https://ropsten.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_RP_PROD_WS = 'wss://ropsten.dev.endpoint.network/ws'\n\n// Parity - Mainnet\nexport const EP_RIGOBLOCK_MN_DEV = 'https://mainnet.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_MN_DEV_WS = 'wss://mainnet.dev.endpoint.network/ws'\nexport const EP_RIGOBLOCK_MN_PROD = 'https://mainnet.dev.endpoint.network/rpc'\nexport const EP_RIGOBLOCK_MN_PROD_WS = 'wss://mainnet.dev.endpoint.network/ws'\n\nexport const ENDPOINTS = {\n  infura: {\n    name: 'INFURA',\n    https: {\n      42: {\n        dev: 'https://kovan.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://kovan.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      3: {\n        dev: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://ropsten.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      1: {\n        dev: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'https://mainnet.infura.io/v3/dc30ca8fb7824f42976ece0e74884807'\n      }\n    },\n    wss: {\n      42: {\n        dev: 'wss://kovan.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://kovan.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      3: {\n        dev: 'wss://ropsten.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://ropsten.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      },\n      1: {\n        dev: 'wss://mainnet.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807',\n        prod: 'wss://mainnet.infura.io/ws/v3/dc30ca8fb7824f42976ece0e74884807'\n      }\n    }\n  },\n  rigoblock: {\n    name: 'rigoblock',\n    https: {\n      42: {\n        dev: EP_RIGOBLOCK_KV_DEV,\n        prod: EP_RIGOBLOCK_RP_PROD\n      },\n      3: {\n        dev: EP_RIGOBLOCK_RP_DEV,\n        prod: EP_RIGOBLOCK_RP_PROD\n      },\n      1: {\n        dev: EP_RIGOBLOCK_MN_DEV,\n        prod: EP_RIGOBLOCK_MN_PROD\n      }\n    },\n    wss: {\n      42: {\n        dev: EP_RIGOBLOCK_KV_DEV_WS,\n        prod: EP_RIGOBLOCK_KV_PROD_WS\n      },\n      3: {\n        dev: EP_RIGOBLOCK_RP_DEV_WS,\n        prod: EP_RIGOBLOCK_RP_PROD_WS\n      },\n      1: {\n        dev: EP_RIGOBLOCK_MN_DEV_WS,\n        prod: EP_RIGOBLOCK_MN_PROD_WS\n      }\n    }\n  },\n  local: {\n    name: 'local',\n    https: {\n      42: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      },\n      3: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      },\n      1: {\n        dev: 'http://localhost:8545',\n        prod: 'http://localhost:8545'\n      }\n    },\n    wss: {\n      42: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      },\n      3: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      },\n      1: {\n        dev: 'ws://localhost:8546',\n        prod: 'ws://localhost:8546'\n      }\n    }\n  }\n}\n","import * as CONSTANTS from '../utils/const'\nimport { Observable, defer, from } from 'rxjs'\nimport { delay, retryWhen, switchMap, tap } from 'rxjs/operators'\nimport exchangeEfxV0Abi from '../abis/exchange-efx-v0.json'\n\nconst exchangeEfxV0$ = (web3, networkId) => {\n  const efxEchangeContract = new web3.eth.Contract(\n    exchangeEfxV0Abi,\n    CONSTANTS.EFX_EXCHANGE_CONTRACT[networkId].toLowerCase()\n  )\n  let fromBlock\n\n  const retryStrategy = error$ =>\n    error$.pipe(\n      tap(err => {\n        console.error(err)\n\n      }),\n      delay(CONSTANTS.RETRY_DELAY)\n    )\n\n  return defer(() => from(web3.eth.getBlockNumber())).pipe(\n    tap(latestBlock => (fromBlock = latestBlock)),\n    switchMap(() =>\n      Observable.create(observer => {\n        const subscription = efxEchangeContract.events.allEvents(\n          {\n            fromBlock\n          },\n          (err, msg) => {\n            if (err) {\n              return observer.error(err)\n            }\n            fromBlock =\n              fromBlock > msg.blockNumber ? fromBlock : msg.blockNumber\n            return observer.next(msg)\n          }\n        )\n        return () => subscription.unsubscribe()\n      }).pipe(retryWhen(retryStrategy))\n    ),\n    retryWhen(retryStrategy)\n  )\n}\n\nexport default exchangeEfxV0$\n","import * as CONSTANTS from '../utils/const'\nimport { Observable, defer, from, merge, zip } from 'rxjs'\nimport { delay, map, retryWhen, switchMap, tap } from 'rxjs/operators'\nimport dragoeventfulAbi from '../abis/dragoEventful-v2.json'\nimport parityregisterAbi from '../abis/parityRegister.json'\nimport vaulteventfulAbi from '../abis/vaultEventful-v2.json'\n\nexport default (web3, networkId) => {\n  const parityRegistry = new web3.eth.Contract(\n    parityregisterAbi,\n    CONSTANTS.PARITY_REGISTRY_ADDRESSES[networkId]\n  )\n  let fromBlock\n\n  const getEventful$ = eventfulContract =>\n    Observable.create(observer => {\n      const subscription = eventfulContract.events.allEvents(\n        {\n          fromBlock\n        },\n        (err, msg) => {\n          if (err) {\n            return observer.error(err)\n          }\n          fromBlock = fromBlock > msg.blockNumber ? fromBlock : msg.blockNumber\n          return observer.next(msg)\n        }\n      )\n      return () => subscription.unsubscribe()\n    }).pipe()\n\n  const retryStrategy = error$ =>\n    error$.pipe(\n      tap(err => {\n        console.error(err.message)\n\n      }),\n      delay(4000)\n    )\n\n  return defer(() => from(web3.eth.getBlockNumber())).pipe(\n    tap(latestBlock => (fromBlock = latestBlock)),\n    switchMap(() =>\n      zip(\n        from(\n          parityRegistry.methods\n            .getAddress(web3.utils.sha3(CONSTANTS.DRAGOEVENTFUL), 'A')\n            .call()\n        ),\n        from(\n          parityRegistry.methods\n            .getAddress(web3.utils.sha3(CONSTANTS.VAULTEVENTFUL), 'A')\n            .call()\n        )\n      ).pipe(\n        map(([dragoEventfulAddress, vaultEventfulAddress]) => {\n          const dragoEventful = new web3.eth.Contract(\n            dragoeventfulAbi,\n            dragoEventfulAddress\n          )\n          const vaultEventful = new web3.eth.Contract(\n            vaulteventfulAbi,\n            vaultEventfulAddress\n          )\n          return [dragoEventful, vaultEventful]\n        }),\n        switchMap(([dragoEventful, vaultEventful]) =>\n          merge(getEventful$(dragoEventful), getEventful$(vaultEventful)).pipe(\n            retryWhen(retryStrategy)\n          )\n        )\n      )\n    ),\n    retryWhen(retryStrategy)\n  )\n}\n","import * as CONSTANTS from '../utils/const'\nimport { Observable, from, of } from 'rxjs'\nimport { catchError, concat, filter, map, timeout } from 'rxjs/operators'\n\nexport default (web3, networkId) => {\n  const etherscanApiUrl = CONSTANTS.RB_API[networkId]\n  const timeoutMs = 120000\n  const newBlock$ = Observable.create(observer => {\n    const subscription = web3.eth.subscribe('newBlockHeaders', (err, msg) =>\n      err ? observer.error(err) : observer.next(msg)\n    )\n    return () => subscription.unsubscribe()\n  })\n\n  const newBlockProxy$ = () =>\n    from(fetch(`${etherscanApiUrl}/blockNumber`).then(res => res.json())).pipe(\n      map(response => Number(response.result)),\n      catchError(() => of(false))\n    )\n\n  const subScription$ = source$ =>\n    source$.pipe(\n      timeout(timeoutMs),\n      catchError(() => newBlockProxy$().pipe(concat(subScription$(newBlock$))))\n    )\n  return subScription$(newBlock$).pipe(filter(val => !!val))\n}\n","import { CALL_TIMEOUT, RETRY_DELAY } from '../utils/const'\nimport { Observable, timer } from 'rxjs'\nimport { delay, exhaustMap, retryWhen } from 'rxjs/operators'\n\nconst defaultStatus = {\n  isConnected: false,\n  isSyncing: false,\n  syncStatus: {},\n  error: {}\n}\n\nexport default web3 => {\n  let connectionRetries = 0\n  return timer(0, 2000).pipe(\n    exhaustMap(() =>\n      Observable.create(async observer => {\n        const syncPromise = web3.eth.isSyncing()\n        const timeoutPromise = new Promise((resolve, reject) =>\n          setTimeout(\n            () => reject(new Error('Request timed out.')),\n            CALL_TIMEOUT\n          )\n        )\n        try {\n          const status = await Promise.race([syncPromise, timeoutPromise])\n          const nodeStatus = status\n            ? { ...defaultStatus, isConnected: true, isSyncing: true }\n            : { ...defaultStatus, isConnected: true }\n\n          connectionRetries = 0\n          observer.next(nodeStatus)\n          observer.complete()\n        } catch (e) {\n          connectionRetries++\n          observer.next({ ...defaultStatus, error: e, connectionRetries })\n          return observer.error(e)\n        }\n        return () => observer.complete()\n      })\n    ),\n    retryWhen(error$ => error$.pipe(delay(RETRY_DELAY)))\n  )\n}\n","import { ENDPOINTS, INFURA } from './utils/const'\nimport Web3 from 'web3'\nimport Web3WsProvider from './utils/reconnectingWsProvider'\nimport exchangeEfxV0$ from './observables/exchangeEfx'\nimport getEventful$ from './observables/eventful'\nimport newBlock from './observables/newBlock'\nimport nodeStatus$ from './observables/nodeStatus'\n\nclass Web3Wrapper {\n  web3 = null\n  instance = null\n\n  init(networkId, endpoint = INFURA, protocol = 'wss') {\n    const transport = ENDPOINTS[endpoint][protocol][networkId].prod\n    const provider = new Web3WsProvider(transport)\n    this.web3 = new Web3(provider)\n\n    return Object.assign(this.web3, {\n      rigoblock: {\n        ob: {\n          eventful$: getEventful$(this.web3, networkId),\n          exchangeEfxV0$: exchangeEfxV0$(this.web3, networkId),\n          nodeStatus$: nodeStatus$(this.web3),\n          newBlock$: newBlock(this.web3, networkId)\n        },\n        endpoint: transport\n      }\n    })\n  }\n\n  getInstance = (networkId, endpoint, protocol) => {\n    if (!this.instance) {\n      this.instance = this.init(networkId, endpoint, protocol)\n    }\n    return this.instance\n  }\n}\n\nexport default new Web3Wrapper()\n","import * as Colors from 'material-ui/styles/colors'\nimport { ListItem } from 'material-ui/List'\nimport Avatar from 'material-ui/Avatar'\nimport CloseIcon from 'material-ui/svg-icons/navigation/close'\nimport IconButton from 'material-ui/IconButton'\nimport IconMenu from 'material-ui/IconMenu'\nimport LinearProgress from 'material-ui/LinearProgress'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport Search from 'material-ui/svg-icons/action/search'\nimport styles from './elementNotification.module.css'\n\nconst transactionStyle = {\n  executed: {\n    backgroundColor: 'white',\n    // border: '1px solid',\n    borderRadius: '2px',\n    // borderColor: Colors.green100,\n    margin: '2px',\n    progressBar: {\n      color: Colors.green400,\n      backgroundColor: Colors.green100\n    }\n  },\n  authorization: {\n    backgroundColor: 'white',\n    // border: '1px solid',\n    borderRadius: '2px',\n    // borderColor: Colors.amber50,\n    margin: '2px',\n    progressBar: {\n      color: Colors.amber400,\n      backgroundColor: Colors.amber100\n    }\n  },\n  pending: {\n    backgroundColor: 'white',\n    // border: '1px solid',\n    borderRadius: '2px',\n    // borderColor: Colors.lightBlue100,\n    margin: '2px',\n    progressBar: {\n      color: Colors.lightBlue400,\n      backgroundColor: Colors.lightBlue100\n    }\n  },\n  error: {\n    backgroundColor: 'white',\n    // border: '1px solid',\n    borderRadius: '2px',\n    borderColor: Colors.red100,\n    margin: '2px',\n    progressBar: {\n      color: Colors.red400,\n      backgroundColor: Colors.red100\n    }\n  },\n  innerDiv: {\n    padding: '4px 8px 8px 72px'\n  }\n}\n\nexport default class ElementNotification extends Component {\n  static propTypes = {\n    // accountName: PropTypes.string.isRequired,\n    primaryText: PropTypes.string.isRequired,\n    secondaryText: PropTypes.array.isRequired,\n    eventType: PropTypes.string.isRequired,\n    eventStatus: PropTypes.string.isRequired,\n    txHash: PropTypes.string.isRequired,\n    networkName: PropTypes.string.isRequired,\n    removeNotification: PropTypes.func,\n    transactionKey: PropTypes.string\n  }\n\n  static defaultProps = {\n    networkName: '',\n    removeNotification: () => {},\n    transactionKey: ''\n  }\n\n  removeNotification = () => {\n    this.props.removeNotification(this.props.transactionKey)\n  }\n\n  etherscanLink = () => {\n    const { txHash } = this.props\n    const url =\n      this.props.networkName === 'mainnet'\n        ? 'https://etherscan.io/tx/' + txHash\n        : 'https://' + this.props.networkName + '.etherscan.io/tx/' + txHash\n    return (\n      <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n        <span />\n      </a>\n    )\n  }\n\n  transactionMenu = () => {\n    const { txHash } = this.props\n    const etherScanDisabled = txHash.length === 0 ? true : false\n    return (\n      <div className={styles.menu} key={this.props.transactionKey}>\n        <IconMenu\n          desktop={true}\n          iconButtonElement={\n            <IconButton>\n              <MoreVertIcon />\n            </IconButton>\n          }\n          anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n          targetOrigin={{ horizontal: 'right', vertical: 'top' }}\n          style={{ cursor: 'pointer', height: '20px' }}\n        >\n          <MenuItem\n            leftIcon={<Search />}\n            primaryText={'Etherscan'}\n            containerElement={this.etherscanLink()}\n            disabled={etherScanDisabled}\n          />\n          {/* <MenuItem primaryText=\"Receipt\" /> */}\n        </IconMenu>\n        <CloseIcon\n          style={{ cursor: 'pointer', height: '20px' }}\n          onClick={this.removeNotification}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const { primaryText, secondaryText, eventStatus } = this.props\n    const showProgressBar = ['pending', 'authorization']\n    return (\n      <div style={transactionStyle[eventStatus]}>\n        <ListItem\n          disabled={true}\n          primaryText={primaryText}\n          secondaryText={\n            <p>\n              {secondaryText[0]}\n              <br />\n              {secondaryText[1]}\n            </p>\n          }\n          leftAvatar={<Avatar src=\"img/ETH.svg\" />}\n          secondaryTextLines={2}\n          style={transactionStyle.innerDiv}\n        >\n          {this.props.networkName ? this.transactionMenu() : null}\n        </ListItem>\n        <div className={styles.progressBar}>\n          {showProgressBar.includes(eventStatus) ? (\n            <LinearProgress\n              color={transactionStyle[eventStatus].progressBar.color}\n              style={transactionStyle[eventStatus].progressBar}\n              mode=\"indeterminate\"\n            />\n          ) : (\n            <LinearProgress\n              color={transactionStyle[eventStatus].progressBar.color}\n              style={transactionStyle[eventStatus].progressBar}\n              mode=\"determinate\"\n              value={100}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingDiv\":\"elementAppLoading_loadingDiv__OlHcH\",\"logoImg\":\"elementAppLoading_logoImg__3uiWD\",\"divFullHeight\":\"elementAppLoading_divFullHeight__3-lTT\",\"warningText\":\"elementAppLoading_warningText__2QtYY\",\"titleRBModal\":\"elementAppLoading_titleRBModal__1XMbp\",\"titleRBHeader\":\"elementAppLoading_titleRBHeader__3QByC\",\"titleRBHeaderContainer\":\"elementAppLoading_titleRBHeaderContainer__1f4J-\",\"titlePrimaryText\":\"elementAppLoading_titlePrimaryText__21qm6\",\"titleSecondaryText\":\"elementAppLoading_titleSecondaryText__19ydq\",\"modalHeader\":\"elementAppLoading_modalHeader__FbJY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"elementTopBarAccountStatus_notifications__5pzvX\",\"notificationsPanel\":\"elementTopBarAccountStatus_notificationsPanel__3ziqH\",\"show\":\"elementTopBarAccountStatus_show__qE0Fu\",\"noShow\":\"elementTopBarAccountStatus_noShow__30QtB\",\"progressBar\":\"elementTopBarAccountStatus_progressBar__2FuXB\",\"noRecentTransactions\":\"elementTopBarAccountStatus_noRecentTransactions__2v3mz\",\"post\":\"elementTopBarAccountStatus_post__PihfA\",\"width500\":\"elementTopBarAccountStatus_width500__2OBS4\",\"width470\":\"elementTopBarAccountStatus_width470__oVPOa\",\"width110\":\"elementTopBarAccountStatus_width110__2FP8W\",\"width250\":\"elementTopBarAccountStatus_width250__k06mR\",\"line\":\"elementTopBarAccountStatus_line__2pBF_\",\"circle\":\"elementTopBarAccountStatus_circle__ZkTeH\",\"rect\":\"elementTopBarAccountStatus_rect__3nAKb\",\"pulse\":\"elementTopBarAccountStatus_pulse__3MUFJ\",\"wrapper\":\"elementTopBarAccountStatus_wrapper__1r2sa\",\"height20\":\"elementTopBarAccountStatus_height20__17ZjU\",\"noTransacationsMsg\":\"elementTopBarAccountStatus_noTransacationsMsg__3tOOt\"};","import Divider from 'material-ui/Divider'\nimport HelpIcon from '../../_atomic/atoms/helpIcon'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport classNames from 'classnames'\nimport styles from './sectionHeader.module.css'\n\nexport default class SectionHeader extends Component {\n  static propTypes = {\n    titleText: PropTypes.string.isRequired,\n    textStyle: PropTypes.object,\n    containerStyle: PropTypes.object,\n    help: PropTypes.bool,\n    helpText: PropTypes.string,\n    helpReadMoreLink: PropTypes.string,\n    fundType: PropTypes.string\n  }\n\n  static defaultProps = {\n    help: false,\n    helpText: '',\n    textStyle: { backgroundColor: '#054186' },\n    containerStyle: {},\n    helpReadMoreLink: '',\n    fundType: 'drago'\n  }\n\n  render() {\n    const helpIconStyle = {\n      height: '20px',\n      width: '20px',\n      color: 'white'\n    }\n\n    const renderHelp = () => {\n      return (\n        <div className={styles.help}>\n          <HelpIcon style={helpIconStyle} helpText={this.props.helpText} />\n        </div>\n      )\n    }\n\n    return (\n      <div className={styles.container} style={this.props.containerStyle}>\n        <div className={styles.actionButtonContainer}>\n          {this.props.actionButton}\n        </div>\n        <div\n          className={classNames(styles.title, styles[this.props.fundType])}\n          style={this.props.textStyle}\n        >\n          {this.props.help ? renderHelp() : null}\n          {this.props.titleText}\n        </div>\n        <Divider\n          style={{\n            ...this.props.textStyle\n          }}\n        />\n      </div>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"application_headline__Q9kSs\",\"tabs\":\"application_tabs__3sl9F\",\"tab\":\"application_tab__3KVYJ\",\"copyright\":\"application_copyright__3BB1C\",\"bottombar\":\"application_bottombar__1gwXD\",\"maincontainer\":\"application_maincontainer__2X7nm\",\"content\":\"application_content__1zKrq\",\"contentHomePages\":\"application_contentHomePages__2XkB8\",\"comingSoonBlur\":\"application_comingSoonBlur__26yn5\",\"fix\":\"application_fix__2uEQg\"};","export function toHex(str) {\n  if (str && str.toString) {\n    str = str.toString(16)\n  }\n\n  if (str && str.substr(0, 2) === '0x') {\n    return str.toLowerCase()\n  }\n\n  return `0x${(str || '').toLowerCase()}`\n}\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { DRAGOEVENTFUL } from '../../utils/const'\nimport { toHex } from '../../utils'\nimport Registry from '../registry'\n\nconst Web3 = require('web3')\n\nclass DragoEventfulParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragoeventful\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOEVENTFUL\n    this._contractAddres = ''\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  get abi() {\n    return this._abi\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return typeof this._instance !== 'undefined'\n      ? this._instance\n      : this._registry.instance(contractAbi, contractName).then(contract => {\n          this._instance = contract.instance\n          this._contract = contract\n          this._contractAddress = contract._address[0]\n          const hexSignature = this._contract._events.reduce(\n            (events, event) => {\n              events[event._name] = toHex(event._signature)\n              return events\n            },\n            {}\n          )\n          this._hexSignature = hexSignature\n          return this._instance\n        })\n  }\n\n  getAllLogs = (\n    options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n  ) => {\n    // console.log(options)\n    const contractAddress = this._contractAddress\n    const web3 = new Web3(this._api.provider._url)\n\n    const contractWeb3 = new web3.eth.Contract(\n      this._abi,\n      contractAddress.toLowerCase()\n    )\n    return contractWeb3\n      .getPastEvents('allEvents', {\n        fromBlock: options.fromBlock,\n        toBlock: options.toBlock,\n        topics: options.topics\n      })\n      .then(function(logs) {\n        return logs\n      })\n    // return this._api.eth.getLogs(options).then(function(logs) {\n    //   console.log(logs)\n    //   return contract.parseEventLogs(logs)\n    // })\n  }\n}\n\nexport default DragoEventfulParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { DRAGOFACTORY } from '../../utils/const'\nimport { toHex } from '../../utils'\nimport Registry from '../registry'\n\nclass DragoFactoryParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragofactory\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOFACTORY\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract.instance\n      this._contract = contract\n      const hexSignature = this._contract._events.reduce((events, event) => {\n        events[event._name] = toHex(event._signature)\n        return events\n      }, {})\n      this._hexSignature = hexSignature\n      return this._instance\n    })\n  }\n\n  createDrago = (dragoName, dragoSymbol, accountAddress) => {\n    if (!dragoName) {\n      throw new Error('dragoName needs to be provided')\n    }\n    if (!dragoSymbol) {\n      throw new Error('dragoSymbol needs to be provided')\n    }\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    const values = [dragoName.toLower(), dragoSymbol, accountAddress]\n    return instance.createDrago\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        return instance.createDrago.postTransaction(options, values)\n      })\n  }\n\n  getDragosByAddress = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.getDragosByAddress.call({}, [accountAddress.toLowerCase()])\n  }\n}\n\nexport default DragoFactoryParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { DRAGOFACTORY } from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoFactoryWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragofactory\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOFACTORY\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract\n      return this._instance\n    })\n  }\n\n  createDrago = (dragoName, dragoSymbol, accountAddress) => {\n    if (!dragoName) {\n      throw new Error('dragoName needs to be provided')\n    }\n    if (!dragoSymbol) {\n      throw new Error('dragoSymbol needs to be provided')\n    }\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    instance.options.from = accountAddress\n    return instance.methods\n      .createDrago(dragoName.toLowerCase(), dragoSymbol)\n      .estimateGas(options)\n      .then(function(gasAmount) {\n        instance.options.gas = gasAmount\n        return instance.methods\n          .createDrago(dragoName, dragoSymbol)\n          .send(options)\n          .then(receipt => {\n            return receipt\n          })\n      })\n  }\n\n  getDragosByAddress = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods\n      .getDragosByAddress(accountAddress.toLowerCase())\n      .call({})\n  }\n}\n\nexport default DragoFactoryWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { WETH_ADDRESSES, ZRX_ADDRESSES } from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.drago\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    if (!address) {\n      throw new Error('Contract address needs to be provided')\n    }\n    const api = this._api\n    const abi = this._abi\n    this._instance = api.newContract(abi, address).instance\n    return this._instance\n  }\n\n  getData = () => {\n    const instance = this._instance\n    return instance.getData.call({})\n  }\n\n  getAdminData = () => {\n    const instance = this._instance\n    return instance.getAdminData.call({})\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.balanceOf.call({}, [accountAddress])\n  }\n\n  getBalance = () => {\n    const api = this._api\n    const instance = this._instance\n    return api.eth.getBalance(instance.address)\n  }\n\n  getBalanceWETH = async () => {\n    const api = this._api\n    const instance = this._instance\n    const networkId = await api.eth.net.getId()\n    const wethInstance = api.newContract(abis.weth, WETH_ADDRESSES[networkId])\n      .instance\n    return wethInstance.balanceOf.call({}, [instance.address])\n  }\n\n  getBalanceZRX = async () => {\n    const api = this._api\n    const instance = this._instance\n    const networkId = await api.eth.net.getId()\n    const tokenInstance = api.newContract(abis.weth, ZRX_ADDRESSES[networkId])\n      .instance\n    return tokenInstance.balanceOf.call({}, [instance.address])\n  }\n\n  getPoolBalanceOnToken = tokenAddress => {\n    const api = this._api\n    const instance = this._instance\n    const tokenInstance = api.newContract(abis.erc20, tokenAddress).instance\n    return tokenInstance.balanceOf.call({}, [instance.address])\n  }\n\n  buyDrago = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress,\n      value: amount\n    }\n    return instance.buyDrago.estimateGas(options, []).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `Buy Drago: gas estimated as ${gasEstimate.toFixed(0)} setting to ${\n          options.gas\n        }`\n      )\n      return instance.buyDrago.postTransaction(options, [])\n      // .then((receipt) => {\n      //   return api.parity.checkRequest(receipt, [])\n      // })\n    })\n  }\n\n  cancelOrderCFDExchange = (accountAddress, exchangeAddress, cfd, tradeId) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress needs to be provided')\n    }\n    if (!cfd) {\n      throw new Error('cfd needs to be provided')\n    }\n    if (!tradeId) {\n      throw new Error('tradeId needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    const values = [accountAddress, exchangeAddress, cfd, tradeId]\n\n    return instance.cancelOrderCFDExchange\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        return instance.cancelOrderCFDExchange.postTransaction(options, values)\n      })\n      .catch(error => {\n        console.error('error', error)\n      })\n  }\n\n  depositToExchange = (accountAddress, exchangeAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    const values = [exchangeAddress, amount]\n\n    return instance.depositToExchange\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        return instance.depositToExchange.postTransaction(options, values)\n      })\n      .catch(error => {\n        console.error('error', error)\n      })\n  }\n\n  placeOrderCFDExchange = (\n    accountAddress,\n    exchangeAddress,\n    cfd,\n    is_stable,\n    adjustment,\n    stake\n  ) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress needs to be provided')\n    }\n    if (!cfd) {\n      throw new Error('cfd needs to be provided')\n    }\n    if (!is_stable) {\n      throw new Error('is_stable needs to be provided')\n    }\n    if (!adjustment) {\n      throw new Error('adjustment needs to be provided')\n    }\n    if (!stake) {\n      throw new Error('stake needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    const values = [\n      exchangeAddress,\n      exchangeAddress,\n      cfd,\n      is_stable,\n      adjustment,\n      stake\n    ]\n\n    return instance.depositToExchange\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        return instance.depositToExchange.postTransaction(options, values)\n      })\n      .catch(error => {\n        console.error('error', error)\n      })\n  }\n\n  sellDrago = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const values = [amount]\n    const options = {\n      from: accountAddress\n    }\n    return instance.sellDrago.estimateGas(options, values).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `Sell Drago: gas estimated as ${gasEstimate.toFixed(0)} setting to ${\n          options.gas\n        }.`\n      )\n      return instance.sellDrago.postTransaction(options, values)\n    })\n  }\n\n  setPrices = (accountAddress, buyPrice, sellPrice) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!buyPrice) {\n      throw new Error('buyPrice needs to be provided')\n    }\n    if (!sellPrice) {\n      throw new Error('sellPrice needs to be provided')\n    }\n    const api = this._api\n    const block = 1\n    const hash = api.utils.fromAscii('random')\n    const data = api.utils.fromAscii('random')\n    const buyPriceWei = api.utils.toWei(buyPrice, 'ether')\n    const sellPriceWei = api.utils.toWei(sellPrice, 'ether')\n    const instance = this._instance\n    const values = [sellPriceWei, buyPriceWei, block, hash, data]\n    const options = {\n      from: accountAddress\n    }\n    return instance.setPrices.estimateGas(options, values).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `setPrices Drago: gas estimated as ${gasEstimate.toFixed(\n          0\n        )} setting to ${options.gas}. Setting values: ${values}`\n      )\n      return instance.setPrices.postTransaction(options, values)\n    })\n  }\n\n  totalSupply = () => {\n    const instance = this._instance\n    return instance.totalSupply.call({}, [])\n  }\n\n  // getTokenBalance = tokenAddress => {\n  //   const api = this._api\n  //   const instance = this._instance\n  //   const erc20Instance = api.newContract(abis.erc20, tokenAddress).instance\n  //   return erc20Instance.balanceOf.call({}, [instance.address])\n  // }\n\n  getAssets = () => {}\n}\n\nexport default DragoParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { DRAGOREGISTRY } from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoRegistryParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragoregistry\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOREGISTRY\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract.instance\n      this._contract = contract\n      return contract\n    })\n  }\n\n  fromId = dragoID => {\n    if (!dragoID) {\n      throw new Error('DragoID needs to be provided to drago')\n    }\n    const instance = this._instance\n    return Promise.all([instance.fromId.call({}, [dragoID])])\n  }\n\n  fromAddress = dragoAddress => {\n    if (!dragoAddress) {\n      throw new Error(`dragoAddress needs to be provided to drago`)\n    }\n    const instance = this._instance\n    return instance.fromAddress.call({}, [dragoAddress])\n  }\n}\n\nexport default DragoRegistryParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport {\n  DRAGOREGISTRY,\n  MULTI_POOL_DATA_CONTRACT_ADDRESS\n} from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoRegistryWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragoregistry\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOREGISTRY\n    this._contractAddress = ''\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract\n      this._contractAddress = contract._address\n      return this._instance\n    })\n  }\n\n  fromId = dragoID => {\n    if (!dragoID) {\n      throw new Error('DragoID needs to be provided to fromId')\n    }\n    const instance = this._instance\n    return Promise.all([instance.methods.fromId(dragoID).call({})])\n  }\n\n  fromAddress = dragoAddress => {\n    if (!dragoAddress) {\n      throw new Error(`dragoAddress needs to be provided to fromAddress`)\n    }\n    const instance = this._instance\n    return instance.methods.fromAddress(dragoAddress).call({})\n  }\n\n  queryMultiDataFromId = async poolsIdArray => {\n    if (!Array.isArray(poolsIdArray)) {\n      throw new Error('poolsIdArray needs to be an array of token addresses')\n    }\n    const api = this._api\n    const networkId = await api.eth.net.getId()\n    const getMultiPoolsDataInstance = new api.eth.Contract(\n      abis.getMultiPoolsData,\n      MULTI_POOL_DATA_CONTRACT_ADDRESS[networkId]\n    )\n    return getMultiPoolsDataInstance.methods\n      .queryMultiDataFromId(this._contractAddress, poolsIdArray)\n      .call({})\n  }\n}\n\nexport default DragoRegistryWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nclass EtherParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._constunctorName = this.constructor.name\n  }\n\n  transfer = (fromAddress, toAddress, amount) => {\n    if (!fromAddress) {\n      throw new Error('fromAddress needs to be provided')\n    }\n    if (!toAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const options = {\n      from: fromAddress,\n      to: toAddress,\n      value: amount\n    }\n\n    return this._api.eth.sendTransaction(options)\n  }\n}\n\nexport default EtherParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nclass EtherWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._constunctorName = this.constructor.name\n  }\n\n  transfer = (fromAddress, toAddress, amount) => {\n    if (!fromAddress) {\n      throw new Error('fromAddress needs to be provided')\n    }\n    if (!toAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const options = {\n      from: fromAddress,\n      to: toAddress,\n      value: amount.toString()\n    }\n    return this._api.eth.sendTransaction(options)\n  }\n}\n\nexport default EtherWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { ETHUSD } from '../../utils/const'\nimport Registry from '../registry'\n\nclass EthusdParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.ethusd\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = ETHUSD\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract.instance\n      this._contract = contract\n      return contract\n    })\n  }\n}\n\nexport default EthusdParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport Registry from '../registry'\n\nclass FundProxyWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.fundproxy\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = () => {\n    const api = this._api\n    const abi = this._abi\n\n    const address = api._rb.network.fundProxyContractAddress\n    this._instance = new api.eth.Contract(abi)\n    this._instance.options.address = address\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods.balanceOf(accountAddress).call({})\n  }\n\n  unwrapETH = (fromAddress, amount) => {\n    if (!fromAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: fromAddress\n    }\n\n    return instance.methods\n      .unwrapEth(amount)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.unwrapEth(amount).send(options)\n      })\n  }\n\n  wrapETH = (fromAddress, amount) => {\n    if (!fromAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: fromAddress\n    }\n\n    return instance.methods\n      .wrapEth(amount)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.wrapEth(amount).send(options)\n      })\n  }\n}\n\nexport default FundProxyWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { EXCHANGE } from '../../utils/const'\nimport { toHex } from '../../utils'\nimport Registry from '../registry'\n\nclass exchangeParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.exchange\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = EXCHANGE\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract.instance\n      this._contract = contract\n      const hexSignature = this._contract._events.reduce((events, event) => {\n        events[event._name] = toHex(event._signature)\n        return events\n      }, {})\n      this._hexSignature = hexSignature\n      return this._instance\n    })\n  }\n\n  balanceOf = (tokenAddress, accountAddress) => {\n    if (!tokenAddress) {\n      throw new Error('tokenAddress needs to be provided')\n    }\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.balanceOf\n      .call({}, [tokenAddress, accountAddress])\n      .catch(error => {\n        console.error('error', error)\n      })\n  }\n}\n\nexport default exchangeParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport Registry from '../registry'\n\nclass RigoTokenFaucetParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.rigotokenfaucet\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    const api = this._api\n    const abi = this._abi\n    this._instance = api.newContract(abi, address).instance\n    return this._instance\n  }\n\n  drip1Token = fromAddress => {\n    if (!fromAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    const values = []\n    const options = {\n      from: fromAddress\n    }\n    return instance.drip1Token\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n\n        return instance.drip1Token.postTransaction(options, values)\n      })\n  }\n}\n\nexport default RigoTokenFaucetParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport Registry from '../registry'\n\nclass RigoTokenFaucetWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.rigotokenfaucet\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    if (!address) {\n      throw new Error('address needs to be provided')\n    }\n    const api = this._api\n    const abi = this._abi\n    this._instance = new api.eth.Contract(abi)\n    this._instance.options.address = address\n    return this._instance\n  }\n\n  drip1Token = fromAddress => {\n    const instance = this._instance\n    let options = {\n      from: fromAddress\n    }\n\n    return instance.methods\n      .drip1Token()\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.drip1Token().send(options)\n      })\n  }\n}\n\nexport default RigoTokenFaucetWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { RIGOTOKEN_ADDRESSES } from '../../utils/const'\nimport Registry from '../registry'\n\nclass RigoTokenParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.rigotoken\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = () => {\n    const api = this._api\n    const abi = this._abi\n    const address = RIGOTOKEN_ADDRESSES[api._rb.network.id]\n    this._instance = api.newContract(abi, address).instance\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.balanceOf.call({}, [accountAddress])\n  }\n\n  transfer = (fromAddress, toAddress, amount) => {\n    if (!fromAddress) {\n      throw new Error('fromAddress needs to be provided')\n    }\n    if (!toAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const values = [toAddress, amount]\n    const options = {\n      from: fromAddress\n    }\n    return instance.transfer.estimateGas(options, values).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `Transfer GRG: gas estimated as ${gasEstimate.toFixed(0)} setting to ${\n          options.gas\n        }`\n      )\n      return instance.transfer.postTransaction(options, values)\n    })\n  }\n}\n\nexport default RigoTokenParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { RIGOTOKEN_ADDRESSES } from '../../utils/const'\nimport { bigNumberify } from 'ethers/utils/bignumber'\nimport { hexlify } from 'ethers/utils/bytes'\nimport BigNumber from 'bignumber.js'\nimport Registry from '../registry'\n\nclass RigoTokenWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.rigotoken\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = async () => {\n    const api = this._api\n    const abi = this._abi\n    const networkId = await api.eth.net.getId()\n    const address = RIGOTOKEN_ADDRESSES[networkId]\n    this._instance = new api.eth.Contract(abi)\n    this._instance.options.address = address\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods.balanceOf(accountAddress).call({})\n  }\n\n  transfer = (fromAddress, toAddress, amount) => {\n    if (!toAddress) {\n      throw new Error('toAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: fromAddress\n    }\n\n    if (BigNumber.isBigNumber(amount)) {\n      amount = '0x' + new BigNumber(amount).toString(16)\n    }\n    amount = hexlify(bigNumberify(amount))\n    return instance.methods\n      .transfer(toAddress, amount)\n      .estimateGas(options)\n      .then(gasEstimate => {\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.transfer(toAddress, amount).send(options)\n      })\n  }\n}\n\nexport default RigoTokenWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport Registry from '../registry'\n\nclass TokenWrapperParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.tokenWrapper\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    const api = this._api\n    const abi = this._abi\n    this._instance = api.newContract(abi, address).instance\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.balanceOf.call({}, [accountAddress])\n  }\n\n  depositLock = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.depositLock.call({}, [accountAddress])\n  }\n}\n\nexport default TokenWrapperParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport BigNumber from 'bignumber.js'\nimport Registry from '../registry'\n\nclass TokenWrapperWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.tokenWrapper\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    const api = this._api\n    const abi = this._abi\n    this._instance = new api.eth.Contract(abi, address)\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods\n      .balanceOf(accountAddress)\n      .call({})\n      .then(result => new BigNumber(result))\n  }\n\n  depositLock = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods\n      .depositLock(accountAddress)\n      .call({})\n      .then(result => new BigNumber(result))\n  }\n}\n\nexport default TokenWrapperWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { VAULTEVENTFUL } from '../../utils/const'\nimport { toHex } from '../../utils'\nimport Registry from '../registry'\n\nconst Web3 = require('web3')\n\nclass VaultEventfulParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vaulteventful\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = VAULTEVENTFUL\n    this._contractAddres = ''\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  get abi() {\n    return this._abi\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return typeof this._instance !== 'undefined'\n      ? this._instance\n      : this._registry.instance(contractAbi, contractName).then(contract => {\n          this._instance = contract.instance\n          this._contract = contract\n          this._contractAddress = contract._address[0]\n          const hexSignature = this._contract._events.reduce(\n            (events, event) => {\n              events[event._name] = toHex(event._signature)\n              return events\n            },\n            {}\n          )\n          this._hexSignature = hexSignature\n          return this._instance\n        })\n  }\n\n  getAllLogs = (\n    options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n  ) => {\n    // console.log(options)\n    const contractAddress = this._contractAddress\n    const web3 = new Web3(this._api.provider._url)\n\n    const contractWeb3 = new web3.eth.Contract(\n      this._abi,\n      contractAddress.toLowerCase()\n    )\n    return contractWeb3\n      .getPastEvents('allEvents', {\n        fromBlock: options.fromBlock,\n        toBlock: options.toBlock,\n        topics: options.topics\n      })\n      .then(function(logs) {\n        return logs\n      })\n    // return this._api.eth.getLogs(options).then(function(logs) {\n    //   return contract.parseEventLogs(logs)\n    // })\n  }\n}\n\nexport default VaultEventfulParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { VAULTFACTORY } from '../../utils/const'\nimport { toHex } from '../../utils'\nimport Registry from '../registry'\n\nclass VaultFactoryParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vaultfactory\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = VAULTFACTORY\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract.instance\n      this._contract = contract\n      const hexSignature = this._contract._events.reduce((events, event) => {\n        events[event._name] = toHex(event._signature)\n        return events\n      }, {})\n      this._hexSignature = hexSignature\n      return this._instance\n    })\n  }\n\n  createVault = (vaultName, vaultSymbol, accountAddress) => {\n    if (!vaultName) {\n      throw new Error('vaultName needs to be provided')\n    }\n    if (!vaultSymbol) {\n      throw new Error('vaultSymbol needs to be provided')\n    }\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    const values = [vaultName, vaultSymbol, accountAddress]\n    return instance.createVault\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        return instance.createVault.postTransaction(options, values)\n      })\n  }\n\n  getVaultsByAddress = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.getVaultsByAddress.call({}, [accountAddress.toLowerCase()])\n  }\n}\n\nexport default VaultFactoryParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { VAULTFACTORY } from '../../utils/const'\nimport Registry from '../registry'\n\nclass VaultFactoryWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vaultfactory\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = VAULTFACTORY\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  init = () => {\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return this._registry.instance(contractAbi, contractName).then(contract => {\n      this._instance = contract\n      return this._instance\n    })\n  }\n\n  createVault = (vaultName, vaultSymbol, accountAddress) => {\n    if (!vaultName) {\n      throw new Error('vaultName needs to be provided')\n    }\n    if (!vaultSymbol) {\n      throw new Error('vaultSymbol needs to be provided')\n    }\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n\n    instance.options.from = accountAddress\n    return instance.methods\n      .createVault(vaultName, vaultSymbol)\n      .estimateGas(options)\n      .then(function(gasAmount) {\n        instance.options.gas = gasAmount\n        return instance.methods\n          .createVault(vaultName, vaultSymbol)\n          .send(options)\n          .then(receipt => {\n            return receipt\n          })\n      })\n  }\n\n  getVaultsByAddress = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods\n      .getVaultsByAddress(accountAddress.toLowerCase())\n      .call({})\n  }\n}\n\nexport default VaultFactoryWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { WETH_ADDRESSES } from '../../utils/const'\nimport Registry from '../registry'\n\nclass VaultParity {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vault\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    if (!address) {\n      throw new Error('Contract address needs to be provided')\n    }\n    const api = this._api\n    const abi = this._abi\n    this._instance = api.newContract(abi, address).instance\n    return this._instance\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.balanceOf.call({}, [accountAddress])\n  }\n\n  getBalance = () => {\n    const api = this._api\n    const instance = this._instance\n    return api.eth.getBalance(instance.address)\n  }\n\n  getBalanceWETH = async () => {\n    const api = this._api\n    const instance = this._instance\n    const networkId = await api.eth.net.getId()\n    const wethInstance = api.newContract(abis.weth, WETH_ADDRESSES[networkId])\n      .instance\n    return wethInstance.balanceOf.call({}, [instance.address])\n  }\n\n  getData = () => {\n    const instance = this._instance\n    return instance.getData.call({})\n  }\n\n  buyVault = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const options = {\n      from: accountAddress,\n      value: amount\n    }\n    // return instance.buyVault.postTransaction(options, [])\n    return instance.buyVault.estimateGas(options, []).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `Buy Vault: gas estimated as ${gasEstimate.toFixed(0)} setting to ${\n          options.gas\n        }`\n      )\n      return instance.buyVault.postTransaction(options, [])\n    })\n  }\n\n  getPrice = () => {\n    const instance = this._instance\n    return instance.getPrice.call({})\n  }\n\n  getAdminData = () => {\n    const instance = this._instance\n    return instance.getAdminData.call({})\n  }\n\n  getTokenBalance = tokenAddress => {\n    const api = this._api\n    const instance = this._instance\n    const erc20Instance = api.newContract(abis.erc20, tokenAddress).instance\n    return erc20Instance.balanceOf.call({}, [instance.address])\n  }\n\n  sellVault = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const values = [amount]\n    const options = {\n      from: accountAddress\n    }\n    return instance.sellVault.estimateGas(options, values).then(gasEstimate => {\n      options.gas = gasEstimate.times(1.2).toFixed(0)\n      console.log(\n        `Sell Vault: gas estimated as ${gasEstimate.toFixed(0)} setting to ${\n          options.gas\n        }.`\n      )\n      return instance.sellVault.postTransaction(options, values)\n    })\n  }\n\n  setTransactionFee = (accountAddress, price) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!price) {\n      throw new Error('price needs to be provided')\n    }\n    const basisPoints = (price * 100).toFixed(0)\n    const values = [basisPoints]\n    const instance = this._instance\n    const options = {\n      from: accountAddress\n    }\n    return instance.setTransactionFee\n      .estimateGas(options, values)\n      .then(gasEstimate => {\n        options.gas = gasEstimate.times(1.2).toFixed(0)\n        console.log(\n          `setTransactionFee Vault: gas estimated as ${gasEstimate.toFixed(\n            0\n          )} setting to ${options.gas}. Setting values: ${values}`\n        )\n        return instance.setTransactionFee.postTransaction(options, values)\n      })\n  }\n\n  totalSupply = () => {\n    const instance = this._instance\n    return instance.totalSupply.call({}, [])\n  }\n}\n\nexport default VaultParity\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport Registry from '../registry'\n\nclass DragoWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vault\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    if (!address) {\n      throw new Error('Contract address needs to be provided')\n    }\n    const api = this._api\n    const abi = this._abi\n    this._instance = new api.eth.Contract(abi)\n    this._instance.options.address = address\n  }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods.balanceOf(accountAddress).call({})\n  }\n\n  getData = () => {\n    const instance = this._instance\n    return instance.methods.getData().call({})\n  }\n\n  getAdminData = () => {\n    const instance = this._instance\n    return instance.methods.getAdminData().call({})\n  }\n\n  getBalance = () => {\n    const api = this._api\n    const instance = this._instance\n    return api.eth.getBalance(instance._address)\n  }\n\n  buyVault = (accountAddress, amount) => {\n    const instance = this._instance\n    let options = {\n      from: accountAddress,\n      value: amount\n    }\n    return instance.methods\n      .buyVault()\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.buyVault().send(options)\n      })\n  }\n\n  sellVault = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    let options = {\n      from: accountAddress\n    }\n\n    return instance.methods\n      .sellVault(amount)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.sellVault(amount).send(options)\n      })\n  }\n\n  setTransactionFee = (accountAddress, price) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!price) {\n      throw new Error('price needs to be provided')\n    }\n    const instance = this._instance\n    let options = {\n      from: accountAddress\n    }\n    instance.options.from = accountAddress\n    // console.log(price)\n    const basisPoints = (price * 100).toFixed(0)\n    // console.log(basisPoints)\n    return instance.methods\n      .setTransactionFee(basisPoints)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        // console.log(gasEstimate.toFormat())\n        options.gas = gasEstimate\n\n        return instance.methods.setTransactionFee(basisPoints).send(options)\n      })\n      .catch(error => {\n        console.error('error', error)\n      })\n  }\n\n  totalSupply = () => {\n    const instance = this._instance\n    return instance.methods.totalSupply().call({})\n  }\n}\n\nexport default DragoWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport Contracts from './contracts'\n\nexport default Contracts\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport DragoEventfulParity from './Parity/dragoEventful'\nimport DragoEventfulWeb3 from './Web3/dragoEventful'\nimport DragoFactoryParity from './Parity/dragoFactory'\nimport DragoFactoryWeb3 from './Web3/dragoFactory'\nimport DragoParity from './Parity/drago'\nimport DragoRegistryParity from './Parity/dragoRegistry'\nimport DragoRegistryWeb3 from './Web3/dragoRegistry'\nimport DragoWeb3 from './Web3/drago'\nimport EtherParity from './Parity/ether'\nimport EtherWeb3 from './Web3/ether'\nimport EthusdParity from './Parity/ethusd'\nimport FundProxyWeb3 from './Web3/fundProxy'\n// import FundProxyParity from './Parity/fundProxy'\nimport { isMetamask } from './../utils/utils'\nimport ExchangeParity from './Parity/exchange'\nimport RegistryParity from './registry'\nimport RigoTokenFaucetParity from './Parity/rigoTokenFaucet'\nimport RigoTokenFaucetWeb3 from './Web3/rigoTokenFaucet'\nimport RigoTokenParity from './Parity/rigoToken'\nimport RigoTokenWeb3 from './Web3/rigoToken'\nimport TokenWrapperParity from './Parity/tokenWrapper'\nimport TokenWrapperWeb3 from './Web3/tokenWrapper'\nimport VaultEventfulParity from './Parity/vaultEventful'\nimport VaultEventfulWeb3 from './Web3/vaultEventful'\nimport VaultFactoryParity from './Parity/vaultFactory'\nimport VaultFactoryWeb3 from './Web3/vaultFactory'\nimport VaultParity from './Parity/vault'\nimport VaultWeb3 from './Web3/vault'\n\nclass Contract {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    if (isMetamask(api)) {\n      this._drago = new DragoWeb3(api)\n      this._dragoeventful = new DragoEventfulWeb3(api)\n      this._dragofactory = new DragoFactoryWeb3(api)\n      this._dragoregistry = new DragoRegistryWeb3(api)\n      this._ether = new EtherWeb3(api)\n      this._vault = new VaultWeb3(api)\n      this._vaulteventful = new VaultEventfulWeb3(api)\n      this._vaultfactory = new VaultFactoryWeb3(api)\n      this._rigotoken = new RigoTokenWeb3(api)\n      this._rigotokenfaucet = new RigoTokenFaucetWeb3(api)\n      this._tokenwrapper = new TokenWrapperWeb3(api)\n      this._fundproxy = new FundProxyWeb3(api)\n    } else {\n      this._drago = new DragoParity(api)\n      this._dragoeventful = new DragoEventfulParity(api)\n      this._dragofactory = new DragoFactoryParity(api)\n      this._dragoregistry = new DragoRegistryParity(api)\n      this._ethusd = new EthusdParity(api)\n      this._ether = new EtherParity(api)\n      this._exchange = new ExchangeParity(api)\n      this._registry = new RegistryParity(api)\n      this._rigotoken = new RigoTokenParity(api)\n      this._rigotokenfaucet = new RigoTokenFaucetParity(api)\n      this._tokenwrapper = new TokenWrapperParity(api)\n      // this._fundproxy = new RigoTokenParity(api)\n      this._vault = new VaultParity(api)\n      this._vaulteventful = new VaultEventfulParity(api)\n      this._vaultfactory = new VaultFactoryParity(api)\n    }\n  }\n\n  get dragoregistry() {\n    return this._dragoregistry\n  }\n\n  get drago() {\n    return this._drago\n  }\n\n  get dragofactory() {\n    return this._dragofactory\n  }\n\n  get ethusd() {\n    return this._ethusd\n  }\n\n  get dragoeventful() {\n    return this._dragoeventful\n    // return typeof this._dragoeventful !== 'undefined'\n    //   ? this._dragoeventful\n    //   : this._dragoeventful\n  }\n\n  get vaulteventful() {\n    return this._vaulteventful\n    // return typeof this._vaulteventful !== 'undefined'\n    //   ? this._vaulteventful\n    //   : this._vaulteventful\n  }\n\n  get ether() {\n    return this._ether\n  }\n\n  get exchange() {\n    return this._exchange\n  }\n\n  get fundproxy() {\n    return this._fundproxy\n  }\n\n  get registry() {\n    return this._registry\n  }\n\n  get rigotoken() {\n    return this._rigotoken\n  }\n\n  get rigotokenfaucet() {\n    return this._rigotokenfaucet\n  }\n\n  get tokenwrapper() {\n    return this._tokenwrapper\n  }\n\n  get vaultfactory() {\n    return this._vaultfactory\n  }\n\n  get vault() {\n    return this._vault\n  }\n}\n\nexport default Contract\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport Contracts from './pools'\n\nclass PoolsApi {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._contract = new Contracts(api)\n  }\n\n  get contract() {\n    return this._contract\n  }\n}\n\nexport default PoolsApi\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport PoolsApi from './api'\n\nexport default PoolsApi\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"elementNotification_progressBar__1tcis\",\"menu\":\"elementNotification_menu__1_WIS\",\"post\":\"elementNotification_post__ayRHE\",\"width500\":\"elementNotification_width500__2qUyD\",\"width470\":\"elementNotification_width470__2wb6c\",\"width110\":\"elementNotification_width110__MPS15\",\"width250\":\"elementNotification_width250__3Szml\",\"line\":\"elementNotification_line__3eJRm\",\"circle\":\"elementNotification_circle__1Eax3\",\"rect\":\"elementNotification_rect__sLG25\",\"pulse\":\"elementNotification_pulse__1_nNt\",\"wrapper\":\"elementNotification_wrapper__ccrF2\",\"height20\":\"elementNotification_height20__3zKNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBarButton\":\"topMenuLinkLong_topBarButton__2a8jw\",\"topBarButtonSelected\":\"topMenuLinkLong_topBarButtonSelected__1nPva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoImg\":\"elementNotConnected_logoImg__1gx-o\",\"warningText\":\"elementNotConnected_warningText__3PIIK\",\"paperContainer\":\"elementNotConnected_paperContainer__3Ux6s\",\"detailsBoxContainer\":\"elementNotConnected_detailsBoxContainer__3UimH\",\"fadein\":\"elementNotConnected_fadein__2_ftu\",\"detailsSectionContainer\":\"elementNotConnected_detailsSectionContainer__1LBn8\",\"sectionParagraph\":\"elementNotConnected_sectionParagraph__SmQb9\",\"titleRBModal\":\"elementNotConnected_titleRBModal__EFfUf\",\"titleRBHeader\":\"elementNotConnected_titleRBHeader__jOYvW\",\"titleRBHeaderContainer\":\"elementNotConnected_titleRBHeaderContainer__2rTDL\",\"titlePrimaryText\":\"elementNotConnected_titlePrimaryText__rCMw5\",\"titleSecondaryText\":\"elementNotConnected_titleSecondaryText__3kmsS\",\"modalHeader\":\"elementNotConnected_modalHeader__3UOT7\"};","import Avatar from 'material-ui/Avatar'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nclass TokenAvatar extends React.Component {\n  static propTypes = {\n    size: PropTypes.number.isRequired,\n    tokenSymbol: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    size: 22,\n    tokenSymbol: 'ETH'\n  }\n\n  render() {\n    const { size, tokenSymbol } = this.props\n    let imgSrc\n    switch (tokenSymbol) {\n      case 'ETH':\n        imgSrc = '/img/ethereum-black-64x64.png'\n        break\n      case 'GRG':\n        imgSrc = '/img/Logo-RigoblockRGB-OUT-02.png'\n        break\n      default:\n        imgSrc = '/img/ethereum-black-64x64.png'\n        break\n    }\n    return (\n      <Avatar\n        size={size}\n        src={imgSrc}\n        style={{ border: '1px solid', verticalAlign: 'middle' }}\n        backgroundColor=\"#FFFFFF\"\n      />\n    )\n  }\n}\n\nexport default TokenAvatar\n","import { Col, Row } from 'react-flexbox-grid'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Link } from 'react-router-dom'\nimport Chat from 'material-ui/svg-icons/communication/chat'\nimport CopyContent from 'material-ui/svg-icons/content/content-copy'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport Search from 'material-ui/svg-icons/action/search'\nimport Settings from 'material-ui/svg-icons/action/settings'\nimport TokenAvatar from '../atoms/tokenAvatar'\nimport styles from './accountTopBarSummary.module.css'\n\nclass AccountTopBarSummary extends Component {\n  static propTypes = {\n    account: PropTypes.object.isRequired,\n    etherscanUrl: PropTypes.string.isRequired,\n    fundType: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    fundType: 'drago'\n  }\n\n  state = {\n    transferOpen: false\n  }\n\n  renderCopyButton = accountAddress => {\n    if (!accountAddress) {\n      return null\n    }\n\n    return (\n      <CopyToClipboard text={accountAddress} onCopy={() => {}}>\n        <Link to={'#'}>\n          <CopyContent className={styles.copyAddress} />\n        </Link>\n      </CopyToClipboard>\n    )\n  }\n\n  renderEtherscanButton = (type, text) => {\n    if (!text) {\n      return null\n    }\n    return (\n      <a\n        href={this.props.etherscanUrl + type + '/' + text}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Search className={styles.copyAddress} />\n      </a>\n    )\n  }\n\n  renderTitle = () => {\n    const { account } = this.props\n    return (\n      <Row>\n        <Col xs={8} className={styles.title}>\n          {account.name}\n        </Col>\n        <Col xs={4} className={styles.actionButtons}>\n          {this.renderCopyButton(account.address)}{' '}\n          {this.renderEtherscanButton('address', account.address)}\n        </Col>\n      </Row>\n    )\n  }\n\n  renderSubTitle = () => {\n    const { account } = this.props\n    return (\n      <Row>\n        <Col xs={12} className={styles.subTitle}>\n          {account.address}\n        </Col>\n      </Row>\n    )\n  }\n\n  renderBalance = (amount, symbol) => {\n    const formattedAmount = Number(amount).toLocaleString(undefined, {\n      minimumFractionDigits: 3,\n      maximumFractionDigits: 3\n    })\n\n    return (\n      <div className={styles.balance}>\n        <TokenAvatar tokenSymbol={symbol} />\n        <span>\n          {formattedAmount} <small>{symbol}</small>\n        </span>\n      </div>\n    )\n  }\n\n  render() {\n    const { account } = this.props\n    return (\n      <Row>\n        <Col xs={12}>\n          <div className={styles.paperContainer}>\n            <Row>\n              <Col xs={12}>\n                <Row className={styles.accountTitleContainer}>\n                  <Col xs={2}>\n                    <div className={styles.actionsContainer}>\n                      <Link to={'/app/web/config'}>\n                        <Settings\n                          color={'#757575'}\n                          className={styles.actionIcons}\n                        />\n                      </Link>\n                      <a\n                        href=\"https://discordapp.com/invite/FXd8EU8/\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        <Chat\n                          color={'#757575'}\n                          className={styles.actionIcons}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                  <Col xs={10} md={10}>\n                    <Row>\n                      <Col xs={12}>{this.renderTitle()}</Col>\n                      <Col xs={12}>{this.renderSubTitle()}</Col>\n                    </Row>\n                    <Row className={styles.accountBodyContainer}>\n                      <Col xs={12}>\n                        <div className={styles.accountChipTokenETH}>\n                          {this.renderBalance(account.ethBalance, 'ETH')}\n                        </div>\n                        <div className={styles.accountChipTokenGGG}>\n                          {this.renderBalance(account.grgBalance, 'GRG')}\n                        </div>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default AccountTopBarSummary\n","import { Col, Row } from 'react-flexbox-grid'\nimport { List } from 'material-ui/List'\nimport { connect } from 'react-redux'\n// import Drawer from 'material-ui/Drawer'\nimport ElementNotification from './elementNotification'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport classNames from 'classnames'\nimport styles from './elementNotificationsList.module.css'\nimport utils from '../../_utils/utils'\n\nfunction mapStateToProps(state) {\n  return {\n    recentTransactions: state.transactions.queue,\n    endpoint: state.endpoint\n  }\n}\n\nclass ElementNotificationsList extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    recentTransactions: PropTypes.object.isRequired,\n    endpoint: PropTypes.object.isRequired\n  }\n\n  static contextTypes = {\n    api: PropTypes.object.isRequired\n  }\n\n  state = {\n    subscriptionIDContractDrago: [],\n    contract: null\n  }\n\n  // Redux actions\n  updateTransactionsQueueAction = newRecentTransactions => {\n    return {\n      type: 'UPDATE_TRANSACTIONS',\n      transactions: newRecentTransactions\n    }\n  }\n\n  removeNotification = noticationKey => {\n    const { recentTransactions } = this.props\n    const transaction = recentTransactions.get(noticationKey)\n    const updatedTransaction = { ...transaction, ...{ deleted: true } }\n    recentTransactions.set(noticationKey, updatedTransaction)\n    this.props.dispatch(this.updateTransactionsQueueAction(recentTransactions))\n  }\n\n  updateTransactionsQueue = () => {\n    // Processing the queue in order to update the transactions status\n    const { api } = this.context\n    const { recentTransactions } = this.props\n    const newRecentTransactions = utils.updateTransactionsQueue(\n      api,\n      recentTransactions\n    )\n    this.props.dispatch(\n      this.updateTransactionsQueueAction(newRecentTransactions)\n    )\n  }\n\n  renderPlaceHolder = () => {\n    return (\n      <div>\n        <div className={classNames(styles.module, styles.post)}>\n          <div className={styles.circle} />\n          <div className={styles.wrapper}>\n            <div className={classNames(styles.line, styles.width110)} />\n            <div className={classNames(styles.line, styles.width250)} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderNotifications = () => {\n    const eventType = 'transaction'\n    let eventStatus = 'executed'\n    let primaryText,\n      drgvalue,\n      symbol = null\n    let secondaryText = []\n    let timeStamp = ''\n    let txHash = ''\n    const { recentTransactions } = this.props\n    let transactionsList = Array.from(recentTransactions)\n      .reverse()\n      .filter(value => {\n        return typeof value[1].deleted === 'undefined'\n      })\n      .map(transaction => {\n        secondaryText = []\n        let value = transaction.pop()\n        let key = transaction.pop()\n        timeStamp = value.receipt\n          ? utils.dateFromTimeStamp(value.timestamp)\n          : utils.dateFromTimeStamp(value.timestamp)\n        txHash = value.hash.length !== 0 ? (txHash = value.hash) : ''\n        switch (value.action) {\n          case 'BuyDrago':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Buy ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'SellDrago':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Sell ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'BuyVault':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Deposit ' + drgvalue + ' ETH'\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'SellVault':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Withdraw ' + drgvalue + ' ETH'\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'DragoCreated':\n            symbol = value.symbol\n            primaryText = 'Deploy ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'CreateVault':\n            symbol = value.symbol\n            primaryText = 'Deploy ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'TransferGRG':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Transfer ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'TransferETH':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Transfer ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'WrapETH':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Wrap ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'UnWrapETH':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Unwrap ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'BuyToken':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Buy ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'SellToken':\n            drgvalue = value.amount\n            symbol = value.symbol\n            primaryText = 'Sell ' + drgvalue + ' ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'SetFeeVault':\n            symbol = value.symbol\n            primaryText = 'Set fee ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'SetPrice':\n            symbol = value.symbol\n            primaryText = 'Set price ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'UnLockToken':\n            symbol = value.symbol\n            primaryText = 'UnLock token ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'LockToken':\n            symbol = value.symbol\n            primaryText = 'Lock token ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          case 'ExCancelOrder':\n            symbol = value.symbol\n            primaryText = 'Lock token ' + symbol\n            secondaryText[0] =\n              'Status: ' +\n              value.status.charAt(0).toUpperCase() +\n              value.status.slice(1)\n            secondaryText[1] = timeStamp\n            eventStatus = value.status\n            break\n          default:\n            drgvalue = 0\n            symbol = 0\n            primaryText = 'NA'\n            secondaryText[1] = timeStamp\n            eventStatus = 'NA'\n        }\n        return (\n          <ElementNotification\n            key={key}\n            transactionKey={key}\n            primaryText={primaryText}\n            secondaryText={secondaryText}\n            eventType={eventType}\n            eventStatus={eventStatus}\n            txHash={txHash}\n            networkName={this.props.endpoint.networkInfo.name}\n            removeNotification={this.removeNotification}\n          />\n        )\n      })\n    return transactionsList.length !== 0 ? (\n      transactionsList\n    ) : (\n      <div className={styles.noRecentTransactions}>\n        <p className={styles.noTransacationsMsg}>No recent transactions.</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs={12}>\n          <List>{this.renderNotifications()}</List>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(ElementNotificationsList)\n","import { connect } from 'react-redux'\nimport AccountTopBarSummary from './accountTopBarSummary'\nimport ElementNotificationsList from './elementNotificationsList'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport classNames from 'classnames'\nimport styles from './elementTopBarAccountStatus.module.css'\n\nfunction mapStateToProps(state) {\n  return {\n    recentTransactions: state.transactions.queue,\n    endpoint: state.endpoint\n  }\n}\n\nclass ElementTopBarAccountStatus extends Component {\n  static propTypes = {\n    notificationsOpen: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    endpoint: PropTypes.object.isRequired\n  }\n\n  state = {\n    notificationsOpen: false\n  }\n\n  render() {\n    const { notificationsOpen } = this.props\n    const { accounts, networkInfo } = this.props.endpoint\n    const account = accounts[0]\n    return (\n      <span>\n        <div\n          className={classNames([\n            styles.notificationsPanel,\n            notificationsOpen ? styles.show : styles.noShow\n          ])}\n        >\n          {accounts.length !== 0 && (\n            <AccountTopBarSummary\n              account={account}\n              key={'topBarAccount' + account.name}\n              etherscanUrl={networkInfo.etherscan}\n            />\n          )}\n          <ElementNotificationsList />\n        </div>\n      </span>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(ElementTopBarAccountStatus)\n","import FlatButton from 'material-ui/FlatButton'\nimport React, { Component } from 'react'\n\nclass TopMenuButtonLong extends Component {\n  render() {\n    return <FlatButton {...this.props} />\n  }\n}\n\nexport default TopMenuButtonLong\n","// import { APP, DS } from '../../_utils/const.js'\nimport { Link } from 'react-router-dom'\n// import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport TopMenuButtonLong from '../atoms/topMenuButtonLong'\nimport styles from './topMenuLinkLong.module.css'\n// import utils from '../../_utils/utils'\n\nclass TopMenuLinkLong extends Component {\n  static propTypes = {\n    // buttonProps: PropTypes.object.isRequired\n    // dropDownContentProps: PropTypes.object.iseRequired\n  }\n  shouldComponentUpdate(nextProps) {\n    let propsUpdate = false\n    this.props.label !== nextProps.label\n      ? (propsUpdate = true)\n      : (propsUpdate = false)\n    return propsUpdate\n  }\n\n  render() {\n    const { selected, link, ...other } = this.props\n    let containerElement = ''\n    if (link !== null) {\n      containerElement = <Link to={link} />\n    }\n    let buttonStyle\n    selected\n      ? (buttonStyle = styles.topBarButtonSelected)\n      : (buttonStyle = styles.topBarButton)\n    return (\n      <div>\n        {' '}\n        <TopMenuButtonLong\n          {...other}\n          className={buttonStyle}\n          containerElement={containerElement}\n          labelStyle={{ fontWeight: 700, fontSize: '14px' }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TopMenuLinkLong\n","import { APP, DS } from '../_utils/const.js'\nimport { Hidden, Visible } from 'react-grid-system'\nimport { Link, withRouter } from 'react-router-dom'\nimport { THEME_COLOR } from './../_utils/const'\nimport { Toolbar, ToolbarGroup } from 'material-ui/Toolbar'\nimport ActionAccountBalance from 'material-ui/svg-icons/action/account-balance'\nimport ActionHome from 'material-ui/svg-icons/action/home'\nimport ActionPolymer from 'material-ui/svg-icons/action/polymer'\nimport ActionShowChart from 'material-ui/svg-icons/editor/show-chart'\nimport IconButton from 'material-ui/IconButton'\nimport IconMenu from 'material-ui/IconMenu'\nimport MenuItem from 'material-ui/MenuItem'\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport TopMenuLinkLong from '../_atomic/molecules/topMenuLinkLong'\n\n// function mapStateToProps(state) {\n//   return state\n// }\n\nclass NavLinksLeft extends PureComponent {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    // dispatch: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired\n  }\n\n  activeSectionPath = () => {\n    const { match } = this.props\n    let path = match.path.split('/')\n    return path[3]\n  }\n\n  renderTopLinksLong = links => {\n    const activeLink = this.activeSectionPath()\n    // let backgroundColorActive = '#054186'\n    let selected\n    return links.map(link => {\n      link.to === activeLink ? (selected = true) : (selected = false)\n      return (\n        <TopMenuLinkLong\n          key={link.label}\n          label={link.label.toUpperCase()}\n          link={\n            DS +\n            APP +\n            DS +\n            this.buildUrlPath(this.props.location) +\n            DS +\n            link.to\n          }\n          disableTouchRipple={true}\n          hoverColor={THEME_COLOR.drago}\n          selected={selected}\n          icon={link.icon}\n          // backgroundColor={backgroundColorActive}\n        />\n      )\n    })\n  }\n\n  renderTopLinksShort = links => {\n    const { location } = this.props\n    const menuItems = links.map(link => {\n      return (\n        <MenuItem\n          key={link.label}\n          primaryText={link.label.toUpperCase()}\n          leftIcon={link.icon}\n          containerElement={\n            <Link\n              to={DS + APP + DS + this.buildUrlPath(location) + DS + link.to}\n            />\n          }\n        />\n      )\n    })\n    return (\n      <IconMenu\n        iconButtonElement={\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        onChange={this.handleChangeSingle}\n        iconStyle={{ color: 'white' }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        desktop={true}\n      >\n        {menuItems}\n      </IconMenu>\n    )\n  }\n\n  buildUrlPath = location => {\n    let path = location.pathname.split('/')\n    // path.splice(-1,1);\n    // var url = path.join('/');\n    if (path.length < 3) {\n      return 'web'\n    }\n    return path[2]\n  }\n\n  render() {\n    const linksLong = [\n      { label: 'home', to: 'home', icon: <ActionHome color=\"white\" /> },\n      {\n        label: 'vault',\n        to: 'vault',\n        icon: <ActionAccountBalance color=\"white\" />\n      },\n      { label: 'drago', to: 'drago', icon: <ActionShowChart color=\"white\" /> },\n      {\n        label: 'market',\n        to: 'exchange',\n        icon: <ActionPolymer color=\"white\" />\n      }\n    ]\n    const linksShort = [\n      { label: 'home', to: 'home', icon: <ActionHome color=\"#054186\" /> },\n      {\n        label: 'vault',\n        to: 'vault',\n        icon: <ActionAccountBalance color=\"#054186\" />\n      },\n      {\n        label: 'drago',\n        to: 'drago',\n        icon: <ActionShowChart color=\"#054186\" />\n      },\n      {\n        label: 'market',\n        to: 'exchange',\n        icon: <ActionPolymer color=\"#054186\" />\n      }\n    ]\n    return (\n      <Toolbar style={{ background: '', paddingLeft: '38px' }}>\n        <ToolbarGroup>\n          <Hidden xs sm md>\n            <ToolbarGroup className={'joyride-app-sections'}>\n              {this.renderTopLinksLong(linksLong)}\n            </ToolbarGroup>\n          </Hidden>\n          <Visible xs sm md>\n            {this.renderTopLinksShort(linksShort)}\n          </Visible>\n        </ToolbarGroup>\n      </Toolbar>\n    )\n  }\n}\n\nexport default withRouter(NavLinksLeft)\n// export default withRouter(connect(mapStateToProps)(NavLinksLeft))\n","import * as Colors from 'material-ui/styles/colors'\nimport { Toolbar, ToolbarGroup, ToolbarSeparator } from 'material-ui/Toolbar'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport AccountIcon from 'material-ui/svg-icons/action/account-circle'\nimport ArrowDropDown from 'material-ui/svg-icons/navigation/arrow-drop-down'\nimport FlatButton from 'material-ui/FlatButton'\n// import Help from 'material-ui/svg-icons/action/help'\nimport { Actions } from '../_redux/actions'\nimport Badge from 'material-ui/Badge'\nimport IconButton from 'material-ui/IconButton'\nimport Menu from 'material-ui/Menu'\nimport MenuItem from 'material-ui/MenuItem'\nimport Popover from 'material-ui/Popover'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport styles from './elements.module.css'\nimport utils from '../_utils/utils'\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    transactions: state.transactions,\n    endpoint: state.endpoint,\n    app: state.app\n  }\n}\n\nlet menuStyles = {\n  dropDown: {\n    color: '#ffffff'\n  },\n  separator: {\n    backgroundColor: '#ffffff',\n    opacity: 0.5\n  },\n  profileIcon: {\n    open: {\n      color: '#054186'\n    },\n    closed: {\n      color: '#ffffff'\n    }\n  }\n}\n\nlet disabledUserType = {\n  dropDown: {}\n}\n\nlet enabledUserType = {\n  dropDown: {\n    color: '#ffffff'\n  }\n}\n\nclass NavLinks extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    transactions: PropTypes.object.isRequired,\n    endpoint: PropTypes.object.isRequired,\n    app: PropTypes.object.isRequired\n  }\n\n  static contextTypes = {\n    api: PropTypes.object.isRequired\n  }\n\n  state = {\n    allEvents: null,\n    minedEvents: null,\n    pendingEvents: null,\n    subscriptionIDDrago: null,\n    transactionsDrawerNetworkButtonStyle: this.props.app.transactionsDrawerOpen\n      ? styles.networkIconOpen\n      : styles.networkIconClosed,\n    transactionsDrawerNetworkButtonIconStyle: this.props.app\n      .transactionsDrawerOpen\n      ? menuStyles.profileIcon.open\n      : menuStyles.profileIcon.closed\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let stateUpdate = true\n    let propsUpdate = true\n    propsUpdate = !utils.shallowEqual(this.props, nextProps)\n    stateUpdate = !utils.shallowEqual(this.state, nextState)\n    if (stateUpdate || propsUpdate) {\n    }\n    return stateUpdate || propsUpdate\n  }\n\n  // value = 1 = Trader\n  // value = 2 = Manager\n  handleTopBarSelectAccountType = (event, value) => {\n    this.props.dispatch(Actions.users.isManagerAction(value))\n  }\n\n  componentDidMount() {\n    this.activeSectionPath()\n  }\n\n  activeSectionPath = () => {\n    const { match } = this.props\n    let path = match.path.split('/')\n    return path[3]\n  }\n\n  buildUrlPath = location => {\n    let path = location.pathname.split('/')\n    // path.splice(-1,1);\n    // var url = path.join('/');\n    return path[2]\n  }\n\n  handleClick = event => {\n    // This prevents ghost click.\n    event.preventDefault()\n    this.setState({\n      open: true,\n      anchorEl: event.currentTarget\n    })\n  }\n\n  handleRequestClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  handleToggleNotifications = () => {\n    const { transactionsDrawerOpen } = this.props.app\n    let transactionsDrawerNetworkButtonStyle,\n      transactionsDrawerNetworkButtonIconStyle\n    !transactionsDrawerOpen\n      ? (transactionsDrawerNetworkButtonStyle = styles.networkIconOpen)\n      : (transactionsDrawerNetworkButtonStyle = styles.networkIconClosed)\n    !transactionsDrawerOpen\n      ? (transactionsDrawerNetworkButtonIconStyle = menuStyles.profileIcon.open)\n      : (transactionsDrawerNetworkButtonIconStyle =\n          menuStyles.profileIcon.closed)\n    this.setState({\n      transactionsDrawerNetworkButtonStyle,\n      transactionsDrawerNetworkButtonIconStyle\n    })\n    this.props.dispatch(\n      Actions.app.updateAppStatus({\n        transactionsDrawerOpen: !this.props.app.transactionsDrawerOpen\n      })\n    )\n  }\n\n  render() {\n    const { user } = this.props\n    const { transactions } = this.props\n    // let userTypeDisabled = false;\n    let userTypeLabel = 'HOLDER'\n    const buttonAccountType = {\n      border: '1px solid',\n      borderColor: '#FFFFFF'\n      // width: \"140px\"\n    }\n    // Disabling user type if isManager not defined\n    if (typeof user.isManager === 'undefined') {\n      user.isManager = false\n      // userTypeDisabled = true;\n      menuStyles = { ...menuStyles, ...disabledUserType }\n    } else {\n      user.isManager ? (userTypeLabel = 'WIZARD') : (userTypeLabel = 'HOLDER')\n      menuStyles = { ...menuStyles, ...enabledUserType }\n    }\n    return (\n      <Toolbar style={{ background: '', padding: '0px' }}>\n        <ToolbarGroup>\n          <ToolbarSeparator style={menuStyles.separator} />\n          <ToolbarGroup>\n            <div className={'joyride-user-roles'}>\n              <FlatButton\n                onClick={this.handleClick}\n                labelPosition=\"before\"\n                label={userTypeLabel}\n                labelStyle={{ color: '#FFFFFF' }}\n                style={buttonAccountType}\n                icon={<ArrowDropDown color=\"#FFFFFF\" />}\n                hoverColor={Colors.blue300}\n              />\n            </div>\n            <Popover\n              open={this.state.open}\n              anchorEl={this.state.anchorEl}\n              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n              targetOrigin={{ horizontal: 'right', vertical: 'top' }}\n              onRequestClose={this.handleRequestClose}\n              style={{ marginTop: '5px' }}\n            >\n              <Menu\n                value={user.isManager}\n                onChange={this.handleTopBarSelectAccountType}\n                desktop={true}\n                className={styles.menuAccountType}\n              >\n                <MenuItem\n                  value={false}\n                  primaryText={\n                    <div>\n                      <div className={styles.menuItemPrimaryText}>HOLDER</div>\n                      <div>\n                        <small>Look for a Drago</small>\n                      </div>\n                    </div>\n                  }\n                />\n                <MenuItem\n                  value={true}\n                  primaryText={\n                    <div>\n                      <div className={styles.menuItemPrimaryText}>WIZARD</div>\n                      <div>\n                        <small>Manage your Dragos</small>\n                      </div>\n                    </div>\n                  }\n                />\n              </Menu>\n            </Popover>\n            <div style={{ marginLeft: '6px' }}>\n              {' '}\n              {transactions.pending > 0 ? (\n                <div\n                  className={this.state.transactionsDrawerNetworkButtonStyle}\n                >\n                  <Badge\n                    badgeContent={transactions.pending}\n                    secondary={true}\n                    style={{\n                      padding: '0px !important'\n                    }}\n                    badgeStyle={{\n                      top: 0,\n                      right: 0,\n                      fontSize: '10px',\n                      width: '20px',\n                      height: '20px',\n                      backgroundColor: 'rgb(255, 174, 0)',\n                      fontWeight: '700'\n                    }}\n                  >\n                    <IconButton\n                      tooltip=\"Account\"\n                      onClick={this.handleToggleNotifications}\n                      iconStyle={\n                        this.state.transactionsDrawerNetworkButtonIconStyle\n                      }\n                    >\n                      <AccountIcon />\n                    </IconButton>\n                  </Badge>\n                </div>\n              ) : (\n                <div\n                  className={this.state.transactionsDrawerNetworkButtonStyle}\n                >\n                  <IconButton\n                    tooltip=\"Account\"\n                    onClick={this.handleToggleNotifications}\n                    iconStyle={\n                      this.state.transactionsDrawerNetworkButtonIconStyle\n                    }\n                  >\n                    <AccountIcon />\n                  </IconButton>\n                </div>\n              )}\n            </div>\n          </ToolbarGroup>\n        </ToolbarGroup>\n      </Toolbar>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(NavLinks))\n","import { withRouter } from 'react-router-dom'\nimport AppBar from 'material-ui/AppBar'\n// import ElementNotificationsDrawer from '../Elements/elementNotificationsDrawer'\nimport ElementTopBarAccountStatus from '../_atomic/molecules/elementTopBarAccountStatus'\nimport NavLinksLeft from './topBarMenuLinksLeft'\nimport NavLinksRight from './topBarMenuLinksRight'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport styles from './topBarMenu.module.css'\n\nclass TopBarMenu extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    handleTopBarSelectAccountType: PropTypes.func.isRequired,\n    transactionsDrawerOpen: PropTypes.bool.isRequired\n  }\n\n  static defaultProps = {\n    handleTopBarSelectAccountType: () => {}\n  }\n\n  renderBurgerMenu = () => {\n    return (\n      <div>\n        <input type=\"checkbox\" id=\"menu-toggle\" className={styles.menuToggle} />\n        <label id=\"trigger\" htmlFor=\"menu-toggle\" className={styles.trigger}>\n          <div className={styles.beta}>&beta;</div>\n          <img\n            style={{ height: '38px', marginLeft: '-5px', marginTop: '-5px' }}\n            src=\"/img/rb-logo-final.png\"\n            alt=\"logo\"\n          />\n        </label>\n        <div className={styles.menu}>\n          <div className={styles.burgerContainer}>\n            <ul id=\"menu\" className={styles.linkItem}>\n              <li>\n                <a\n                  href=\"https://www.rigoblock.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Home\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://discordapp.com/invite/FXd8EU8/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Community\n                </a>\n              </li>\n              {/* <li>\n                <a\n                  href=\"https://help.rigoblock.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Help\n                </a>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { location, handleTopBarSelectAccountType } = this.props\n    return (\n      <div>\n        <div>{this.renderBurgerMenu()}</div>\n        <AppBar\n          title={<NavLinksLeft location={location} />}\n          showMenuIconButton={false}\n          iconElementLeft={<NavLinksLeft location={location} />}\n          iconElementRight={\n            <NavLinksRight\n              location={location}\n              handleTopBarSelectAccountType={handleTopBarSelectAccountType}\n            />\n          }\n          style={{\n            background: 'linear-gradient(135deg,rgb(5, 65, 134),rgb(1, 17, 36))'\n          }}\n        />\n        <ElementTopBarAccountStatus\n          notificationsOpen={this.props.transactionsDrawerOpen}\n        />\n        <div className={'joyride-notifications'} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TopBarMenu)\n","import { Col, Row } from 'react-flexbox-grid'\nimport { Link } from 'react-router-dom'\nimport React, { Component } from 'react'\n\nimport { APP, DS } from '../_utils/const'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport SectionHeader from '../_atomic/atoms/sectionHeader'\nimport styles from './elementNotConnected.module.css'\n\nfunction mapStateToProps(state) {\n  return state\n}\n\nclass ElementNotConnected extends Component {\n  static propTypes = {\n    app: PropTypes.object.isRequired\n  }\n\n  componentDidMount() {\n    // this.counter()\n  }\n\n  componentWillUnmount() {\n    // clearTimeout(td)\n  }\n\n  buildUrlPath = () => {\n    let path = window.location.hash.split('/')\n    return path[2]\n  }\n\n  renderSyncing = () => {\n    return (\n      <div className={styles.detailsBoxContainer}>\n        <Row>\n          <Col xs={12}>\n            <SectionHeader titleText=\"NODE SYNCING\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <p>\n              <b>Your node is syncing with Ethereum blockchain.</b>\n            </p>\n            <p>Please wait until fully synced before accessing RigoBlock.</p>\n            {/* <p><SyncStatusWarpChunksProcessed syncStatus={this.context.syncStatus}/></p> */}\n            <p>\n              Please contact our support or{' '}\n              {\n                <Link to={DS + APP + DS + this.buildUrlPath() + DS + 'config'}>\n                  select\n                </Link>\n              }{' '}\n              a different endpoint.\n            </p>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n  renderNotConnected = () => {\n    return (\n      <div className={styles.detailsBoxContainer}>\n        <Row>\n          <Col xs={12}>\n            <SectionHeader titleText=\"CONNECTION ERROR\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <p>\n              <b>Unable to connect to the network.</b>\n            </p>\n            {/* <p>Trying to establish a new connection in {this.state.counter} seconds... </p> */}\n            <p>Trying to establish a new connection... </p>\n            {/* <p>\n        Attempt {this.props.app.connectionRetries}: retrying in{' '}\n        {this.props.app.retryTimeInterval}\n        ms\n      </p> */}\n            <p>Attempt {this.props.app.connectionRetries}.</p>\n            <p>\n              Please contact our support or{' '}\n              {\n                <Link to={DS + APP + DS + this.buildUrlPath() + DS + 'config'}>\n                  select\n                </Link>\n              }{' '}\n              a different endpoint.\n            </p>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n  renderTitle = () => {\n    return null\n  }\n\n  render() {\n    const { isSyncing } = this.props.app\n    if (this.props.app.connectionRetries > 2) {\n      return isSyncing ? this.renderSyncing() : this.renderNotConnected()\n    }\n    return <div />\n  }\n}\n\nexport default connect(mapStateToProps)(ElementNotConnected)\n","import HelpOutline from 'material-ui/svg-icons/action/help-outline'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styles from './helpIcon.module.css'\n\nexport default class HelpIcon extends Component {\n  static propTypes = {\n    style: PropTypes.object,\n    helpText: PropTypes.string.isRequired,\n    helpReadMoreLink: PropTypes.string\n  }\n\n  static defaultProps = {\n    style: {},\n    helpText: '',\n    helpReadMoreLink: ''\n  }\n\n  state = {\n    popoverIsOpen: true,\n    preferPlace: null,\n    place: 'below'\n  }\n\n  togglePopover(toState) {\n    const popoverIsOpen =\n      typeof toState === 'boolean' ? toState : !this.state.popoverIsOpen\n    this.setState({\n      popoverIsOpen\n    })\n  }\n\n  onClickTooltipContent(e) {\n    // do not hide tooltip when clicking inside tooltip content area\n\n    e.stopPropagation()\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div data-tip={this.props.helpText} data-event=\"click\">\n          {/* <span style={{ cursor: 'pointer' }}>\n            <HelpOutline style={this.props.style} />\n          </span> */}\n          <div style={{ cursor: 'pointer' }}>\n            <HelpOutline style={this.props.style} />\n          </div>\n          <ReactTooltip\n            effect=\"solid\"\n            place=\"bottom\"\n            type=\"light\"\n            multiline={true}\n            globalEventOff=\"click\"\n            // border={true}\n            className={styles.helpicon}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n","export const getFromBlock = networkInfo => {\n  if (networkInfo.id === 5777) {\n    return '0'\n  }\n  let fromBlock\n  switch (networkInfo.id) {\n    case 1:\n      fromBlock = '6000000'\n      break\n    case 42:\n      fromBlock = '7000000'\n      break\n    case 3:\n      fromBlock = '3000000'\n      break\n    default:\n      fromBlock = '3000000'\n  }\n  return fromBlock\n}\n","import { HTTP_EVENT_FETCHING, METAMASK } from '../const'\nimport Web3 from 'web3'\nimport Web3Wrapper from '../web3Wrapper/src'\n\nexport const getWeb3 = (networkInfo, options = { wallet: '' }) => {\n  if (networkInfo.id === 5777) {\n    return new Web3(new Web3.providers.HttpProvider('http://localhost:8545'))\n  }\n  let web3\n\n  switch (options.wallet) {\n    case METAMASK: {\n      if (typeof window !== 'undefined') {\n        web3 = window.web3\n      } else {\n        web3 = 'Test env'\n      }\n      break\n    }\n    default: {\n      web3 = Web3Wrapper.getInstance(networkInfo.id)\n      if (HTTP_EVENT_FETCHING) {\n        web3 = new Web3(web3._rb.network.transportHttp)\n      } else {\n        web3 = Web3Wrapper.getInstance(networkInfo.id)\n      }\n    }\n  }\n  return web3\n}\n","export * from './dateFromTimeStampHuman'\nexport * from './getFromBlock'\nexport * from './getWeb3'\n\n","export { default } from './web3Wrapper'\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { DRAGOEVENTFUL } from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoEventfulWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.dragoeventful\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = DRAGOEVENTFUL\n    this._contractAddress = ''\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  get abi() {\n    return this._abi\n  }\n\n  init = () => {\n    if (typeof global.baseContracts !== 'undefined') {\n      const instance = new this._api.eth.Contract(\n        global.baseContracts['DragoEventful'].abi,\n        global.baseContracts['DragoEventful'].address\n      )\n      this._contract = instance\n      this._contractAddress = global.baseContracts['DragoEventful'].address\n      let hexSignature = []\n      global.baseContracts['DragoEventful'].abi.map(function(element) {\n        if (element.type === 'event') {\n          return (hexSignature[element.name] = element.signature)\n        }\n        return true\n      })\n      this._hexSignature = hexSignature\n      return this._contract\n    }\n\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return typeof this._contract !== 'undefined'\n      ? this._contract\n      : this._registry.instance(contractAbi, contractName).then(contract => {\n          this._contract = contract\n          this._contractAddress = contract._address\n          let hexSignature = []\n          this._abi.map(function(element) {\n            if (element.type === 'event') {\n              return (hexSignature[element.name] = element.signature)\n            }\n            return true\n          })\n\n          this._hexSignature = hexSignature\n          return this._contract\n        })\n  }\n\n  getAllLogs = (\n    options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n  ) => {\n    return this._contract\n      .getPastEvents('allEvents', {\n        fromBlock: options.fromBlock,\n        toBlock: options.toBlock,\n        topics: options.topics\n      })\n      .then(function(logs) {\n        return logs\n      })\n  }\n}\n\nexport default DragoEventfulWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { MULTI_BALANCE_CONTRACT_ADDRESS } from '../../utils/const'\nimport { WETH_ADDRESSES } from '../../utils/const'\nimport Registry from '../registry'\n\nclass DragoWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.drago\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  init = address => {\n    if (!address) {\n      throw new Error('Contract address needs to be provided')\n    }\n    const api = this._api\n    const abi = this._abi\n    this._instance = new api.eth.Contract(abi)\n    this._instance.options.address = address\n  }\n\n  getData = () => {\n    const instance = this._instance\n    return instance.methods.getData().call({})\n  }\n\n  getAdminData = () => {\n    const instance = this._instance\n    return instance.methods.getAdminData().call({})\n  }\n\n  getBalance = () => {\n    const api = this._api\n    const instance = this._instance\n    return api.eth.getBalance(instance._address)\n  }\n\n  getBalanceWETH = async () => {\n    const api = this._api\n    const instance = this._instance\n    const networkId = await api.eth.net.getId()\n    const address =\n      typeof global.baseContracts !== 'undefined'\n        ? global.baseContracts['WETH9'].address\n        : WETH_ADDRESSES[networkId]\n    const abi =\n      typeof global.baseContracts !== 'undefined'\n        ? global.baseContracts['WETH9'].abi\n        : abis.weth\n    const wethInstance = new api.eth.Contract(abi, address)\n    return wethInstance.methods.balanceOf(instance._address).call({})\n  }\n\n  getPoolBalanceOnToken = tokenAddress => {\n    if (!tokenAddress) {\n      throw new Error('tokenAddress needs to be provided')\n    }\n    const api = this._api\n    const instance = this._instance\n    const tokenInstance = new api.eth.Contract(abis.erc20, tokenAddress)\n    return tokenInstance.methods.balanceOf(instance._address).call({})\n  }\n\n  // getTokenBalance = tokenAddress => {\n  //   const api = this._api\n  //   const instance = this._instance\n  //   const erc20Instance = api.newContract(abis.erc20, tokenAddress).instance\n  //   return erc20Instance.balanceOf.call({}, [instance.address])\n  // }\n\n  balanceOf = accountAddress => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    const instance = this._instance\n    return instance.methods.balanceOf(accountAddress).call({})\n  }\n\n  totalSupply = () => {\n    const instance = this._instance\n    return instance.methods.totalSupply().call({})\n  }\n\n  /**\n   *  Requests are proxied through the fund smart contract. The exchange has to be approved.\n   *\n   * @param {*} managerAccountAddress     The address of the owner of the fund\n   * @param {*} dragoAddress              The address of the fund.\n   * @param {*} exchangeAddress   The address of the exchange (Ethfinex for example)\n   * @param {*} tokenAddress              The address of the token to be un-locked.\n   * @param {*} tokenWrapper              The address of the token wrapper.\n   * @param {*} toBeWrapped               The amount in base units to be unwrapped. A baseUnit is defined as the smallest denomination of a token.\n   * @param {*} time                      Lock time (1 for 1h)\n   * @param {*} isOldERC20                True for non standard ERC20 tokens su as USDT.\n   * @returns                             A promise resolving the smart contract method called.\n   */\n  operateOnExchangeEFXLock = async (\n    managerAccountAddress,\n    dragoAddress,\n    exchangeAddress,\n    tokenAddress,\n    tokenWrapper,\n    toBeWrapped,\n    time,\n    isOldERC20\n  ) => {\n    if (!managerAccountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!dragoAddress) {\n      throw new Error('dragoAddress needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress needs to be provided')\n    }\n    // if (!tokenAddress) {\n    //   throw new Error('tokenAddress needs to be provided')\n    // }\n    if (!tokenWrapper) {\n      throw new Error('tokenWrapper needs to be provided')\n    }\n    if (!toBeWrapped) {\n      throw new Error('toBeWrapped needs to be provided')\n    }\n    if (!time) {\n      throw new Error('time need to be provided')\n    }\n    if (typeof isOldERC20 === 'undefined') {\n      throw new Error('isOldERC20 need to be provided')\n    }\n    if (tokenAddress === '0x0') {\n      tokenAddress = '0x0000000000000000000000000000000000000000'\n    }\n\n\n\n\n\n\n\n\n\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccountAddress\n    }\n    const contractMethod = {\n      name: 'wrapToEfx',\n      type: 'function',\n      inputs: [\n        {\n          type: 'address',\n          name: 'token'\n        },\n        {\n          type: 'address',\n          name: 'wrapper'\n        },\n        {\n          type: 'uint256',\n          name: 'value'\n        },\n        {\n          type: 'uint256',\n          name: 'forTime'\n        },\n        {\n          type: 'bool',\n          name: 'erc20Old'\n        }\n      ]\n    }\n    const encodedABI = await api.eth.abi.encodeFunctionCall(contractMethod, [\n      tokenAddress,\n      tokenWrapper,\n      toBeWrapped,\n      time,\n      isOldERC20\n    ])\n\n    return instance.methods\n      .operateOnExchange(exchangeAddress, [encodedABI])\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchange(exchangeAddress, [encodedABI])\n          .send(options)\n      })\n  }\n\n  /**\n   * Requests are proxied through the fund smart contract. The exchange has to be approved.\n   *\n   * @param {*} managerAccountAddress   The address of the owner of the fund\n   * @param {*} dragoAddress            The address of the fund.\n   * @param {*} exchangeAddress The address of the exchange (Ethfinex for example)\n   * @param {*} tokenAddress            The address of the token to be un-locked.\n   * @param {*} tokenWrapper            The address of the token wrapper.\n   * @param {*} toBeUnwrapped           The amount in base units to be unwrapped. A baseUnit is defined as the smallest denomination of a token.\n   * @returns                           A promise resolving the smart contract method called.\n   */\n  operateOnExchangeEFXUnlock = async (\n    managerAccountAddress,\n    dragoAddress,\n    exchangeAddress,\n    tokenAddress,\n    tokenWrapper,\n    toBeUnwrapped\n  ) => {\n    if (!managerAccountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!dragoAddress) {\n      throw new Error('dragoAddress needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress needs to be provided')\n    }\n    if (!tokenWrapper) {\n      throw new Error('tokenWrapper needs to be provided')\n    }\n    if (!toBeUnwrapped) {\n      throw new Error('toBeUnWrapped needs to be provided')\n    }\n\n\n\n\n\n\n\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccountAddress\n    }\n\n    if (tokenAddress === '0x0') {\n      tokenAddress = '0x0000000000000000000000000000000000000000'\n    }\n    const contractMethod = {\n      name: 'unwrap',\n      type: 'function',\n      inputs: [\n        {\n          type: 'address',\n          name: 'token'\n        },\n        {\n          type: 'address',\n          name: 'wrapper'\n        },\n        {\n          type: 'uint256',\n          name: 'value'\n        },\n        {\n          type: 'uint8',\n          name: 'v'\n        },\n        {\n          type: 'bytes32',\n          name: 'r'\n        },\n        {\n          type: 'bytes32',\n          name: 's'\n        },\n        {\n          type: 'uint256',\n          name: 'signatureValidUntilBlock'\n        }\n      ]\n    }\n    const v = 1\n    const r =\n      '0xfa39c1a29cab1aa241b62c2fd067a6602a9893c2afe09aaea371609e11cbd92d' // mock bytes32\n    const s =\n      '0xfa39c1a29cab1aa241b62c2fd067a6602a9893c2afe09aaea371609e11cbd92d' // mock bytes32\n    const validUntil = 1\n    const encodedABI = await api.eth.abi.encodeFunctionCall(contractMethod, [\n      tokenAddress,\n      tokenWrapper,\n      toBeUnwrapped,\n      v,\n      r,\n      s,\n      validUntil\n    ])\n\n    return instance.methods\n      .operateOnExchange(exchangeAddress, [encodedABI])\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchange(exchangeAddress, [encodedABI])\n          .send(options)\n      })\n  }\n\n  /**\n   * Requests are proxied through the fund smart contract. The exchange is address(0) and must be approved.\n   *\n   * @param {*} managerAccountAddress   The address of the owner of the fund\n   * @param {*} dragoAddress            The address of the fund.\n   * @param {*} targetAddress           The address of the pool operator self custody.\n   * @param {*} tokenAddress            The address of the token to be un-locked.\n   * @param {*} toBeTransferred         The amount in base units to be transferred. A baseUnit is defined as the smallest denomination of a token.\n   * @returns                           A promise resolving the smart contract method called.\n   */\n  operateOnExchangeSelfCustody = async (\n    managerAccountAddress,\n    dragoAddress,\n    targetAddress,\n    tokenAddress,\n    toBeTransferred\n  ) => {\n    if (!managerAccountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!dragoAddress) {\n      throw new Error('dragoAddress needs to be provided')\n    }\n    if (!targetAddress) {\n      throw new Error('targetAddress needs to be provided')\n    }\n    if (targetAddress === '0x0000000000000000000000000000000000000000') {\n      throw new Error('targetAddress cannot be address 0x0')\n    }\n    if (!toBeTransferred) {\n      throw new Error('toBeUnWrapped needs to be provided')\n    }\n\n\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccountAddress\n    }\n\n    if (tokenAddress === '0x0') {\n      tokenAddress = '0x0000000000000000000000000000000000000000'\n    }\n    const exchangeAddress = '0x0000000000000000000000000000000000000000'\n    const contractMethod = {\n      name: 'transferToSelfCustody',\n      type: 'function',\n      inputs: [\n          {\n            type: 'address',\n            name: 'selfCustodyAccount'\n          },\n          {\n            type: 'address',\n            name: 'token'\n          },\n          {\n            type: 'uint256',\n            name: 'amount'\n          }\n        ]\n    }\n    const encodedABI = await api.eth.abi.encodeFunctionCall(contractMethod, [\n      targetAddress,\n      tokenAddress,\n      toBeTransferred\n    ])\n\n    return instance.methods\n      .operateOnExchange(exchangeAddress, [encodedABI])\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchange(exchangeAddress, [encodedABI])\n          .send(options)\n      })\n  }\n\n  setInfiniteAllowaceOnExchange = (\n    accountAddress,\n    tokenAddress,\n    ownerAddress,\n    spenderAddress,\n    amount\n  ) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!tokenAddress) {\n      throw new Error('tokenAddress needs to be provided')\n    }\n    if (!ownerAddress) {\n      throw new Error('ownerAddress needs to be provided')\n    }\n    if (!spenderAddress) {\n      throw new Error('spenderAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: accountAddress\n    }\n    const contractMethod = abis.erc20.find(method => method.name === 'approve')\n    const encodedABI = api.eth.abi.encodeFunctionCall(contractMethod, [\n      spenderAddress,\n      amount\n    ])\n\n\n\n\n    return instance.methods\n      .operateOnExchangeDirectly(tokenAddress, encodedABI)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchangeDirectly(tokenAddress, encodedABI)\n          .send(options)\n      })\n  }\n\n  fillOrderOnZeroExExchange = (\n    managerAccount,\n    orderAddresses,\n    orderValues,\n    amount,\n    shouldThrowOnInsufficientBalanceOrAllowance,\n    v,\n    r,\n    s,\n    ZeroExConfig\n  ) => {\n    if (!managerAccount) {\n      throw new Error('managerAccount needs to be provided')\n    }\n    if (!orderAddresses) {\n      throw new Error('orderAddresses needs to be provided')\n    }\n    if (!orderValues) {\n      throw new Error('orderValues needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    if (!shouldThrowOnInsufficientBalanceOrAllowance) {\n      throw new Error(\n        'shouldThrowOnInsufficientBalanceOrAllowance needs to be provided'\n      )\n    }\n    if (!v || !r || !s) {\n      throw new Error('v r s need to be provided')\n    }\n    if (!ZeroExConfig) {\n      throw new Error('ZeroExConfig need to be provided')\n    }\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccount\n    }\n    const contractMethod = abis.zeroExExchange.find(\n      method => method.name === 'fillOrder'\n    )\n    const encodedABI = api.eth.abi.encodeFunctionCall(contractMethod, [\n      orderAddresses,\n      orderValues,\n      amount,\n      shouldThrowOnInsufficientBalanceOrAllowance,\n      v,\n      r,\n      s\n    ])\n\n    // const encodedABI = '0xbc61394a00000000000000000000000040584e290e5c56114c8bcf72fa3d403d1166b3d700000000000000000000000000000000000000000000000000000000000000000000000000000000000000001dad4783cf3fe3085c1426157ab175a6119a04ba000000000000000000000000d0a1e359811322d97991e03f863a0c30c2cf029c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001638384d81aace3db94ad2d6f00aaa892a70c34850dcb894fde0f5eb1c50fd50b4320c16df400000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001c969d3a50aab834aee8f7ee57a885746502933168c63071c6c270848ad502032b466238fa9e7bc9f9a5dd3e0ca738512b0ba16ecf770f12369d65a4cd293a6fac'\n\n\n\n\n\n    console.log(\n      'shouldThrowOnInsufficientBalanceOrAllowance ',\n      shouldThrowOnInsufficientBalanceOrAllowance\n    )\n\n\n\n    console.log(\n      'ZeroExConfig.exchangeAddress    ',\n      ZeroExConfig.exchangeAddress\n    )\n    return instance.methods\n      .operateOnExchangeDirectly(\n        ZeroExConfig.exchangeAddress,\n        encodedABI\n      )\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchangeDirectly(\n            ZeroExConfig.exchangeAddress,\n            encodedABI\n          )\n          .send(options)\n      })\n  }\n\n  cancelOrderOnZeroExExchange = (\n    managerAccount,\n    orderAddresses,\n    orderValues,\n    cancelTakerTokenAmount,\n    exchangeAddress\n  ) => {\n    if (!managerAccount) {\n      throw new Error('managerAccount needs to be provided')\n    }\n    if (!orderAddresses) {\n      throw new Error('orderAddresses needs to be provided')\n    }\n    if (!orderValues) {\n      throw new Error('orderValues needs to be provided')\n    }\n    if (!cancelTakerTokenAmount) {\n      throw new Error('cancelTakerTokenAmount needs to be provided')\n    }\n    if (!exchangeAddress) {\n      throw new Error('exchangeAddress need to be provided')\n    }\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccount\n    }\n    const contractMethod = abis.zeroExExchange.find(\n      method => method.name === 'cancelOrder'\n    )\n    const encodedABI = api.eth.abi.encodeFunctionCall(contractMethod, [\n      orderAddresses,\n      orderValues,\n      cancelTakerTokenAmount\n    ])\n\n    // const encodedABI = '0xbc61394a00000000000000000000000040584e290e5c56114c8bcf72fa3d403d1166b3d700000000000000000000000000000000000000000000000000000000000000000000000000000000000000001dad4783cf3fe3085c1426157ab175a6119a04ba000000000000000000000000d0a1e359811322d97991e03f863a0c30c2cf029c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001638384d81aace3db94ad2d6f00aaa892a70c34850dcb894fde0f5eb1c50fd50b4320c16df400000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001c969d3a50aab834aee8f7ee57a885746502933168c63071c6c270848ad502032b466238fa9e7bc9f9a5dd3e0ca738512b0ba16ecf770f12369d65a4cd293a6fac'\n\n\n\n\n\n\n    return instance.methods\n      .operateOnExchangeDirectly(exchangeAddress, encodedABI)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchangeDirectly(exchangeAddress, encodedABI)\n          .send(options)\n      })\n  }\n\n  setInfiniteAllowace = (accountAddress, spenderAddress, tokenAddress) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!tokenAddress) {\n      throw new Error('tokenAddress needs to be provided')\n    }\n    if (!spenderAddress) {\n      throw new Error('spenderAddress needs to be provided')\n    }\n    const instance = this._instance\n    let options = {\n      from: accountAddress\n    }\n\n\n    return instance.methods\n      .setInfiniteAllowance(spenderAddress, tokenAddress)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .setInfiniteAllowance(spenderAddress, tokenAddress)\n          .send(options)\n      })\n  }\n\n  buyDrago = (accountAddress, amount) => {\n    const instance = this._instance\n    let options = {\n      from: accountAddress,\n      value: amount\n    }\n    return instance.methods\n      .buyDrago()\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() =>\n        instance.methods\n          .buyDrago()\n          .send(options)\n          // .on('confirmation', function(confirmationNumber, receipt) {})\n          // .on('receipt', function(receipt) {})\n          .then(result => {\n\n            return result\n          })\n      )\n  }\n\n  sellDrago = (accountAddress, amount) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n    const instance = this._instance\n    let options = {\n      from: accountAddress\n    }\n\n    return instance.methods\n      .sellDrago(amount)\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods.sellDrago(amount).send(options)\n      })\n  }\n\n  setPrices = (accountAddress, buyPrice, sellPrice) => {\n    if (!accountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!buyPrice) {\n      throw new Error('buyPrice needs to be provided')\n    }\n    if (!sellPrice) {\n      throw new Error('sellPrice needs to be provided')\n    }\n    const instance = this._instance\n    let options = {\n      from: accountAddress\n    }\n    instance.options.from = accountAddress\n    const api = this._api\n    const buyPriceWei = api.utils.toWei(buyPrice, 'ether')\n    const sellPriceWei = api.utils.toWei(sellPrice, 'ether')\n    return instance.methods\n      .setPrices(\n        sellPriceWei,\n        buyPriceWei,\n        1,\n        api.utils.fromAscii('random'),\n        api.utils.fromAscii('random')\n      )\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        // console.log(gasEstimate.toFormat())\n        options.gas = gasEstimate\n\n        return instance.methods\n          .setPrices(\n            sellPriceWei,\n            buyPriceWei,\n            1,\n            api.utils.fromAscii('random'),\n            api.utils.fromAscii('random')\n          )\n          .send(options)\n      })\n    // .catch((error) => {\n    //   console.error('error', error)\n    // })\n  }\n\n  wrapETHZeroEx = async (wrapperAddress, managerAccountAddress, amount) => {\n    if (!managerAccountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!wrapperAddress) {\n      throw new Error('wrapperAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n\n\n\n\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccountAddress\n    }\n    const contractMethod = {\n      name: 'wrapEth',\n      type: 'function',\n      inputs: [\n        {\n          type: 'address',\n          name: 'wrapper'\n        },\n        {\n          type: 'uint256',\n          name: 'amount'\n        }\n      ]\n    }\n\n    const encodedABI = await api.eth.abi.encodeFunctionCall(contractMethod, [\n      wrapperAddress,\n      amount\n    ])\n    return instance.methods\n      .operateOnExchange(wrapperAddress, [encodedABI])\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchange(wrapperAddress, [encodedABI])\n          .send(options)\n      })\n  }\n\n  unWrapETHZeroEx = async (wrapperAddress, managerAccountAddress, amount) => {\n    if (!wrapperAddress) {\n      throw new Error('wrapperAddress needs to be provided')\n    }\n    if (!managerAccountAddress) {\n      throw new Error('accountAddress needs to be provided')\n    }\n    if (!amount) {\n      throw new Error('amount needs to be provided')\n    }\n\n\n\n\n    const instance = this._instance\n    const api = this._api\n    let options = {\n      from: managerAccountAddress\n    }\n    const contractMethod = {\n      name: 'unwrapEth',\n      type: 'function',\n      inputs: [\n        {\n          type: 'address',\n          name: 'wrapper'\n        },\n        {\n          type: 'uint256',\n          name: 'amount'\n        }\n      ]\n    }\n\n    const encodedABI = await api.eth.abi.encodeFunctionCall(contractMethod, [\n      wrapperAddress,\n      amount\n    ])\n\n    return instance.methods\n      .operateOnExchange(wrapperAddress, [encodedABI])\n      .estimateGas(options)\n      .then(gasEstimate => {\n\n        options.gas = gasEstimate\n      })\n      .then(() => {\n        return instance.methods\n          .operateOnExchange(wrapperAddress, [encodedABI])\n          .send(options)\n      })\n  }\n\n  getMultiBalancesAndAddressesFromAddresses = async tokenAddresses => {\n    if (!Array.isArray(tokenAddresses)) {\n      throw new Error('tokenAddresses needs to be an array of token addresses')\n    }\n    const api = this._api\n    const networkId = await api.eth.net.getId()\n    const instance = this._instance\n    const getMultipleBalancesInstance = new api.eth.Contract(\n      abis.getMultipleBalances,\n      MULTI_BALANCE_CONTRACT_ADDRESS[networkId]\n    )\n    tokenAddresses = tokenAddresses.map(address => address.toLowerCase())\n    return getMultipleBalancesInstance.methods\n      .getMultiBalancesAndAddressesFromAddresses(\n        tokenAddresses,\n        instance._address.toLowerCase()\n      )\n      .call({})\n  }\n}\n\nexport default DragoWeb3\n","// Copyright 2017 Rigo Investment Sagl.\n// This file is part of RigoBlock.\n\nimport * as abis from '../../contracts/abi'\nimport { VAULTEVENTFUL } from '../../utils/const'\nimport Registry from '../registry'\n\nclass VaultEventfulWeb3 {\n  constructor(api) {\n    if (!api) {\n      throw new Error('API instance needs to be provided to Contract')\n    }\n    this._api = api\n    this._abi = abis.vaulteventful\n    this._registry = new Registry(api)\n    this._constunctorName = this.constructor.name\n    this._contractName = VAULTEVENTFUL\n    this._contractAddress = ''\n  }\n\n  get instance() {\n    if (typeof this._instance === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._instance\n  }\n\n  get contract() {\n    if (typeof this._contract === 'undefined') {\n      throw new Error('The contract needs to be initialized.')\n    }\n    return this._contract\n  }\n\n  get hexSignature() {\n    return this._hexSignature\n  }\n\n  get abi() {\n    return this._abi\n  }\n\n  init = () => {\n    if (typeof global.baseContracts !== 'undefined') {\n      const instance = new this._api.eth.Contract(\n        global.baseContracts['VaultEventful'].abi,\n        global.baseContracts['VaultEventful'].address\n      )\n      this._contract = instance\n      this._contractAddress = global.baseContracts['VaultEventful'].address\n      let hexSignature = []\n      global.baseContracts['VaultEventful'].abi.map(function(element) {\n        if (element.type === 'event') {\n          return (hexSignature[element.name] = element.signature)\n        }\n        return true\n      })\n      this._hexSignature = hexSignature\n      return this._contract\n    }\n\n    const contractAbi = this._abi\n    const contractName = this._contractName\n    return typeof this._contract !== 'undefined'\n      ? this._contract\n      : this._registry.instance(contractAbi, contractName).then(contract => {\n          this._contract = contract\n          this._contractAddress = contract._address\n          let hexSignature = []\n          this._abi.map(function(element) {\n            if (element.type === 'event') {\n              return (hexSignature[element.name] = element.signature)\n            }\n            return true\n          })\n\n          this._hexSignature = hexSignature\n          return this._contract\n        })\n  }\n\n  getAllLogs = (\n    options = {\n      topics: [null, null, null, null],\n      fromBlock: 0,\n      toBlock: 'latest'\n    }\n  ) => {\n    return this._contract\n      .getPastEvents('allEvents', {\n        fromBlock: options.fromBlock,\n        toBlock: options.toBlock,\n        topics: options.topics\n      })\n      .then(function(logs) {\n        return logs\n      })\n  }\n}\n\nexport default VaultEventfulWeb3\n","import { errors } from 'web3-core-helpers'\nimport ReconnectingWebSocket from 'reconnecting-websocket/dist/reconnecting-websocket-cjs'\n\nlet Ws\nlet _btoa = null\nlet parseURL = null\nif (typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined') {\n  Ws = window['WebSocket']\n  _btoa = btoa\n  parseURL = function(url) {\n    return new URL(url)\n  }\n} else {\n  Ws = require('websocket').w3cwebsocket\n  _btoa = function(str) {\n    return Buffer(str).toString('base64')\n  }\n  let url = require('url')\n  if (url.URL) {\n    // Use the new Node 6+ API for parsing URLs that supports username/password\n    let newURL = url.URL\n    parseURL = function(url) {\n      return new newURL(url)\n    }\n  } else {\n    // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n    parseURL = require('url').parse\n  }\n}\n// Default connection ws://localhost:8546\nlet WebsocketProvider = function WebsocketProvider(url, options) {\n  let _this = this\n  this.responseCallbacks = {}\n  this.notificationCallbacks = []\n\n  options = options || {}\n  this._customTimeout = options.timeout\n\n  // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n  let parsedURL = parseURL(url)\n  let headers = options.headers || {}\n  let protocol = options.protocol || undefined\n  if (parsedURL.username && parsedURL.password) {\n    headers.authorization =\n      'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password)\n  }\n\n  // Allow a custom client configuration\n  let clientConfig = options.clientConfig || undefined\n\n  // When all node core implementations that do not have the\n  // WHATWG compatible URL parser go out of service this line can be removed.\n  if (parsedURL.auth) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.auth)\n  }\n\n  let recWs = new ReconnectingWebSocket(url, '', { minReconnectionDelay: 1 })\n\n  this.connection = recWs\n\n  this.addDefaultEvents()\n\n  // LISTEN FOR CONNECTION RESPONSES\n  this.connection.onmessage = function(e) {\n    /*jshint maxcomplexity: 6 */\n    let data = typeof e.data === 'string' ? e.data : ''\n\n    _this._parseResponse(data).forEach(function(result) {\n      let id = null\n\n      // get the id which matches the returned id\n      if (Array.isArray(result)) {\n        result.forEach(function(load) {\n          if (_this.responseCallbacks[load.id]) id = load.id\n        })\n      } else {\n        id = result.id\n      }\n\n      // notification\n      if (\n        !id &&\n        result &&\n        result.method &&\n        result.method.indexOf('_subscription') !== -1\n      ) {\n        _this.notificationCallbacks.forEach(function(callback) {\n          if (typeof callback === 'function') callback(result)\n        })\n\n        // fire the callback\n      } else if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](null, result)\n        delete _this.responseCallbacks[id]\n      }\n    })\n  }\n\n  // make property `connected` which will return the current connection status\n  Object.defineProperty(this, 'connected', {\n    get: function() {\n      return (\n        this.connection && this.connection.readyState === this.connection.OPEN\n      )\n    },\n    enumerable: true\n  })\n}\n\n/**\n Will add the error and end event to timeout existing calls\n\n @method addDefaultEvents\n */\nWebsocketProvider.prototype.addDefaultEvents = function() {\n  let _this = this\n\n  this.connection.onerror = function() {\n    _this._timeout()\n  }\n\n  this.connection.onclose = function() {\n    _this._timeout()\n\n    // reset all requests and callbacks\n    _this.reset()\n  }\n\n  // this.connection.on('timeout', function(){\n  //     _this._timeout();\n  // });\n}\n\n/**\n Will parse the response and make an array out of it.\n\n @method _parseResponse\n @param {String} data\n */\nWebsocketProvider.prototype._parseResponse = function(data) {\n  let _this = this,\n    returnValues = []\n\n  // DE-CHUNKER\n  let dechunkedData = data\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n\n  dechunkedData.forEach(function(data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data\n\n    let result = null\n\n    try {\n      result = JSON.parse(data)\n    } catch (e) {\n      _this.lastChunk = data\n\n      // start timeout to cancel all requests\n      clearTimeout(_this.lastChunkTimeout)\n      _this.lastChunkTimeout = setTimeout(function() {\n        _this._timeout()\n        throw errors.InvalidResponse(data)\n      }, 1000 * 15)\n\n      return\n    }\n\n    // cancel timeout and set chunk to null\n    clearTimeout(_this.lastChunkTimeout)\n    _this.lastChunk = null\n\n    if (result) returnValues.push(result)\n  })\n\n  return returnValues\n}\n\n/**\n Adds a callback to the responseCallbacks object,\n which will be called if a response matching the response Id will arrive.\n\n @method _addResponseCallback\n */\nWebsocketProvider.prototype._addResponseCallback = function(payload, callback) {\n  let id = payload.id || payload[0].id\n  let method = payload.method || payload[0].method\n\n  this.responseCallbacks[id] = callback\n  this.responseCallbacks[id].method = method\n\n  let _this = this\n\n  // schedule triggering the error response if a custom timeout is set\n  if (this._customTimeout) {\n    setTimeout(function() {\n      if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](\n          errors.ConnectionTimeout(_this._customTimeout)\n        )\n        delete _this.responseCallbacks[id]\n      }\n    }, this._customTimeout)\n  }\n}\n\n/**\n Timeout all requests when the end/error event is fired\n\n @method _timeout\n */\nWebsocketProvider.prototype._timeout = function() {\n  for (let key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on WS'))\n      delete this.responseCallbacks[key]\n    }\n  }\n}\n\nWebsocketProvider.prototype.send = function(payload, callback) {\n  this.connection.send(JSON.stringify(payload))\n  this._addResponseCallback(payload, callback)\n}\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.on = function(type, callback) {\n  if (typeof callback !== 'function')\n    throw new Error('The second parameter callback must be a function.')\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback)\n      break\n\n    case 'connect':\n      this.connection.onopen = callback\n      break\n\n    case 'end':\n      this.connection.onclose = callback\n      break\n\n    case 'error':\n      this.connection.onerror = callback\n      break\n\n    // default:\n    //   this.connection.on(type, callback)\n    //   break\n  }\n}\n\n// TODO add once\n\n/**\n Removes event listener\n\n @method removeListener\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.removeListener = function(type, callback) {\n  let _this = this\n\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function(cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1)\n      })\n      break\n\n    // TODO remvoving connect missing\n\n    // default:\n    //     this.connection.removeListener(type, callback);\n    //     break;\n  }\n}\n\n/**\n Removes all event listeners\n\n @method removeAllListeners\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n */\nWebsocketProvider.prototype.removeAllListeners = function(type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = []\n      break\n\n    // TODO remvoving connect properly missing\n\n    case 'connect':\n      this.connection.onopen = null\n      break\n\n    case 'end':\n      this.connection.onclose = null\n      break\n\n    case 'error':\n      this.connection.onerror = null\n      break\n\n    default:\n      // this.connection.removeAllListeners(type)\n      break\n  }\n}\n\n/**\n Resets the providers, clears all callbacks\n\n @method reset\n */\nWebsocketProvider.prototype.reset = function() {\n  this._timeout()\n  this.notificationCallbacks = []\n\n  // this.connection.removeAllListeners('error')\n  // this.connection.removeAllListeners('end')\n  // this.connection.removeAllListeners('timeout')\n\n  this.addDefaultEvents()\n}\n\nWebsocketProvider.prototype.disconnect = function() {\n  if (this.connection) {\n    this.connection.close()\n  }\n}\n\n// module.exports = WebsocketProvider\n\nexport default WebsocketProvider\n","/** @license\n *\n *     Colour Palette Generator script.\n *     Copyright (c) 2014 Google Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License.  You may\n *     obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied.  See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n * Furthermore, ColorBrewer colour schemes are covered by the following:\n *\n *     Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and\n *                        The Pennsylvania State University.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License. You may obtain\n *     a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied. See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n *     Redistribution and use in source and binary forms, with or without\n *     modification, are permitted provided that the following conditions are\n *     met:\n *\n *     1. Redistributions as source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *     2. The end-user documentation included with the redistribution, if any,\n *     must include the following acknowledgment: \"This product includes color\n *     specifications and designs developed by Cynthia Brewer\n *     (http://colorbrewer.org/).\" Alternately, this acknowledgment may appear\n *     in the software itself, if and wherever such third-party\n *     acknowledgments normally appear.\n *\n *     4. The name \"ColorBrewer\" must not be used to endorse or promote products\n *     derived from this software without prior written permission. For written\n *     permission, please contact Cynthia Brewer at cbrewer@psu.edu.\n *\n *     5. Products derived from this software may not be called \"ColorBrewer\",\n *     nor may \"ColorBrewer\" appear in their name, without prior written\n *     permission of Cynthia Brewer.\n *\n * Furthermore, Solarized colour schemes are covered by the following:\n *\n *     Copyright (c) 2011 Ethan Schoonover\n *\n *     Permission is hereby granted, free of charge, to any person obtaining\n *     a copy of this software and associated documentation files (the\n *     \"Software\"), to deal in the Software without restriction, including\n *     without limitation the rights to use, copy, modify, merge, publish,\n *     distribute, sublicense, and/or sell copies of the Software, and to\n *     permit persons to whom the Software is furnished to do so, subject to\n *     the following conditions:\n *\n *     The above copyright notice and this permission notice shall be included\n *     in all copies or substantial portions of the Software.\n *\n *     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n *     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n *     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n *     LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n *     OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n *     WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nlet palette = (function() {\n  let proto = Array.prototype\n  let slice = function(arr, opt_begin, opt_end) {\n    return proto.slice.apply(arr, proto.slice.call(arguments, 1))\n  }\n\n  let function_type = typeof function() {}\n\n  let INF = 1000000000 // As far as we're concerned, that's infinity. ;)\n\n  /**\n   * Generate a colour palette from given scheme.\n   *\n   * If scheme argument is not a function it is passed to palettes.listSchemes\n   * function (along with the number argument).  This may result in an array\n   * of more than one available scheme.  If that is the case, scheme at\n   * opt_index position is taken.\n   *\n   * This allows using different palettes for different data without having to\n   * name the schemes specifically, for example:\n   *\n   *     palette_for_foo = palette('sequential', 10, 0);\n   *     palette_for_bar = palette('sequential', 10, 1);\n   *     palette_for_baz = palette('sequential', 10, 2);\n   *\n   * @param {!palette.SchemeType|string|palette.Palette} scheme Scheme to\n   *     generate palette for.  Either a function constructed with\n   *     palette.Scheme object, or anything that palette.listSchemes accepts\n   *     as name argument.\n   * @param {number} number Number of colours to return.  If negative, absolute\n   *     value is taken and colours will be returned in reverse order.\n   * @param {number=} opt_index If scheme is a name of a group or an array and\n   *     results in more than one scheme, index of the scheme to use.  The\n   *     index wraps around.\n   * @param {...*} varargs Additional arguments to pass to palette or colour\n   *     generator (if the chosen scheme uses those).\n   * @return {Array<string>} Array of abs(number) 'RRGGBB' strings or null if\n   *     no matching scheme was found.\n   */\n  let palette = function(scheme, number, opt_index, varargs) {\n    number |= 0\n    if (number === 0) {\n      return []\n    }\n\n    if (typeof scheme !== function_type) {\n      let arr = palette.listSchemes(\n        /** @type {string|palette.Palette} */ (scheme),\n        number\n      )\n      if (!arr.length) {\n        return null\n      }\n      scheme = arr[(opt_index || 0) % arr.length]\n    }\n\n    let args = slice(arguments, 2)\n    args[0] = number\n    return scheme.apply(scheme, args)\n  }\n\n  /**\n   * Returns a callable colour scheme object.\n   *\n   * Just after being created, the scheme has no colour palettes and no way of\n   * generating any, thus generate method will return null.  To turn scheme\n   * into a useful object, addPalette, addPalettes or setColorFunction methods\n   * need to be used.\n   *\n   * To generate a colour palette with given number colours using function\n   * returned by this method, just call it with desired number of colours.\n   *\n   * Since this function *returns* a callable object, it must *not* be used\n   * with the new operator.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>=} opt_groups A group name or list of\n   *     groups the scheme should be categorised under.  Three typical groups\n   *     to use are 'qualitative', 'sequential' and 'diverging', but any\n   *     groups may be created.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme = function(name, opt_groups) {\n    /**\n     * A map from a number to a colour palettes with given number of colours.\n     * @type {!Object<number, palette.Palette>}\n     */\n    let palettes = {}\n\n    /**\n     * The biggest palette in palettes map.\n     * @type {number}\n     */\n    let palettes_max = 0\n\n    /**\n     * The smallest palette in palettes map.\n     * @type {number}\n     */\n    let palettes_min = INF\n\n    let makeGenerator = function() {\n      if (arguments.length <= 1) {\n        return self.color_func.bind(self)\n      } else {\n        let args = slice(arguments)\n        return function(x) {\n          args[0] = x\n          return self.color_func.apply(self, args)\n        }\n      }\n    }\n\n    /**\n     * Generate a colour palette from the scheme.\n     *\n     * If there was a palette added with addPalette (or addPalettes) with\n     * enough colours, that palette will be used.  Otherwise, if colour\n     * function has been set using setColorFunction method, that function will\n     * be used to generate the palette.  Otherwise null is returned.\n     *\n     * @param {number} number Number of colours to return.  If negative,\n     *     absolute value is taken and colours will be returned in reverse\n     *     order.\n     * @param {...*} varargs Additional arguments to pass to palette or colour\n     *     generator (if the chosen scheme uses those).\n     */\n    let self = function(number, varargs) {\n      number |= 0\n      if (!number) {\n        return []\n      }\n\n      let _number = number\n      number = Math.abs(number)\n\n      if (number <= palettes_max) {\n        let i\n        for (i = Math.max(number, palettes_min); !(i in palettes); ++i) {\n          /* nop */\n        }\n        let colors = palettes[i]\n        if (i > number) {\n          let take_head =\n            'shrinking_takes_head' in colors\n              ? colors.shrinking_takes_head\n              : self.shrinking_takes_head\n          if (take_head) {\n            colors = colors.slice(0, number)\n            i = number\n          } else {\n            return palette.generate(\n              function(x) {\n                return colors[Math.round(x)]\n              },\n              _number,\n              0,\n              colors.length - 1\n            )\n          }\n        }\n        colors = colors.slice()\n        if (_number < 0) {\n          colors.reverse()\n        }\n        return colors\n      } else if (self.color_func) {\n        return palette.generate(\n          makeGenerator.apply(self, arguments),\n          _number,\n          0,\n          1,\n          self.color_func_cyclic\n        )\n      } else {\n        return null\n      }\n    }\n\n    /**\n     * The name of the palette.\n     * @type {string}\n     */\n    self.scheme_name = name\n\n    /**\n     * A list of groups the palette belongs to.\n     * @type {!Array<string>}\n     */\n    self.groups = opt_groups\n      ? typeof opt_groups === 'string'\n        ? [opt_groups]\n        : opt_groups\n      : []\n\n    /**\n     * The biggest palette this scheme can generate.\n     * @type {number}\n     */\n    self.max = 0\n\n    /**\n     * The biggest palette this scheme can generate that is colour-blind\n     * friendly.\n     * @type {number}\n     */\n    self.cbf_max = INF\n\n    /**\n     * Adds a colour palette to the colour scheme.\n     *\n     * @param {palette.Palette} palette An array of 'RRGGBB' strings\n     *     representing the palette to add.\n     * @param {boolean=} opt_is_cbf Whether the palette is colourblind friendly.\n     */\n    self.addPalette = function(palette, opt_is_cbf) {\n      let len = palette.length\n      if (len) {\n        palettes[len] = palette\n        palettes_min = Math.min(palettes_min, len)\n        palettes_max = Math.max(palettes_max, len)\n        self.max = Math.max(self.max, len)\n        if (!opt_is_cbf && len !== 1) {\n          self.cbf_max = Math.min(self.cbf_max, len - 1)\n        }\n      }\n    }\n\n    /**\n     * Adds number of colour palettes to the colour scheme.\n     *\n     * @param {palette.PalettesList} palettes A map or an array of colour\n     *     palettes to add.  If map, i.e.  object, is used, properties should\n     *     use integer property names.\n     * @param {number=} opt_max Size of the biggest palette in palettes set.\n     *     If not set, palettes must have a length property which will be used.\n     * @param {number=} opt_cbf_max Size of the biggest palette which is still\n     *     colourblind friendly.  1 by default.\n     */\n    self.addPalettes = function(palettes, opt_max, opt_cbf_max) {\n      opt_max = opt_max || palettes.length\n      for (let i = 0; i < opt_max; ++i) {\n        if (i in palettes) {\n          self.addPalette(palettes[i], true)\n        }\n      }\n      self.cbf_max = Math.min(self.cbf_max, opt_cbf_max || 1)\n    }\n\n    /**\n     * Enable shrinking palettes taking head of the list of colours.\n     *\n     * When user requests n-colour palette but the smallest palette added with\n     * addPalette (or addPalettes) is m-colour one (where n < m), n colours\n     * across the palette will be returned.  For example:\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(['000000', 'bcbcbc', 'ffffff']);\n     *     var pal = ex(2);\n     *     // pal == ['000000', 'ffffff']\n     *\n     * This works for palettes where the distance between colours is\n     * correlated to distance in the palette array, which is true in gradients\n     * such as the one above.\n     *\n     * To turn this feature off shrinkByTakingHead can be set to true either\n     * for all palettes in the scheme (if opt_idx is not given) or for palette\n     * with given number of colours only.  In general, setting the option for\n     * given palette overwrites whatever has been set for the scheme.  The\n     * default, as described above, is false.\n     *\n     * Alternatively, the feature can be enabled by setting shrinking_takes_head\n     * property for the palette Array or the scheme object.\n     *\n     * For example, all of the below give equivalent results:\n     *     var pal = ['ff0000', '00ff00', '0000ff'];\n     *\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true);      // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true, 3);   // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     pal.shrinking_takes_head = true;  // ex(2) == ['ff0000', '00ff00']\n     *\n     * @param {boolean} enabled Whether to enable or disable the “shrinking\n     *     takes head” feature.  It is disabled by default.\n     * @param {number=} opt_idx If given, the “shrinking takes head” option\n     *     for palette with given number of colours is set.  If such palette\n     *     does not exist, nothing happens.\n     */\n    self.shrinkByTakingHead = function(enabled, opt_idx) {\n      if (opt_idx !== void 0) {\n        if (opt_idx in palettes) {\n          palettes[opt_idx].shrinking_takes_head = !!enabled\n        }\n      } else {\n        self.shrinking_takes_head = !!enabled\n      }\n    }\n\n    /**\n     * Sets a colour generation function of the colour scheme.\n     *\n     * The function must accept a singe number argument whose value can be from\n     * 0.0 to 1.0, and return a colour as an 'RRGGBB' string.  This function\n     * will be used when generating palettes, i.e. if 11-colour palette is\n     * requested, this function will be called with arguments 0.0, 0.1, …, 1.0.\n     *\n     * If the palette generated by the function is colourblind friendly,\n     * opt_is_cbf should be set to true.\n     *\n     * In some cases, it is not desirable to reach 1.0 when generating\n     * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n     * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n     * it's desired to stop short the end of the range when generating\n     * a palette.  To accomplish this, opt_cyclic should be set to true.\n     *\n     * @param {palette.ColorFunction} func A colour generator function.\n     * @param {boolean=} opt_is_cbf Whether palette generate with the function\n     *     is colour-blind friendly.\n     * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n     *     one at 1.0.\n     */\n    self.setColorFunction = function(func, opt_is_cbf, opt_cyclic) {\n      self.color_func = func\n      self.color_func_cyclic = !!opt_cyclic\n      self.max = INF\n      if (!opt_is_cbf && self.cbf_max === INF) {\n        self.cbf_max = 1\n      }\n    }\n\n    self.color = function(x, varargs) {\n      if (self.color_func) {\n        return self.color_func.apply(this, arguments)\n      } else {\n        return null\n      }\n    }\n\n    return self\n  }\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling addPalettes\n   * method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {!Object<number, palette.Palette>|!Array<palette.Palette>}\n   *     palettes A map or an array of colour palettes to add.  If map, i.e.\n   *     object, is used, properties should use integer property names.\n   * @param {number=} opt_max Size of the biggest palette in palettes set.\n   *     If not set, palettes must have a length property which will be used.\n   * @param {number=} opt_cbf_max Size of the biggest palette which is still\n   *     colourblind friendly.  1 by default.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.fromPalettes = function(\n    name,\n    groups,\n    palettes,\n    opt_max,\n    opt_cbf_max\n  ) {\n    let scheme = palette.Scheme(name, groups)\n    scheme.addPalettes.apply(scheme, slice(arguments, 2))\n    return scheme\n  }\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling\n   * setColorFunction method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {palette.ColorFunction} func A colour generator function.\n   * @param {boolean=} opt_is_cbf Whether palette generate with the function\n   *     is colour-blind friendly.\n   * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n   *     one at 1.0.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.withColorFunction = function(\n    name,\n    groups,\n    func,\n    opt_is_cbf,\n    opt_cyclic\n  ) {\n    let scheme = palette.Scheme(name, groups)\n    scheme.setColorFunction.apply(scheme, slice(arguments, 2))\n    return scheme\n  }\n\n  /**\n   * A map of registered schemes.  Maps a scheme or group name to a list of\n   * scheme objects.  Property name is either 'n-<name>' for single scheme\n   * names or 'g-<name>' for scheme group names.\n   *\n   * @type {!Object<string, !Array<!Object>>}\n   */\n  let registered_schemes = {}\n\n  /**\n   * Registers a new colour scheme.\n   *\n   * @param {!palette.SchemeType} scheme The scheme to add.\n   */\n  palette.register = function(scheme) {\n    registered_schemes['n-' + scheme.scheme_name] = [scheme]\n    scheme.groups.forEach(function(g) {\n      ;(registered_schemes['g-' + g] = registered_schemes['g-' + g] || []).push(\n        scheme\n      )\n    })\n    ;(registered_schemes['g-all'] = registered_schemes['g-all'] || []).push(\n      scheme\n    )\n  }\n\n  /**\n   * List all schemes that match given name and number of colours.\n   *\n   * name argument can be either a string or an array of strings.  In the\n   * former case, the function acts as if the argument was an array with name\n   * as a single argument (i.e. “palette.listSchemes('foo')” is exactly the same\n   * as “palette.listSchemes(['foo'])”).\n   *\n   * Each name can be either name of a palette (e.g. 'tol-sq' for Paul Tol's\n   * sequential palette), or a name of a group (e.g. 'sequential' for all\n   * sequential palettes).  Name can therefore map to a single scheme or\n   * several schemes.\n   *\n   * Furthermore, name can be suffixed with '-cbf' to indicate that only\n   * schemes that are colourblind friendly should be returned.  For example,\n   * 'rainbow' returns a HSV rainbow scheme, but because it is not colourblind\n   * friendly, 'rainbow-cbf' returns no schemes.\n   *\n   * Some schemes may produce colourblind friendly palettes for some number of\n   * colours.  For example ColorBrewer's Dark2 scheme is colourblind friendly\n   * if no more than 3 colours are generated.  If opt_number is not specified,\n   * 'qualitative-cbf' will include 'cb-Dark2' but if opt_number is given as,\n   * say, 5 it won't.\n   *\n   * Name can also be 'all' which will return all registered schemes.\n   * Naturally, 'all-cbf' will return all colourblind friendly schemes.\n   *\n   * Schemes are added to the library using palette.register.  Schemes are\n   * created using palette.Scheme function.  By default, the following schemes\n   * are available:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     tol             Paul Tol's qualitative scheme, cbf, max 12 colours.\n   *     tol-dv          Paul Tol's diverging scheme, cbf.\n   *     tol-sq          Paul Tol's sequential scheme, cbf.\n   *     tol-rainbow     Paul Tol's qualitative scheme, cbf.\n   *\n   *     rainbow         A rainbow palette.\n   *\n   *     cb-YlGn         ColorBrewer sequential schemes.\n   *     cb-YlGnBu\n   *     cb-GnBu\n   *     cb-BuGn\n   *     cb-PuBuGn\n   *     cb-PuBu\n   *     cb-BuPu\n   *     cb-RdPu\n   *     cb-PuRd\n   *     cb-OrRd\n   *     cb-YlOrRd\n   *     cb-YlOrBr\n   *     cb-Purples\n   *     cb-Blues\n   *     cb-Greens\n   *     cb-Oranges\n   *     cb-Reds\n   *     cb-Greys\n   *\n   *     cb-PuOr         ColorBrewer diverging schemes.\n   *     cb-BrBG\n   *     cb-PRGn\n   *     cb-PiYG\n   *     cb-RdBu\n   *     cb-RdGy\n   *     cb-RdYlBu\n   *     cb-Spectral\n   *     cb-RdYlGn\n   *\n   *     cb-Accent       ColorBrewer qualitative schemes.\n   *     cb-Dark2\n   *     cb-Paired\n   *     cb-Pastel1\n   *     cb-Pastel2\n   *     cb-Set1\n   *     cb-Set2\n   *     cb-Set3\n   *\n   *     sol-base        Solarized base colours.\n   *     sol-accent      Solarized accent colours.\n   *\n   * The following groups are also available by default:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     all             All registered schemes.\n   *     sequential      All sequential schemes.\n   *     diverging       All diverging schemes.\n   *     qualitative     All qualitative schemes.\n   *     cb-sequential   All ColorBrewer sequential schemes.\n   *     cb-diverging    All ColorBrewer diverging schemes.\n   *     cb-qualitative  All ColorBrewer qualitative schemes.\n   *\n   * You can read more about Paul Tol's palettes at http://www.sron.nl/~pault/.\n   * You can read more about ColorBrewer at http://colorbrewer2.org.\n   *\n   * @param {string|!Array<string>} name A name of a colour scheme, of\n   *     a group of colour schemes, or an array of any of those.\n   * @param {number=} opt_number When requesting only colourblind friendly\n   *     schemes, number of colours the scheme must provide generating such\n   *     that the palette is still colourblind friendly.  2 by default.\n   * @return {!Array<!palette.SchemeType>} An array of colour scheme objects\n   *     matching the criteria.  Sorted by scheme name.\n   */\n  palette.listSchemes = function(name, opt_number) {\n    if (!opt_number) {\n      opt_number = 2\n    } else if (opt_number < 0) {\n      opt_number = -opt_number\n    }\n\n    let ret = []\n    ;(typeof name === 'string' ? [name] : name).forEach(function(n) {\n      let cbf = n.substring(n.length - 4) === '-cbf'\n      if (cbf) {\n        n = n.substring(0, n.length - 4)\n      }\n      let schemes =\n        registered_schemes['g-' + n] || registered_schemes['n-' + n] || []\n      for (var i = 0, scheme; (scheme = schemes[i]); ++i) {\n        if ((cbf ? scheme.cbf : scheme.max) >= opt_number) {\n          ret.push(scheme)\n        }\n      }\n    })\n\n    ret.sort(function(a, b) {\n      return a.scheme_name >= b.scheme_name\n        ? a.scheme_name > b.scheme_name\n          ? 1\n          : 0\n        : -1\n    })\n    return ret\n  }\n\n  /**\n   * Generates a palette using given colour generating function.\n   *\n   * The color_func callback must accept a singe number argument whose value\n   * can vary from 0.0 to 1.0 (or in general from opt_start to opt_end), and\n   * return a colour as an 'RRGGBB' string.  This function will be used when\n   * generating palettes, i.e. if 11-colour palette is requested, this\n   * function will be called with arguments 0.0, 0.1, …, 1.0.\n   *\n   * In some cases, it is not desirable to reach 1.0 when generating\n   * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n   * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n   * it's desired to stop short the end of the range when generating\n   * a palette.  To accomplish this, opt_cyclic should be set to true.\n   *\n   * opt_start and opt_end may be used to change the range the colour\n   * generation function is called with.  opt_end may be less than opt_start\n   * which will case to traverse the range in reverse.  Another way to reverse\n   * the palette is requesting negative number of colours.  The two methods do\n   * not always lead to the same results (especially if opt_cyclic is set).\n   *\n   * @param {palette.ColorFunction} color_func A colours generating callback\n   *     function.\n   * @param {number} number Number of colours to generate in the palette.  If\n   *     number is negative, colours in the palette will be reversed.  If only\n   *     one colour is requested, colour at opt_start will be returned.\n   * @param {number=} opt_start Optional starting point for the palette\n   *     generation function.  Zero by default.\n   * @param {number=} opt_end Optional ending point for the palette generation\n   *     function.  One by default.\n   * @param {boolean=} opt_cyclic If true, function will assume colour at\n   *     point opt_start is the same as one at opt_end.\n   * @return {palette.Palette} An array of 'RRGGBB' colours.\n   */\n  palette.generate = function(\n    color_func,\n    number,\n    opt_start,\n    opt_end,\n    opt_cyclic\n  ) {\n    if (Math.abs(number) < 1) {\n      return []\n    }\n\n    opt_start = opt_start === void 0 ? 0 : opt_start\n    opt_end = opt_end === void 0 ? 1 : opt_end\n\n    if (Math.abs(number) < 2) {\n      return [color_func(opt_start)]\n    }\n\n    let i = Math.abs(number)\n    let x = opt_start\n    let ret = []\n    let step = (opt_end - opt_start) / (opt_cyclic ? i : i - 1)\n\n    for (; --i >= 0; x += step) {\n      ret.push(color_func(x))\n    }\n    if (number < 0) {\n      ret.reverse()\n    }\n    return ret\n  }\n\n  /**\n   * Clamps value to [0, 1] range.\n   * @param {number} v Number to limit value of.\n   * @return {number} If v is inside of [0, 1] range returns v, otherwise\n   *     returns 0 or 1 depending which side of the range v is closer to.\n   */\n  let clamp = function(v) {\n    return v > 0 ? (v < 1 ? v : 1) : 0\n  }\n\n  /**\n   * Converts r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Red value of the colour in the range [0, 1].\n   * @param {number} g Green value of the colour in the range [0, 1].\n   * @param {number} b Blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.rgbColor = function(r, g, b) {\n    return [r, g, b]\n      .map(function(v) {\n        v = Number(Math.round(clamp(v) * 255)).toString(16)\n        return v.length === 1 ? '0' + v : v\n      })\n      .join('')\n  }\n\n  /**\n   * Converts a linear r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Linear red value of the colour in the range [0, 1].\n   * @param {number} g Linear green value of the colour in the range [0, 1].\n   * @param {number} b Linear blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.linearRgbColor = function(r, g, b) {\n    // http://www.brucelindbloom.com/index.html?Eqn_XYZ_to_RGB.html\n    return [r, g, b]\n      .map(function(v) {\n        v = clamp(v)\n        if (v <= 0.0031308) {\n          v = 12.92 * v\n        } else {\n          v = 1.055 * Math.pow(v, 1 / 2.4) - 0.055\n        }\n        v = Number(Math.round(v * 255)).toString(16)\n        return v.length === 1 ? '0' + v : v\n      })\n      .join('')\n  }\n\n  /**\n   * Converts an HSV colours to RRGGBB hex representation.\n   * @param {number} h Hue in the range [0, 1].\n   * @param {number=} opt_s Saturation in the range [0, 1].  One by default.\n   * @param {number=} opt_v Value in the range [0, 1].  One by default.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.hsvColor = function(h, opt_s, opt_v) {\n    h *= 6\n    let s = opt_s === void 0 ? 1 : clamp(opt_s)\n    let v = opt_v === void 0 ? 1 : clamp(opt_v)\n    let x = v * (1 - s * Math.abs((h % 2) - 1))\n    let m = v * (1 - s)\n    switch (Math.floor(h) % 6) {\n      case 0:\n        return palette.rgbColor(v, x, m)\n      case 1:\n        return palette.rgbColor(x, v, m)\n      case 2:\n        return palette.rgbColor(m, v, x)\n      case 3:\n        return palette.rgbColor(m, x, v)\n      case 4:\n        return palette.rgbColor(x, m, v)\n      default:\n        return palette.rgbColor(v, m, x)\n    }\n  }\n\n  palette.register(\n    palette.Scheme.withColorFunction(\n      'rainbow',\n      'qualitative',\n      palette.hsvColor,\n      false,\n      true\n    )\n  )\n\n  return palette\n})()\n\n/** @typedef {function(number): string} */\npalette.ColorFunction = () => {}\n\n/** @typedef {!Array<string>} */\npalette.Palette = () => {}\n\n/** @typedef {!Object<number, palette.Palette>|!Array<palette.Palette>} */\npalette.PalettesList = () => {}\n\n/**\n * @typedef {\n *   function(number, ...?): Array<string>|\n *   {\n *     scheme_name: string,\n *     groups: !Array<string>,\n *     max: number,\n *     cbf_max: number,\n *     addPalette: function(!Array<string>, boolean=),\n *     addPalettes: function(palette.PalettesList, number=, number=),\n *     shrinkByTakingHead: function(boolean, number=),\n *     setColorFunction: function(palette.ColorFunction, boolean=, boolean=),\n *     color: function(number, ...?): ?string}}\n */\npalette.SchemeType = () => {}\n\n/* mpn65 palette start here. ************************************************/\n\n/* The ‘mpn65’ palette is designed for systems which show many graphs which\n   don’t have custom colour palettes chosen by humans or if number of necessary\n   colours isn’t know a priori. */\n;(function() {\n  let scheme = palette.Scheme.fromPalettes('mpn65', 'qualitative', [\n    [\n      'ff0029',\n      '377eb8',\n      '66a61e',\n      '984ea3',\n      '00d2d5',\n      'ff7f00',\n      'af8d00',\n      '7f80cd',\n      'b3e900',\n      'c42e60',\n      'a65628',\n      'f781bf',\n      '8dd3c7',\n      'bebada',\n      'fb8072',\n      '80b1d3',\n      'fdb462',\n      'fccde5',\n      'bc80bd',\n      'ffed6f',\n      'c4eaff',\n      'cf8c00',\n      '1b9e77',\n      'd95f02',\n      'e7298a',\n      'e6ab02',\n      'a6761d',\n      '0097ff',\n      '00d067',\n      '000000',\n      '252525',\n      '525252',\n      '737373',\n      '969696',\n      'bdbdbd',\n      'f43600',\n      '4ba93b',\n      '5779bb',\n      '927acc',\n      '97ee3f',\n      'bf3947',\n      '9f5b00',\n      'f48758',\n      '8caed6',\n      'f2b94f',\n      'eff26e',\n      'e43872',\n      'd9b100',\n      '9d7a00',\n      '698cff',\n      'd9d9d9',\n      '00d27e',\n      'd06800',\n      '009f82',\n      'c49200',\n      'cbe8ff',\n      'fecddf',\n      'c27eb6',\n      '8cd2ce',\n      'c4b8d9',\n      'f883b0',\n      'a49100',\n      'f48800',\n      '27d0df',\n      'a04a9b'\n    ]\n  ])\n  scheme.shrinkByTakingHead(true)\n  palette.register(scheme)\n})()\n\n/* Paul Tol's schemes start here. *******************************************/\n/* See http://www.sron.nl/~pault/ */\n;(function() {\n  let rgb = palette.rgbColor\n\n  /**\n   * Calculates value of a polynomial at given point.\n   * For example, poly(x, 1, 2, 3) calculates value of “1 + 2*x + 3*X²”.\n   * @param {number} x Value to calculate polynomial for.\n   * @param {...number} varargs Coefficients of the polynomial specified in\n   *     the order of rising powers of x including constant as the first\n   *     variable argument.\n   */\n  let poly = function(x, varargs) {\n    let i = arguments.length - 1,\n      n = arguments[i]\n    while (i > 1) {\n      n = n * x + arguments[--i]\n    }\n    return n\n  }\n\n  /**\n   * Calculate approximate value of error function with maximum error of 0.0005.\n   * See <https://en.wikipedia.org/wiki/Error_function>.\n   * @param {number} x Argument of the error function.\n   * @return {number} Value of error function for x.\n   */\n  let erf = function(x) {\n    // https://en.wikipedia.org/wiki/Error_function#Approximation_with_elementary_functions\n    // This produces a maximum error of 0.0005 which is more then we need.  In\n    // the worst case, that error is multiplied by four and then divided by two\n    // before being multiplied by 255, so in the end, the error is multiplied by\n    // 510 which produces 0.255 which is less than a single colour step.\n    let y = poly(Math.abs(x), 1, 0.278393, 0.230389, 0.000972, 0.078108)\n    y *= y // y^2\n    y *= y // y^4\n    y = 1 - 1 / y\n    return x < 0 ? -y : y\n  }\n\n  palette.register(\n    palette.Scheme.fromPalettes(\n      'tol',\n      'qualitative',\n      [\n        ['4477aa'],\n        ['4477aa', 'cc6677'],\n        ['4477aa', 'ddcc77', 'cc6677'],\n        ['4477aa', '117733', 'ddcc77', 'cc6677'],\n        ['332288', '88ccee', '117733', 'ddcc77', 'cc6677'],\n        ['332288', '88ccee', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n        ['332288', '88ccee', '44aa99', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n        [\n          '332288',\n          '88ccee',\n          '44aa99',\n          '117733',\n          '999933',\n          'ddcc77',\n          'cc6677',\n          'aa4499'\n        ],\n        [\n          '332288',\n          '88ccee',\n          '44aa99',\n          '117733',\n          '999933',\n          'ddcc77',\n          'cc6677',\n          '882255',\n          'aa4499'\n        ],\n        [\n          '332288',\n          '88ccee',\n          '44aa99',\n          '117733',\n          '999933',\n          'ddcc77',\n          '661100',\n          'cc6677',\n          '882255',\n          'aa4499'\n        ],\n        [\n          '332288',\n          '6699cc',\n          '88ccee',\n          '44aa99',\n          '117733',\n          '999933',\n          'ddcc77',\n          '661100',\n          'cc6677',\n          '882255',\n          'aa4499'\n        ],\n        [\n          '332288',\n          '6699cc',\n          '88ccee',\n          '44aa99',\n          '117733',\n          '999933',\n          'ddcc77',\n          '661100',\n          'cc6677',\n          'aa4466',\n          '882255',\n          'aa4499'\n        ]\n      ],\n      12,\n      12\n    )\n  )\n\n  /**\n   * Calculates a colour along Paul Tol's sequential colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 7 and equation 1.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolSequentialColor = function(x) {\n    return rgb(\n      1 - 0.392 * (1 + erf((x - 0.869) / 0.255)),\n      1.021 - 0.456 * (1 + erf((x - 0.527) / 0.376)),\n      1 - 0.493 * (1 + erf((x - 0.272) / 0.309))\n    )\n  }\n\n  palette.register(\n    palette.Scheme.withColorFunction(\n      'tol-sq',\n      'sequential',\n      palette.tolSequentialColor,\n      true\n    )\n  )\n\n  /**\n   * Calculates a colour along Paul Tol's diverging colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 8 and equation 2.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolDivergingColor = function(x) {\n    let g = poly(x, 0.572, 1.524, -1.811) / poly(x, 1, -0.291, 0.1574)\n    return rgb(\n      poly(x, 0.235, -2.13, 26.92, -65.5, 63.5, -22.36),\n      g * g,\n      1 / poly(x, 1.579, -4.03, 12.92, -31.4, 48.6, -23.36)\n    )\n  }\n\n  palette.register(\n    palette.Scheme.withColorFunction(\n      'tol-dv',\n      'diverging',\n      palette.tolDivergingColor,\n      true\n    )\n  )\n\n  /**\n   * Calculates a colour along Paul Tol's rainbow colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 13 and equation 3.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolRainbowColor = function(x) {\n    return rgb(\n      poly(x, 0.472, -0.567, 4.05) / poly(x, 1, 8.72, -19.17, 14.1),\n      poly(x, 0.108932, -1.22635, 27.284, -98.577, 163.3, -131.395, 40.634),\n      1 / poly(x, 1.97, 3.54, -68.5, 243, -297, 125)\n    )\n  }\n\n  palette.register(\n    palette.Scheme.withColorFunction(\n      'tol-rainbow',\n      'qualitative',\n      palette.tolRainbowColor,\n      true\n    )\n  )\n})()\n\n/* Solarized colour schemes start here. *************************************/\n/* See http://ethanschoonover.com/solarized */\n;(function() {\n  /*\n   * Those are not really designed to be used in graphs, but we're keeping\n   * them here in case someone cares.\n   */\n  palette.register(\n    palette.Scheme.fromPalettes(\n      'sol-base',\n      'sequential',\n      [\n        [\n          '002b36',\n          '073642',\n          '586e75',\n          '657b83',\n          '839496',\n          '93a1a1',\n          'eee8d5',\n          'fdf6e3'\n        ]\n      ],\n      1,\n      8\n    )\n  )\n  palette.register(\n    palette.Scheme.fromPalettes('sol-accent', 'qualitative', [\n      [\n        'b58900',\n        'cb4b16',\n        'dc322f',\n        'd33682',\n        '6c71c4',\n        '268bd2',\n        '2aa198',\n        '859900'\n      ]\n    ])\n  )\n})()\n\n/* ColorBrewer colour schemes start here. ***********************************/\n/* See http://colorbrewer2.org/ */\n;(function() {\n  let schemes = {\n    YlGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f7fcb9', 'addd8e', '31a354'],\n      4: ['ffffcc', 'c2e699', '78c679', '238443'],\n      5: ['ffffcc', 'c2e699', '78c679', '31a354', '006837'],\n      6: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '31a354', '006837'],\n      7: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '41ab5d', '238443', '005a32'],\n      8: [\n        'ffffe5',\n        'f7fcb9',\n        'd9f0a3',\n        'addd8e',\n        '78c679',\n        '41ab5d',\n        '238443',\n        '005a32'\n      ],\n      9: [\n        'ffffe5',\n        'f7fcb9',\n        'd9f0a3',\n        'addd8e',\n        '78c679',\n        '41ab5d',\n        '238443',\n        '006837',\n        '004529'\n      ]\n    },\n    YlGnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['edf8b1', '7fcdbb', '2c7fb8'],\n      4: ['ffffcc', 'a1dab4', '41b6c4', '225ea8'],\n      5: ['ffffcc', 'a1dab4', '41b6c4', '2c7fb8', '253494'],\n      6: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '2c7fb8', '253494'],\n      7: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0', '225ea8', '0c2c84'],\n      8: [\n        'ffffd9',\n        'edf8b1',\n        'c7e9b4',\n        '7fcdbb',\n        '41b6c4',\n        '1d91c0',\n        '225ea8',\n        '0c2c84'\n      ],\n      9: [\n        'ffffd9',\n        'edf8b1',\n        'c7e9b4',\n        '7fcdbb',\n        '41b6c4',\n        '1d91c0',\n        '225ea8',\n        '253494',\n        '081d58'\n      ]\n    },\n    GnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0f3db', 'a8ddb5', '43a2ca'],\n      4: ['f0f9e8', 'bae4bc', '7bccc4', '2b8cbe'],\n      5: ['f0f9e8', 'bae4bc', '7bccc4', '43a2ca', '0868ac'],\n      6: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '43a2ca', '0868ac'],\n      7: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3', '2b8cbe', '08589e'],\n      8: [\n        'f7fcf0',\n        'e0f3db',\n        'ccebc5',\n        'a8ddb5',\n        '7bccc4',\n        '4eb3d3',\n        '2b8cbe',\n        '08589e'\n      ],\n      9: [\n        'f7fcf0',\n        'e0f3db',\n        'ccebc5',\n        'a8ddb5',\n        '7bccc4',\n        '4eb3d3',\n        '2b8cbe',\n        '0868ac',\n        '084081'\n      ]\n    },\n    BuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5f9', '99d8c9', '2ca25f'],\n      4: ['edf8fb', 'b2e2e2', '66c2a4', '238b45'],\n      5: ['edf8fb', 'b2e2e2', '66c2a4', '2ca25f', '006d2c'],\n      6: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '2ca25f', '006d2c'],\n      7: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '41ae76', '238b45', '005824'],\n      8: [\n        'f7fcfd',\n        'e5f5f9',\n        'ccece6',\n        '99d8c9',\n        '66c2a4',\n        '41ae76',\n        '238b45',\n        '005824'\n      ],\n      9: [\n        'f7fcfd',\n        'e5f5f9',\n        'ccece6',\n        '99d8c9',\n        '66c2a4',\n        '41ae76',\n        '238b45',\n        '006d2c',\n        '00441b'\n      ]\n    },\n    PuBuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece2f0', 'a6bddb', '1c9099'],\n      4: ['f6eff7', 'bdc9e1', '67a9cf', '02818a'],\n      5: ['f6eff7', 'bdc9e1', '67a9cf', '1c9099', '016c59'],\n      6: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '1c9099', '016c59'],\n      7: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0', '02818a', '016450'],\n      8: [\n        'fff7fb',\n        'ece2f0',\n        'd0d1e6',\n        'a6bddb',\n        '67a9cf',\n        '3690c0',\n        '02818a',\n        '016450'\n      ],\n      9: [\n        'fff7fb',\n        'ece2f0',\n        'd0d1e6',\n        'a6bddb',\n        '67a9cf',\n        '3690c0',\n        '02818a',\n        '016c59',\n        '014636'\n      ]\n    },\n    PuBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece7f2', 'a6bddb', '2b8cbe'],\n      4: ['f1eef6', 'bdc9e1', '74a9cf', '0570b0'],\n      5: ['f1eef6', 'bdc9e1', '74a9cf', '2b8cbe', '045a8d'],\n      6: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '2b8cbe', '045a8d'],\n      7: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0', '0570b0', '034e7b'],\n      8: [\n        'fff7fb',\n        'ece7f2',\n        'd0d1e6',\n        'a6bddb',\n        '74a9cf',\n        '3690c0',\n        '0570b0',\n        '034e7b'\n      ],\n      9: [\n        'fff7fb',\n        'ece7f2',\n        'd0d1e6',\n        'a6bddb',\n        '74a9cf',\n        '3690c0',\n        '0570b0',\n        '045a8d',\n        '023858'\n      ]\n    },\n    BuPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0ecf4', '9ebcda', '8856a7'],\n      4: ['edf8fb', 'b3cde3', '8c96c6', '88419d'],\n      5: ['edf8fb', 'b3cde3', '8c96c6', '8856a7', '810f7c'],\n      6: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8856a7', '810f7c'],\n      7: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1', '88419d', '6e016b'],\n      8: [\n        'f7fcfd',\n        'e0ecf4',\n        'bfd3e6',\n        '9ebcda',\n        '8c96c6',\n        '8c6bb1',\n        '88419d',\n        '6e016b'\n      ],\n      9: [\n        'f7fcfd',\n        'e0ecf4',\n        'bfd3e6',\n        '9ebcda',\n        '8c96c6',\n        '8c6bb1',\n        '88419d',\n        '810f7c',\n        '4d004b'\n      ]\n    },\n    RdPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fde0dd', 'fa9fb5', 'c51b8a'],\n      4: ['feebe2', 'fbb4b9', 'f768a1', 'ae017e'],\n      5: ['feebe2', 'fbb4b9', 'f768a1', 'c51b8a', '7a0177'],\n      6: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'c51b8a', '7a0177'],\n      7: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497', 'ae017e', '7a0177'],\n      8: [\n        'fff7f3',\n        'fde0dd',\n        'fcc5c0',\n        'fa9fb5',\n        'f768a1',\n        'dd3497',\n        'ae017e',\n        '7a0177'\n      ],\n      9: [\n        'fff7f3',\n        'fde0dd',\n        'fcc5c0',\n        'fa9fb5',\n        'f768a1',\n        'dd3497',\n        'ae017e',\n        '7a0177',\n        '49006a'\n      ]\n    },\n    PuRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e7e1ef', 'c994c7', 'dd1c77'],\n      4: ['f1eef6', 'd7b5d8', 'df65b0', 'ce1256'],\n      5: ['f1eef6', 'd7b5d8', 'df65b0', 'dd1c77', '980043'],\n      6: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'dd1c77', '980043'],\n      7: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'e7298a', 'ce1256', '91003f'],\n      8: [\n        'f7f4f9',\n        'e7e1ef',\n        'd4b9da',\n        'c994c7',\n        'df65b0',\n        'e7298a',\n        'ce1256',\n        '91003f'\n      ],\n      9: [\n        'f7f4f9',\n        'e7e1ef',\n        'd4b9da',\n        'c994c7',\n        'df65b0',\n        'e7298a',\n        'ce1256',\n        '980043',\n        '67001f'\n      ]\n    },\n    OrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee8c8', 'fdbb84', 'e34a33'],\n      4: ['fef0d9', 'fdcc8a', 'fc8d59', 'd7301f'],\n      5: ['fef0d9', 'fdcc8a', 'fc8d59', 'e34a33', 'b30000'],\n      6: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'e34a33', 'b30000'],\n      7: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548', 'd7301f', '990000'],\n      8: [\n        'fff7ec',\n        'fee8c8',\n        'fdd49e',\n        'fdbb84',\n        'fc8d59',\n        'ef6548',\n        'd7301f',\n        '990000'\n      ],\n      9: [\n        'fff7ec',\n        'fee8c8',\n        'fdd49e',\n        'fdbb84',\n        'fc8d59',\n        'ef6548',\n        'd7301f',\n        'b30000',\n        '7f0000'\n      ]\n    },\n    YlOrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ffeda0', 'feb24c', 'f03b20'],\n      4: ['ffffb2', 'fecc5c', 'fd8d3c', 'e31a1c'],\n      5: ['ffffb2', 'fecc5c', 'fd8d3c', 'f03b20', 'bd0026'],\n      6: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'f03b20', 'bd0026'],\n      7: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a', 'e31a1c', 'b10026'],\n      8: [\n        'ffffcc',\n        'ffeda0',\n        'fed976',\n        'feb24c',\n        'fd8d3c',\n        'fc4e2a',\n        'e31a1c',\n        'b10026'\n      ],\n      9: [\n        'ffffcc',\n        'ffeda0',\n        'fed976',\n        'feb24c',\n        'fd8d3c',\n        'fc4e2a',\n        'e31a1c',\n        'bd0026',\n        '800026'\n      ]\n    },\n    YlOrBr: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fff7bc', 'fec44f', 'd95f0e'],\n      4: ['ffffd4', 'fed98e', 'fe9929', 'cc4c02'],\n      5: ['ffffd4', 'fed98e', 'fe9929', 'd95f0e', '993404'],\n      6: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'd95f0e', '993404'],\n      7: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'ec7014', 'cc4c02', '8c2d04'],\n      8: [\n        'ffffe5',\n        'fff7bc',\n        'fee391',\n        'fec44f',\n        'fe9929',\n        'ec7014',\n        'cc4c02',\n        '8c2d04'\n      ],\n      9: [\n        'ffffe5',\n        'fff7bc',\n        'fee391',\n        'fec44f',\n        'fe9929',\n        'ec7014',\n        'cc4c02',\n        '993404',\n        '662506'\n      ]\n    },\n    Purples: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['efedf5', 'bcbddc', '756bb1'],\n      4: ['f2f0f7', 'cbc9e2', '9e9ac8', '6a51a3'],\n      5: ['f2f0f7', 'cbc9e2', '9e9ac8', '756bb1', '54278f'],\n      6: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '756bb1', '54278f'],\n      7: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '807dba', '6a51a3', '4a1486'],\n      8: [\n        'fcfbfd',\n        'efedf5',\n        'dadaeb',\n        'bcbddc',\n        '9e9ac8',\n        '807dba',\n        '6a51a3',\n        '4a1486'\n      ],\n      9: [\n        'fcfbfd',\n        'efedf5',\n        'dadaeb',\n        'bcbddc',\n        '9e9ac8',\n        '807dba',\n        '6a51a3',\n        '54278f',\n        '3f007d'\n      ]\n    },\n    Blues: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['deebf7', '9ecae1', '3182bd'],\n      4: ['eff3ff', 'bdd7e7', '6baed6', '2171b5'],\n      5: ['eff3ff', 'bdd7e7', '6baed6', '3182bd', '08519c'],\n      6: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '3182bd', '08519c'],\n      7: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '4292c6', '2171b5', '084594'],\n      8: [\n        'f7fbff',\n        'deebf7',\n        'c6dbef',\n        '9ecae1',\n        '6baed6',\n        '4292c6',\n        '2171b5',\n        '084594'\n      ],\n      9: [\n        'f7fbff',\n        'deebf7',\n        'c6dbef',\n        '9ecae1',\n        '6baed6',\n        '4292c6',\n        '2171b5',\n        '08519c',\n        '08306b'\n      ]\n    },\n    Greens: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5e0', 'a1d99b', '31a354'],\n      4: ['edf8e9', 'bae4b3', '74c476', '238b45'],\n      5: ['edf8e9', 'bae4b3', '74c476', '31a354', '006d2c'],\n      6: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '31a354', '006d2c'],\n      7: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '41ab5d', '238b45', '005a32'],\n      8: [\n        'f7fcf5',\n        'e5f5e0',\n        'c7e9c0',\n        'a1d99b',\n        '74c476',\n        '41ab5d',\n        '238b45',\n        '005a32'\n      ],\n      9: [\n        'f7fcf5',\n        'e5f5e0',\n        'c7e9c0',\n        'a1d99b',\n        '74c476',\n        '41ab5d',\n        '238b45',\n        '006d2c',\n        '00441b'\n      ]\n    },\n    Oranges: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee6ce', 'fdae6b', 'e6550d'],\n      4: ['feedde', 'fdbe85', 'fd8d3c', 'd94701'],\n      5: ['feedde', 'fdbe85', 'fd8d3c', 'e6550d', 'a63603'],\n      6: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'e6550d', 'a63603'],\n      7: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913', 'd94801', '8c2d04'],\n      8: [\n        'fff5eb',\n        'fee6ce',\n        'fdd0a2',\n        'fdae6b',\n        'fd8d3c',\n        'f16913',\n        'd94801',\n        '8c2d04'\n      ],\n      9: [\n        'fff5eb',\n        'fee6ce',\n        'fdd0a2',\n        'fdae6b',\n        'fd8d3c',\n        'f16913',\n        'd94801',\n        'a63603',\n        '7f2704'\n      ]\n    },\n    Reds: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee0d2', 'fc9272', 'de2d26'],\n      4: ['fee5d9', 'fcae91', 'fb6a4a', 'cb181d'],\n      5: ['fee5d9', 'fcae91', 'fb6a4a', 'de2d26', 'a50f15'],\n      6: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'de2d26', 'a50f15'],\n      7: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c', 'cb181d', '99000d'],\n      8: [\n        'fff5f0',\n        'fee0d2',\n        'fcbba1',\n        'fc9272',\n        'fb6a4a',\n        'ef3b2c',\n        'cb181d',\n        '99000d'\n      ],\n      9: [\n        'fff5f0',\n        'fee0d2',\n        'fcbba1',\n        'fc9272',\n        'fb6a4a',\n        'ef3b2c',\n        'cb181d',\n        'a50f15',\n        '67000d'\n      ]\n    },\n    Greys: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f0f0f0', 'bdbdbd', '636363'],\n      4: ['f7f7f7', 'cccccc', '969696', '525252'],\n      5: ['f7f7f7', 'cccccc', '969696', '636363', '252525'],\n      6: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '636363', '252525'],\n      7: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '737373', '525252', '252525'],\n      8: [\n        'ffffff',\n        'f0f0f0',\n        'd9d9d9',\n        'bdbdbd',\n        '969696',\n        '737373',\n        '525252',\n        '252525'\n      ],\n      9: [\n        'ffffff',\n        'f0f0f0',\n        'd9d9d9',\n        'bdbdbd',\n        '969696',\n        '737373',\n        '525252',\n        '252525',\n        '000000'\n      ]\n    },\n    PuOr: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['f1a340', 'f7f7f7', '998ec3'],\n      4: ['e66101', 'fdb863', 'b2abd2', '5e3c99'],\n      5: ['e66101', 'fdb863', 'f7f7f7', 'b2abd2', '5e3c99'],\n      6: ['b35806', 'f1a340', 'fee0b6', 'd8daeb', '998ec3', '542788'],\n      7: ['b35806', 'f1a340', 'fee0b6', 'f7f7f7', 'd8daeb', '998ec3', '542788'],\n      8: [\n        'b35806',\n        'e08214',\n        'fdb863',\n        'fee0b6',\n        'd8daeb',\n        'b2abd2',\n        '8073ac',\n        '542788'\n      ],\n      9: [\n        'b35806',\n        'e08214',\n        'fdb863',\n        'fee0b6',\n        'f7f7f7',\n        'd8daeb',\n        'b2abd2',\n        '8073ac',\n        '542788'\n      ],\n      10: [\n        '7f3b08',\n        'b35806',\n        'e08214',\n        'fdb863',\n        'fee0b6',\n        'd8daeb',\n        'b2abd2',\n        '8073ac',\n        '542788',\n        '2d004b'\n      ],\n      11: [\n        '7f3b08',\n        'b35806',\n        'e08214',\n        'fdb863',\n        'fee0b6',\n        'f7f7f7',\n        'd8daeb',\n        'b2abd2',\n        '8073ac',\n        '542788',\n        '2d004b'\n      ]\n    },\n    BrBG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['d8b365', 'f5f5f5', '5ab4ac'],\n      4: ['a6611a', 'dfc27d', '80cdc1', '018571'],\n      5: ['a6611a', 'dfc27d', 'f5f5f5', '80cdc1', '018571'],\n      6: ['8c510a', 'd8b365', 'f6e8c3', 'c7eae5', '5ab4ac', '01665e'],\n      7: ['8c510a', 'd8b365', 'f6e8c3', 'f5f5f5', 'c7eae5', '5ab4ac', '01665e'],\n      8: [\n        '8c510a',\n        'bf812d',\n        'dfc27d',\n        'f6e8c3',\n        'c7eae5',\n        '80cdc1',\n        '35978f',\n        '01665e'\n      ],\n      9: [\n        '8c510a',\n        'bf812d',\n        'dfc27d',\n        'f6e8c3',\n        'f5f5f5',\n        'c7eae5',\n        '80cdc1',\n        '35978f',\n        '01665e'\n      ],\n      10: [\n        '543005',\n        '8c510a',\n        'bf812d',\n        'dfc27d',\n        'f6e8c3',\n        'c7eae5',\n        '80cdc1',\n        '35978f',\n        '01665e',\n        '003c30'\n      ],\n      11: [\n        '543005',\n        '8c510a',\n        'bf812d',\n        'dfc27d',\n        'f6e8c3',\n        'f5f5f5',\n        'c7eae5',\n        '80cdc1',\n        '35978f',\n        '01665e',\n        '003c30'\n      ]\n    },\n    PRGn: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['af8dc3', 'f7f7f7', '7fbf7b'],\n      4: ['7b3294', 'c2a5cf', 'a6dba0', '008837'],\n      5: ['7b3294', 'c2a5cf', 'f7f7f7', 'a6dba0', '008837'],\n      6: ['762a83', 'af8dc3', 'e7d4e8', 'd9f0d3', '7fbf7b', '1b7837'],\n      7: ['762a83', 'af8dc3', 'e7d4e8', 'f7f7f7', 'd9f0d3', '7fbf7b', '1b7837'],\n      8: [\n        '762a83',\n        '9970ab',\n        'c2a5cf',\n        'e7d4e8',\n        'd9f0d3',\n        'a6dba0',\n        '5aae61',\n        '1b7837'\n      ],\n      9: [\n        '762a83',\n        '9970ab',\n        'c2a5cf',\n        'e7d4e8',\n        'f7f7f7',\n        'd9f0d3',\n        'a6dba0',\n        '5aae61',\n        '1b7837'\n      ],\n      10: [\n        '40004b',\n        '762a83',\n        '9970ab',\n        'c2a5cf',\n        'e7d4e8',\n        'd9f0d3',\n        'a6dba0',\n        '5aae61',\n        '1b7837',\n        '00441b'\n      ],\n      11: [\n        '40004b',\n        '762a83',\n        '9970ab',\n        'c2a5cf',\n        'e7d4e8',\n        'f7f7f7',\n        'd9f0d3',\n        'a6dba0',\n        '5aae61',\n        '1b7837',\n        '00441b'\n      ]\n    },\n    PiYG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['e9a3c9', 'f7f7f7', 'a1d76a'],\n      4: ['d01c8b', 'f1b6da', 'b8e186', '4dac26'],\n      5: ['d01c8b', 'f1b6da', 'f7f7f7', 'b8e186', '4dac26'],\n      6: ['c51b7d', 'e9a3c9', 'fde0ef', 'e6f5d0', 'a1d76a', '4d9221'],\n      7: ['c51b7d', 'e9a3c9', 'fde0ef', 'f7f7f7', 'e6f5d0', 'a1d76a', '4d9221'],\n      8: [\n        'c51b7d',\n        'de77ae',\n        'f1b6da',\n        'fde0ef',\n        'e6f5d0',\n        'b8e186',\n        '7fbc41',\n        '4d9221'\n      ],\n      9: [\n        'c51b7d',\n        'de77ae',\n        'f1b6da',\n        'fde0ef',\n        'f7f7f7',\n        'e6f5d0',\n        'b8e186',\n        '7fbc41',\n        '4d9221'\n      ],\n      10: [\n        '8e0152',\n        'c51b7d',\n        'de77ae',\n        'f1b6da',\n        'fde0ef',\n        'e6f5d0',\n        'b8e186',\n        '7fbc41',\n        '4d9221',\n        '276419'\n      ],\n      11: [\n        '8e0152',\n        'c51b7d',\n        'de77ae',\n        'f1b6da',\n        'fde0ef',\n        'f7f7f7',\n        'e6f5d0',\n        'b8e186',\n        '7fbc41',\n        '4d9221',\n        '276419'\n      ]\n    },\n    RdBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'f7f7f7', '67a9cf'],\n      4: ['ca0020', 'f4a582', '92c5de', '0571b0'],\n      5: ['ca0020', 'f4a582', 'f7f7f7', '92c5de', '0571b0'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'd1e5f0', '67a9cf', '2166ac'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'f7f7f7', 'd1e5f0', '67a9cf', '2166ac'],\n      8: [\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'd1e5f0',\n        '92c5de',\n        '4393c3',\n        '2166ac'\n      ],\n      9: [\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'f7f7f7',\n        'd1e5f0',\n        '92c5de',\n        '4393c3',\n        '2166ac'\n      ],\n      10: [\n        '67001f',\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'd1e5f0',\n        '92c5de',\n        '4393c3',\n        '2166ac',\n        '053061'\n      ],\n      11: [\n        '67001f',\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'f7f7f7',\n        'd1e5f0',\n        '92c5de',\n        '4393c3',\n        '2166ac',\n        '053061'\n      ]\n    },\n    RdGy: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'ffffff', '999999'],\n      4: ['ca0020', 'f4a582', 'bababa', '404040'],\n      5: ['ca0020', 'f4a582', 'ffffff', 'bababa', '404040'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'e0e0e0', '999999', '4d4d4d'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'ffffff', 'e0e0e0', '999999', '4d4d4d'],\n      8: [\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'e0e0e0',\n        'bababa',\n        '878787',\n        '4d4d4d'\n      ],\n      9: [\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'ffffff',\n        'e0e0e0',\n        'bababa',\n        '878787',\n        '4d4d4d'\n      ],\n      10: [\n        '67001f',\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'e0e0e0',\n        'bababa',\n        '878787',\n        '4d4d4d',\n        '1a1a1a'\n      ],\n      11: [\n        '67001f',\n        'b2182b',\n        'd6604d',\n        'f4a582',\n        'fddbc7',\n        'ffffff',\n        'e0e0e0',\n        'bababa',\n        '878787',\n        '4d4d4d',\n        '1a1a1a'\n      ]\n    },\n    RdYlBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['fc8d59', 'ffffbf', '91bfdb'],\n      4: ['d7191c', 'fdae61', 'abd9e9', '2c7bb6'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abd9e9', '2c7bb6'],\n      6: ['d73027', 'fc8d59', 'fee090', 'e0f3f8', '91bfdb', '4575b4'],\n      7: ['d73027', 'fc8d59', 'fee090', 'ffffbf', 'e0f3f8', '91bfdb', '4575b4'],\n      8: [\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee090',\n        'e0f3f8',\n        'abd9e9',\n        '74add1',\n        '4575b4'\n      ],\n      9: [\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee090',\n        'ffffbf',\n        'e0f3f8',\n        'abd9e9',\n        '74add1',\n        '4575b4'\n      ],\n      10: [\n        'a50026',\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee090',\n        'e0f3f8',\n        'abd9e9',\n        '74add1',\n        '4575b4',\n        '313695'\n      ],\n      11: [\n        'a50026',\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee090',\n        'ffffbf',\n        'e0f3f8',\n        'abd9e9',\n        '74add1',\n        '4575b4',\n        '313695'\n      ]\n    },\n    Spectral: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '99d594'],\n      4: ['d7191c', 'fdae61', 'abdda4', '2b83ba'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abdda4', '2b83ba'],\n      6: ['d53e4f', 'fc8d59', 'fee08b', 'e6f598', '99d594', '3288bd'],\n      7: ['d53e4f', 'fc8d59', 'fee08b', 'ffffbf', 'e6f598', '99d594', '3288bd'],\n      8: [\n        'd53e4f',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'e6f598',\n        'abdda4',\n        '66c2a5',\n        '3288bd'\n      ],\n      9: [\n        'd53e4f',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'ffffbf',\n        'e6f598',\n        'abdda4',\n        '66c2a5',\n        '3288bd'\n      ],\n      10: [\n        '9e0142',\n        'd53e4f',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'e6f598',\n        'abdda4',\n        '66c2a5',\n        '3288bd',\n        '5e4fa2'\n      ],\n      11: [\n        '9e0142',\n        'd53e4f',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'ffffbf',\n        'e6f598',\n        'abdda4',\n        '66c2a5',\n        '3288bd',\n        '5e4fa2'\n      ]\n    },\n    RdYlGn: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '91cf60'],\n      4: ['d7191c', 'fdae61', 'a6d96a', '1a9641'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'a6d96a', '1a9641'],\n      6: ['d73027', 'fc8d59', 'fee08b', 'd9ef8b', '91cf60', '1a9850'],\n      7: ['d73027', 'fc8d59', 'fee08b', 'ffffbf', 'd9ef8b', '91cf60', '1a9850'],\n      8: [\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'd9ef8b',\n        'a6d96a',\n        '66bd63',\n        '1a9850'\n      ],\n      9: [\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'ffffbf',\n        'd9ef8b',\n        'a6d96a',\n        '66bd63',\n        '1a9850'\n      ],\n      10: [\n        'a50026',\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'd9ef8b',\n        'a6d96a',\n        '66bd63',\n        '1a9850',\n        '006837'\n      ],\n      11: [\n        'a50026',\n        'd73027',\n        'f46d43',\n        'fdae61',\n        'fee08b',\n        'ffffbf',\n        'd9ef8b',\n        'a6d96a',\n        '66bd63',\n        '1a9850',\n        '006837'\n      ]\n    },\n    Accent: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['7fc97f', 'beaed4', 'fdc086'],\n      4: ['7fc97f', 'beaed4', 'fdc086', 'ffff99'],\n      5: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0'],\n      6: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f'],\n      7: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f', 'bf5b17'],\n      8: [\n        '7fc97f',\n        'beaed4',\n        'fdc086',\n        'ffff99',\n        '386cb0',\n        'f0027f',\n        'bf5b17',\n        '666666'\n      ]\n    },\n    Dark2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['1b9e77', 'd95f02', '7570b3'],\n      4: ['1b9e77', 'd95f02', '7570b3', 'e7298a'],\n      5: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e'],\n      6: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02'],\n      7: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02', 'a6761d'],\n      8: [\n        '1b9e77',\n        'd95f02',\n        '7570b3',\n        'e7298a',\n        '66a61e',\n        'e6ab02',\n        'a6761d',\n        '666666'\n      ]\n    },\n    Paired: {\n      type: 'qualitative',\n      cbf: 4,\n      3: ['a6cee3', '1f78b4', 'b2df8a'],\n      4: ['a6cee3', '1f78b4', 'b2df8a', '33a02c'],\n      5: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99'],\n      6: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c'],\n      7: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c', 'fdbf6f'],\n      8: [\n        'a6cee3',\n        '1f78b4',\n        'b2df8a',\n        '33a02c',\n        'fb9a99',\n        'e31a1c',\n        'fdbf6f',\n        'ff7f00'\n      ],\n      9: [\n        'a6cee3',\n        '1f78b4',\n        'b2df8a',\n        '33a02c',\n        'fb9a99',\n        'e31a1c',\n        'fdbf6f',\n        'ff7f00',\n        'cab2d6'\n      ],\n      10: [\n        'a6cee3',\n        '1f78b4',\n        'b2df8a',\n        '33a02c',\n        'fb9a99',\n        'e31a1c',\n        'fdbf6f',\n        'ff7f00',\n        'cab2d6',\n        '6a3d9a'\n      ],\n      11: [\n        'a6cee3',\n        '1f78b4',\n        'b2df8a',\n        '33a02c',\n        'fb9a99',\n        'e31a1c',\n        'fdbf6f',\n        'ff7f00',\n        'cab2d6',\n        '6a3d9a',\n        'ffff99'\n      ],\n      12: [\n        'a6cee3',\n        '1f78b4',\n        'b2df8a',\n        '33a02c',\n        'fb9a99',\n        'e31a1c',\n        'fdbf6f',\n        'ff7f00',\n        'cab2d6',\n        '6a3d9a',\n        'ffff99',\n        'b15928'\n      ]\n    },\n    Pastel1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['fbb4ae', 'b3cde3', 'ccebc5'],\n      4: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4'],\n      5: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6'],\n      6: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc'],\n      7: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc', 'e5d8bd'],\n      8: [\n        'fbb4ae',\n        'b3cde3',\n        'ccebc5',\n        'decbe4',\n        'fed9a6',\n        'ffffcc',\n        'e5d8bd',\n        'fddaec'\n      ],\n      9: [\n        'fbb4ae',\n        'b3cde3',\n        'ccebc5',\n        'decbe4',\n        'fed9a6',\n        'ffffcc',\n        'e5d8bd',\n        'fddaec',\n        'f2f2f2'\n      ]\n    },\n    Pastel2: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['b3e2cd', 'fdcdac', 'cbd5e8'],\n      4: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4'],\n      5: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9'],\n      6: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae'],\n      7: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae', 'f1e2cc'],\n      8: [\n        'b3e2cd',\n        'fdcdac',\n        'cbd5e8',\n        'f4cae4',\n        'e6f5c9',\n        'fff2ae',\n        'f1e2cc',\n        'cccccc'\n      ]\n    },\n    Set1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['e41a1c', '377eb8', '4daf4a'],\n      4: ['e41a1c', '377eb8', '4daf4a', '984ea3'],\n      5: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00'],\n      6: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33'],\n      7: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33', 'a65628'],\n      8: [\n        'e41a1c',\n        '377eb8',\n        '4daf4a',\n        '984ea3',\n        'ff7f00',\n        'ffff33',\n        'a65628',\n        'f781bf'\n      ],\n      9: [\n        'e41a1c',\n        '377eb8',\n        '4daf4a',\n        '984ea3',\n        'ff7f00',\n        'ffff33',\n        'a65628',\n        'f781bf',\n        '999999'\n      ]\n    },\n    Set2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['66c2a5', 'fc8d62', '8da0cb'],\n      4: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3'],\n      5: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854'],\n      6: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f'],\n      7: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f', 'e5c494'],\n      8: [\n        '66c2a5',\n        'fc8d62',\n        '8da0cb',\n        'e78ac3',\n        'a6d854',\n        'ffd92f',\n        'e5c494',\n        'b3b3b3'\n      ]\n    },\n    Set3: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['8dd3c7', 'ffffb3', 'bebada'],\n      4: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072'],\n      5: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3'],\n      6: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462'],\n      7: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462', 'b3de69'],\n      8: [\n        '8dd3c7',\n        'ffffb3',\n        'bebada',\n        'fb8072',\n        '80b1d3',\n        'fdb462',\n        'b3de69',\n        'fccde5'\n      ],\n      9: [\n        '8dd3c7',\n        'ffffb3',\n        'bebada',\n        'fb8072',\n        '80b1d3',\n        'fdb462',\n        'b3de69',\n        'fccde5',\n        'd9d9d9'\n      ],\n      10: [\n        '8dd3c7',\n        'ffffb3',\n        'bebada',\n        'fb8072',\n        '80b1d3',\n        'fdb462',\n        'b3de69',\n        'fccde5',\n        'd9d9d9',\n        'bc80bd'\n      ],\n      11: [\n        '8dd3c7',\n        'ffffb3',\n        'bebada',\n        'fb8072',\n        '80b1d3',\n        'fdb462',\n        'b3de69',\n        'fccde5',\n        'd9d9d9',\n        'bc80bd',\n        'ccebc5'\n      ],\n      12: [\n        '8dd3c7',\n        'ffffb3',\n        'bebada',\n        'fb8072',\n        '80b1d3',\n        'fdb462',\n        'b3de69',\n        'fccde5',\n        'd9d9d9',\n        'bc80bd',\n        'ccebc5',\n        'ffed6f'\n      ]\n    }\n  }\n\n  for (let name in schemes) {\n    let scheme = schemes[name]\n    scheme = palette.Scheme.fromPalettes(\n      'cb-' + name,\n      [scheme.type, 'cb-' + scheme.type],\n      scheme,\n      12,\n      scheme.cbf\n    )\n    palette.register(scheme)\n  }\n})()\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = palette\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpicon\":\"helpIcon_helpicon__14VNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__C4Ogh\"};","export const ERCdEX = 'ERCdEX'\nexport const Ethfinex = 'Ethfinex'\nexport const ETH = 'ETH'\nexport const GRG = 'GRG'\nexport const ZRX = 'ZRX'\nexport const GNT = 'GNT'\nexport const USDT = 'USDT'\nexport const WETH = 'WETH'\nexport const OMG = 'OMG'\nexport const SAN = 'SAN'\nexport const EDO = 'EDO'\nexport const FUN = 'FUN'\nexport const REP = 'REP'\nexport const MKR = 'MKR'\nexport const DAI = 'DAI'\nexport const BAT = 'BAT'\nexport const NIO = 'NIO'\nexport const SPK = 'SPK'\nexport const SNT = 'SNT'\n\nexport const MOCK_ERC20_TOKENS = {\n  kovan: {\n    WETH: {\n      symbol: 'WETH',\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0xd0a1e359811322d97991e03f863a0c30c2cf029c',\n      decimals: 18,\n      name: 'Wrapped Ether',\n      wrappers: {}\n    },\n    ZRX: {\n      symbol: 'ZRX',\n      symbolTicker: {\n        Ethfinex: 'ZRX'\n      },\n      address: '0x6ff6c0ff1d68b964901f986d4c9fa3ac68346570',\n      decimals: 18,\n      name: '0x Protocol Token',\n      wrappers: {}\n    },\n    GNT: {\n      symbol: 'GNT',\n      symbolTicker: {\n        Ethfinex: 'GNT'\n      },\n      address: '0xef7fff64389b814a946f3e92105513705ca6b990',\n      decimals: 18,\n      name: 'Golem Network Token',\n      wrappers: {}\n    },\n    MKR: {\n      symbol: 'MKR',\n      symbolTicker: {\n        Ethfinex: 'MKR'\n      },\n      address: '0x1dad4783cf3fe3085c1426157ab175a6119a04ba',\n      decimals: 18,\n      name: 'MakerDAO',\n      wrappers: {}\n    },\n    USDT: {\n      symbol: 'USDT',\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0x3487A04103859A6d95ba0bAFdCf1Ca521490176E',\n      decimals: 18,\n      name: 'Tether USD',\n      wrappers: {}\n    },\n    GRG: {\n      symbol: 'GRG',\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      faucetAddress: '0x22974713439f6b74a1ea247ce6d42b285d12c8e0',\n      address: '0x9F121AFBc98A7a133fbb31fE975205f39e8f08D2',\n      decimals: 6,\n      name: 'GRG Token',\n      wrappers: {}\n    }\n  },\n  mainnet: {\n    WETH: {\n      isMock: true,\n      symbol: 'WETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n      decimals: 18,\n      name: 'Wrapped Ether 0x',\n      wrappers: {}\n    },\n    ETHW: {\n      symbol: 'ETHW',\n      isOldERC20: false,\n      address: '0xaa7427d8f17d87a28f5e1ba3adbb270badbe1011',\n      decimals: 18,\n      name: 'Wrapped Ether EFX',\n      wrappers: {}\n    },\n    FUN: {\n      isMock: true,\n      symbol: 'FUN',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'FUN'\n      },\n      address: '0x419d0d8bdd9af5e606ae2232ed285aff190e711b',\n      decimals: 18,\n      name: 'FunFair Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'FUNW',\n          decimals: 18,\n          address: '0xB33CE6b1e48F450b4c6D4C0A3f281237Eeea2DEc',\n          name: 'SAN Wrapper'\n        }\n      }\n    },\n    SAN: {\n      isMock: true,\n      symbol: 'SAN',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'SAN'\n      },\n      address: '0x7c5a0ce9267ed19b22f8cae653f198e3e8daf098',\n      decimals: 18,\n      name: 'Santiment Network Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'SANW',\n          decimals: 18,\n          address: '0xB0Abd4cC5195560209492b6854c666d7CFF8C03c',\n          name: 'SAN Wrapper'\n        }\n      }\n    },\n    OMG: {\n      isMock: true,\n      symbol: 'OMG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'OMG'\n      },\n      address: '0xd26114cd6ee289accf82350c8d8487fedb8a0c07',\n      decimals: 18,\n      name: 'OmiseGO Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'OMGW',\n          decimals: 18,\n          address: '0x60f8526f09caaF0008187945ccd88Bc43790042C',\n          name: 'OMG Wrapper'\n        }\n      }\n    },\n    ZRX: {\n      isMock: true,\n      symbol: 'ZRX',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ZRX'\n      },\n      address: '0xe41d2489571d322189246dafa5ebde1f4699f498',\n      decimals: 18,\n      name: '0x Protocol Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ZRXW',\n          decimals: 18,\n          address: '0xCf67d7A481CEEca0a77f658991A00366FED558F7',\n          name: 'ZRX Wrapper'\n        }\n      }\n    },\n    ETH: {\n      isMock: true,\n      symbol: 'ETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0x0',\n      decimals: 18,\n      name: 'Ether',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ETHW',\n          decimals: 18,\n          address: '0xaa7427d8f17d87a28f5e1ba3adbb270badbe1011',\n          name: 'ETH Wrapper'\n        }\n      }\n    },\n    GNT: {\n      isMock: false,\n      symbol: 'GNT',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GNT'\n      },\n      address: '0xa74476443119A942dE498590Fe1f2454d7D4aC0d',\n      decimals: 18,\n      name: 'Golem Network Token',\n      wrappers: {}\n    },\n    MKR: {\n      isMock: false,\n      symbol: 'MKR',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'MKR'\n      },\n      address: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',\n      decimals: 18,\n      name: 'MakerDAO',\n      wrappers: {}\n    },\n    USDT: {\n      isMock: true,\n      symbol: 'USDT',\n      isOldERC20: true,\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n      decimals: 6,\n      name: 'Tether USD',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'USDT',\n          decimals: 6,\n          address: '0x1a9B2d827F26B7d7C18fEC4c1B27c1E8dEeBa26e',\n          name: 'USDTWrapper'\n        }\n      }\n    },\n    GRG: {\n      isMock: false,\n      symbol: 'GRG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      address: '0x4fbb350052bca5417566f188eb2ebce5b19bc964',\n      decimals: 18,\n      name: 'GRG Token',\n      wrappers: {}\n    }\n  },\n  ropsten: {\n    WETH: {\n      isMock: true,\n      symbol: 'WETH',\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0xc778417e063141139fce010982780140aa0cd5ab',\n      decimals: 18,\n      name: 'Wrapped Ether 0x',\n      wrappers: {}\n    },\n    ETHW: {\n      isMock: true,\n      symbol: 'ETHW',\n      address: '0x06da2eb72279c1cec53c251bbff4a06fbfb93a5b',\n      decimals: 18,\n      name: 'Wrapped Ether EFX',\n      wrappers: {}\n    },\n    ETH: {\n      isMock: true,\n      symbol: 'ETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0x0',\n      decimals: 18,\n      name: 'Ether',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ETHW',\n          decimals: 18,\n          address: '0x06da2eb72279c1cec53c251bbff4a06fbfb93a5b',\n          name: 'ETH Wrapper'\n        }\n      }\n    },\n    USDT: {\n      isMock: true,\n      symbol: 'USDT',\n      isOldERC20: true,\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0x0736d0c130b2eAD47476cC262dbed90D7C4eeABD',\n      decimals: 6,\n      name: 'Tether USD',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'USDTW',\n          decimals: 6,\n          address: '0x84442a4518126ed25a548fe3392f6021e3ccd5bb',\n          name: 'USDT Wrapper'\n        }\n      }\n    },\n    GRG: {\n      isMock: true,\n      symbol: 'GRG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      address: '0x6FA8590920c5966713b1a86916f7b0419411e474',\n      decimals: 18,\n      faucetAddress: '0x756519e3A48d5E4A02e0a6197A0cBb783ff06738',\n      name: 'GRG Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'GRGW',\n          decimals: 18,\n          address: '0xacfb4c79259e3c2c1bf054f136e6d75f7cc2b07e',\n          name: 'GRG Wrapper'\n        }\n      }\n    }\n  }\n}\n\nexport const ERC20_TOKENS = {\n  kovan: {\n    ETH: {\n      symbol: 'ETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0x0',\n      decimals: 18,\n      name: 'Ether',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ETHW',\n          decimals: 18,\n          address: '0x02fcb8a7D3Eae24dBd0Bc67Fdb5dE13E3ec7Cf93',\n          name: 'ETH Wrapper'\n        }\n      }\n    },\n    WETH: {\n      symbol: 'WETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0xd0a1e359811322d97991e03f863a0c30c2cf029c',\n      decimals: 18,\n      name: 'Wrapped Ether',\n      wrappers: {}\n    },\n    ZRX: {\n      symbol: 'ZRX',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ZRX'\n      },\n      address: '0x6ff6c0ff1d68b964901f986d4c9fa3ac68346570',\n      decimals: 18,\n      name: '0x Protocol Token',\n      wrappers: {}\n    },\n    GNT: {\n      symbol: 'GNT',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GNT'\n      },\n      address: '0xef7fff64389b814a946f3e92105513705ca6b990',\n      decimals: 18,\n      name: 'Golem Network Token',\n      wrappers: {}\n    },\n    MKR: {\n      symbol: 'MKR',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'MKR'\n      },\n      address: '0x1dad4783cf3fe3085c1426157ab175a6119a04ba',\n      decimals: 18,\n      name: 'MakerDAO',\n      wrappers: {}\n    },\n    USDT: {\n      symbol: 'USDT',\n      isOldERC20: true,\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0xD92EEe71478e115FCc5342fa44242e7896B8aF3b',\n      decimals: 6,\n      name: 'Tether USD',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'USDTW',\n          decimals: 6,\n          address: '0xcC64620c47a9cD6Aa4a5265b48c85911DfB0005d',\n          name: 'USDTWrapper'\n        }\n      }\n    },\n    GRG: {\n      symbol: 'GRG',\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      faucetAddress: '0x22974713439f6b74a1ea247ce6d42b285d12c8e0',\n      address: '0x9F121AFBc98A7a133fbb31fE975205f39e8f08D2',\n      decimals: 6,\n      name: 'GRG Token',\n      wrappers: {}\n    }\n  },\n  mainnet: {\n    GRG: {\n      symbol: 'GRG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      address: '0x4fbb350052bca5417566f188eb2ebce5b19bc964',\n      decimals: 18,\n      name: 'GRG Token',\n      wrappers: {}\n    },\n    ETH: {\n      symbol: 'ETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0x0',\n      decimals: 18,\n      name: 'Ether',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ETHW',\n          decimals: 18,\n          address: '0xaa7427d8f17d87a28f5e1ba3adbb270badbe1011',\n          name: 'ETH Wrapper'\n        }\n      }\n    },\n    ETHW: {\n      symbol: 'ETHW',\n      isOldERC20: false,\n      address: '0xaa7427d8f17d87a28f5e1ba3adbb270badbe1011',\n      decimals: 18,\n      name: 'Wrapped Ether EFX',\n      wrappers: {}\n    },\n    WETH: {\n      symbol: 'WETH',\n      isOldERC20: false,\n      symbolTicker: {\n        [Ethfinex]: 'ETH'\n      },\n      address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n      decimals: 18,\n      name: 'Wrapped Ether 0x',\n      wrappers: {}\n    },\n    USDT: {\n      symbol: 'USDT',\n      isOldERC20: true,\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n      decimals: 6,\n      name: 'Tether USD',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'USDT',\n          decimals: 6,\n          address: '0x1a9B2d827F26B7d7C18fEC4c1B27c1E8dEeBa26e',\n          name: 'USDTWrapper'\n        }\n      }\n    },\n    OMG: {\n      symbol: 'OMG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'OMG'\n      },\n      address: '0xd26114cd6EE289AccF82350c8d8487fedB8A0C07',\n      decimals: 18,\n      name: 'OmiseGO Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'OMGW',\n          decimals: 18,\n          address: '0x60f8526f09caaf0008187945ccd88bc43790042c',\n          name: 'OMG Wrapper'\n        }\n      }\n    },\n    ZRX: {\n      symbol: 'ZRX',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ZRX'\n      },\n      address: '0xe41d2489571d322189246dafa5ebde1f4699f498',\n      decimals: 18,\n      name: '0x Protocol Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ZRXW',\n          decimals: 18,\n          address: '0xCf67d7A481CEEca0a77f658991A00366FED558F7',\n          name: 'ZRX Wrapper'\n        }\n      }\n    },\n    SAN: {\n      symbol: 'SAN',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'SAN'\n      },\n      address: '0x7c5a0ce9267ed19b22f8cae653f198e3e8daf098',\n      decimals: 18,\n      name: 'Santiment Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'SANW',\n          decimals: 18,\n          address: '0xb0abd4cc5195560209492b6854c666d7cff8c03c',\n          name: 'SAN Wrapper'\n        }\n      }\n    },\n    SNT: {\n      symbol: 'SNT',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'SNT'\n      },\n      address: '0x744d70fdbe2ba4cf95131626614a1763df805b9e',\n      decimals: 18,\n      name: 'StatusNetwork Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'SNTW',\n          decimals: 18,\n          address: '0x8aa72dd6045505836f643b39b82e70fd705f9686',\n          name: 'SNT Wrapper'\n        }\n      }\n    },\n    EDO: {\n      symbol: 'EDO',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'EDO'\n      },\n      address: '0xced4e93198734ddaff8492d525bd258d49eb388e',\n      decimals: 18,\n      name: 'Eidoo Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'EDO',\n          decimals: 18,\n          address: '0xab056a8119bb91ca50631bd319ee3df654bebfa2',\n          name: 'EDO Wrapper'\n        }\n      }\n    },\n    FUN: {\n      symbol: 'FUN',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'FUN'\n      },\n      address: '0x419d0d8bdd9af5e606ae2232ed285aff190e711b',\n      decimals: 8,\n      name: 'FunFair Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'FUN',\n          decimals: 8,\n          address: '0xb33ce6b1e48f450b4c6d4c0a3f281237eeea2dec',\n          name: 'FUN Wrapper'\n        }\n      }\n    },\n    REP: {\n      symbol: 'REP',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'REP'\n      },\n      address: '0x1985365e9f78359a9b6ad760e32412f4a445e862',\n      decimals: 18,\n      name: 'Reputation Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'REP',\n          decimals: 18,\n          address: '0x1488f99d305990694e19b3e72f6f0307cfa1df4e',\n          name: 'REP Wrapper'\n        }\n      }\n    },\n    MKR: {\n      symbol: 'MKR',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'MKR'\n      },\n      address: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',\n      decimals: 18,\n      name: 'Maker Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'MKR',\n          decimals: 18,\n          address: '0x38ae374ecf4db50b0ff37125b591a04997106a32',\n          name: 'MKR Wrapper'\n        }\n      }\n    },\n    DAI: {\n      symbol: 'DAI',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'DAI'\n      },\n      address: '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359',\n      decimals: 18,\n      name: 'Dai Stablecoin',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'DAI',\n          decimals: 18,\n          address: '0xd9ebebfdab08c643c5f2837632de920c70a56247',\n          name: 'DAI Wrapper'\n        }\n      }\n    },\n    BAT: {\n      symbol: 'BAT',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'BAT'\n      },\n      address: '0x0d8775f648430679a709e98d2b0cb6250d2887ef',\n      decimals: 18,\n      name: 'Basic Attention Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'BAT',\n          decimals: 18,\n          address: '0xe82cfc4713598dc7244368cf5aca1b102a04ce33',\n          name: 'BAT Wrapper'\n        }\n      }\n    },\n    NIO: {\n      symbol: 'NIO',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'NIO'\n      },\n      address: '0x5554e04e76533e1d14c52f05beef6c9d329e1e30',\n      decimals: 0,\n      name: 'Autonio Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'NIO',\n          decimals: 0,\n          address: '0x680bf2eebf0ad9b183ac2ff88d16f5a4e41480e9',\n          name: 'NIO Wrapper'\n        }\n      }\n    },\n    SPK: {\n      symbol: 'SPK',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'SPK'\n      },\n      address: '0x42d6622dece394b54999fbd73d108123806f6a18',\n      decimals: 18,\n      name: 'SPANK Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'SPK',\n          decimals: 18,\n          address: '0x70b04d0684ea9dc0c8e244e0a1453744350f3864',\n          name: 'SPK Wrapper'\n        }\n      }\n    }\n  },\n  ropsten: {\n    WETH: {\n      symbol: 'WETH',\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0xc778417e063141139fce010982780140aa0cd5ab',\n      decimals: 18,\n      name: 'Wrapped Ether 0x',\n      wrappers: {}\n    },\n    ZRX: {\n      symbol: 'ZRX',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ZRX'\n      },\n      address: '0xA8E9Fa8f91e5Ae138C74648c9C304F1C75003A8D',\n      decimals: 18,\n      name: '0x Protocol Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ZRXW',\n          decimals: 18,\n          address: '0xFF32E76EAdc11Fc816A727980E92805D237CDB28',\n          name: 'ZRX Wrapper'\n        }\n      }\n    },\n    ETHW: {\n      symbol: 'ETHW',\n      address: '0x06da2eb72279c1cec53c251bbff4a06fbfb93a5b',\n      decimals: 18,\n      name: 'Wrapped Ether EFX',\n      wrappers: {}\n    },\n    ETH: {\n      symbol: 'ETH',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'ETH'\n      },\n      address: '0x0',\n      decimals: 18,\n      name: 'Ether',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'ETHW',\n          decimals: 18,\n          address: '0x06da2eb72279c1cec53c251bbff4a06fbfb93a5b',\n          name: 'ETH Wrapper'\n        }\n      }\n    },\n    USDT: {\n      symbol: 'USDT',\n      isOldERC20: true,\n      symbolTicker: {\n        Ethfinex: 'USD'\n      },\n      address: '0x0736d0c130b2eAD47476cC262dbed90D7C4eeABD',\n      decimals: 6,\n      name: 'Tether USD',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'USDTW',\n          decimals: 6,\n          address: '0x84442a4518126ed25a548fe3392f6021e3ccd5bb',\n          name: 'USDT Wrapper'\n        }\n      }\n    },\n    GRG: {\n      symbol: 'GRG',\n      isOldERC20: false,\n      symbolTicker: {\n        Ethfinex: 'GRG'\n      },\n      address: '0x6FA8590920c5966713b1a86916f7b0419411e474',\n      decimals: 18,\n      faucetAddress: '0x756519e3A48d5E4A02e0a6197A0cBb783ff06738',\n      name: 'GRG Token',\n      wrappers: {\n        Ethfinex: {\n          symbol: 'GRGW',\n          decimals: 18,\n          address: '0xacfb4c79259e3c2c1bf054f136e6d75f7cc2b07e',\n          name: 'GRG Wrapper'\n        }\n      }\n    }\n  }\n}\n\n// Supported tokens for trading in the form of base tokens for each quote tokens.\n// USDT and WETH are quote tokens, meaning the tokens in which the price are expressed.\n\nexport const TRADE_TOKENS_PAIRS = {\n  [WETH]: {\n    [GNT]: {\n      networks: [42],\n      symbol: GNT,\n      exchanges: [ERCdEX]\n    },\n    [ZRX]: {\n      networks: [1, 42],\n      symbol: ZRX,\n      exchanges: [ERCdEX]\n    }\n  },\n  [USDT]: {\n    [GRG]: {\n      networks: [3],\n      symbol: GRG,\n      exchanges: [Ethfinex]\n    },\n    [ETH]: {\n      networks: [1, 3, 42],\n      symbol: ETH,\n      exchanges: [Ethfinex]\n    },\n    [OMG]: {\n      networks: [1],\n      symbol: OMG,\n      exchanges: [Ethfinex]\n    },\n    [ZRX]: {\n      networks: [1, 42],\n      symbol: ZRX,\n      exchanges: [Ethfinex]\n    },\n    [SAN]: {\n      networks: [1],\n      symbol: SAN,\n      exchanges: [Ethfinex]\n    },\n    [SNT]: {\n      networks: [1],\n      symbol: SNT,\n      exchanges: [Ethfinex]\n    },\n    [EDO]: {\n      networks: [1],\n      symbol: EDO,\n      exchanges: [Ethfinex]\n    },\n    [FUN]: {\n      networks: [1],\n      symbol: FUN,\n      exchanges: [Ethfinex]\n    },\n    [REP]: {\n      networks: [1],\n      symbol: REP,\n      exchanges: [Ethfinex]\n    },\n    [MKR]: {\n      networks: [1],\n      symbol: MKR,\n      exchanges: [Ethfinex]\n    },\n    [BAT]: {\n      networks: [1],\n      symbol: BAT,\n      exchanges: [Ethfinex]\n    },\n    [NIO]: {\n      networks: [1],\n      symbol: NIO,\n      exchanges: [Ethfinex]\n    }\n  },\n  [ETH]: {\n    [GRG]: {\n      networks: [3],\n      symbol: GRG,\n      exchanges: [Ethfinex]\n    },\n    [OMG]: {\n      networks: [1],\n      symbol: OMG,\n      exchanges: [Ethfinex]\n    },\n    [ZRX]: {\n      networks: [1, 42],\n      symbol: ZRX,\n      exchanges: [Ethfinex]\n    },\n    [SAN]: {\n      networks: [1],\n      symbol: SAN,\n      exchanges: [Ethfinex]\n    },\n    [SNT]: {\n      networks: [1],\n      symbol: SNT,\n      exchanges: [Ethfinex]\n    },\n    [EDO]: {\n      networks: [1],\n      symbol: EDO,\n      exchanges: [Ethfinex]\n    },\n    [FUN]: {\n      networks: [1],\n      symbol: FUN,\n      exchanges: [Ethfinex]\n    },\n    [REP]: {\n      networks: [1],\n      symbol: REP,\n      exchanges: [Ethfinex]\n    },\n    [MKR]: {\n      networks: [1],\n      symbol: MKR,\n      exchanges: [Ethfinex]\n    },\n    [BAT]: {\n      networks: [1],\n      symbol: BAT,\n      exchanges: [Ethfinex]\n    },\n    [NIO]: {\n      networks: [1],\n      symbol: NIO,\n      exchanges: [Ethfinex]\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountChipTokenETH\":\"accountTopBarSummary_accountChipTokenETH__1F1Fa\",\"accountChipTokenGGG\":\"accountTopBarSummary_accountChipTokenGGG__1T_Qx\",\"transferButton\":\"accountTopBarSummary_transferButton__LQ29I\",\"copyAddress\":\"accountTopBarSummary_copyAddress__6E_LO\",\"actionButtons\":\"accountTopBarSummary_actionButtons__3e_WL\",\"paperContainer\":\"accountTopBarSummary_paperContainer__3lKra\",\"accountTitleContainer\":\"accountTopBarSummary_accountTitleContainer__37t6l\",\"accountBodyContainer\":\"accountTopBarSummary_accountBodyContainer__2imYO\",\"title\":\"accountTopBarSummary_title__2vWNc\",\"subTitle\":\"accountTopBarSummary_subTitle__6d0t7\",\"actionIcons\":\"accountTopBarSummary_actionIcons__dq8ah\",\"balance\":\"accountTopBarSummary_balance__3RAPL\",\"actionsContainer\":\"accountTopBarSummary_actionsContainer__2epU6\"};","export const blockChunks = (start, end, chunk, web3) => {\n  // if (end === 'latest') {\n  //   try {\n  //     end = await web3.eth.getBlockNumber()\n  //   } catch (e) {\n  //     return console.error(e)\n  //   }\n  // }\n  end = Number(end)\n  chunk = Number(chunk)\n  start = Number(start)\n  let rangesArray = []\n  let i = 0\n  let fromBlock = end - chunk\n  let toBlock = end\n\n  if (end - chunk < start) {\n    rangesArray.push({\n      fromBlock: start,\n      toBlock: 'latest'\n    })\n    // console.log(\n    //   `***** Chunk ${i} -> fromBlock ${start} -> toBlock ${end} ('latest')`\n    // )\n    return rangesArray\n  }\n  while (toBlock > start) {\n    if (i === 0) {\n      rangesArray.push({\n        fromBlock: fromBlock + 1,\n        toBlock: 'latest'\n      })\n    } else {\n      rangesArray.push({\n        fromBlock: fromBlock + 1,\n        toBlock: toBlock\n      })\n    }\n    // console.log(\n    //   `***** Chunk ${i} -> fromBlock ${fromBlock + 1} -> toBlock ${toBlock}`\n    // )\n    i++\n    // fromBlock = fromBlock - chunk\n    // toBlock = toBlock - chunk\n    if (i > 100) break\n    if (fromBlock - chunk < start) {\n      rangesArray.push({\n        fromBlock: Number(start),\n        toBlock: fromBlock\n      })\n      // console.log(\n      //   `***** Chunk ${i} -> fromBlock ${Number(\n      //     start\n      //   )} -> toBlock ${fromBlock}`\n      // )\n      break\n    }\n    fromBlock = fromBlock - chunk\n    toBlock = toBlock - chunk\n  }\n  // logger.info(`${JSON.stringify(rangesArray)}`)\n  // rangesArray.map((chunk, key) => {\n  //   // console.log(\n  //   //   `***** Chunk ${key} -> fromBlock ${chunk.fromBlock} -> toBlock ${\n  //   //     chunk.toBlock\n  //   //   }`\n  //   // )\n  // })\n  return rangesArray\n}\n\nexport const getBlockChunks = async (start, end, chunkSize, web3) => {\n  const startBlock = start\n  const chunks = []\n  let endBlock = end\n  if (endBlock === 'latest') {\n    try {\n      endBlock = await web3.eth.getBlockNumber()\n    } catch (e) {\n      return console.error(e)\n    }\n  }\n  for (let i = startBlock - 1; i < endBlock; i += chunkSize) {\n    const fromBlock = i + 1\n    const toBlock = i + chunkSize > endBlock ? end : i + chunkSize\n    chunks.push({ fromBlock, toBlock })\n  }\n  return chunks.reverse()\n}\n","import { formatCoins, formatEth } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport { getFromBlock, getWeb3 } from '../../_utils/misc'\n\nexport const getTransactionsSingleDrago = async (\n  dragoAddress,\n  networkInfo,\n  accounts,\n  options = {\n    limit: 20\n  }\n) => {\n\n  const web3 = getWeb3(networkInfo)\n  let fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n\n  await poolApi.contract.dragoeventful.init()\n  const contract = poolApi.contract.dragoeventful\n\n  const logToEvent = log => {\n    const key = web3.utils.sha3(JSON.stringify(log))\n    const {\n      address,\n      blockNumber,\n      event,\n      logIndex,\n      returnValues,\n      transactionHash,\n      transactionIndex\n    } = log\n\n    const hexToString = hex => {\n      let string = ''\n      for (let i = 0; i < hex.length; i += 2) {\n        string += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n      }\n      return string\n    }\n\n    let ethvalue,\n      drgvalue = 0\n\n    if (\n      typeof returnValues.amount !== 'undefined' &&\n      typeof returnValues.revenue !== 'undefined'\n    ) {\n      ethvalue =\n        event === 'BuyDrago'\n          ? formatEth(returnValues.amount, null)\n          : formatEth(returnValues.revenue, null)\n      drgvalue =\n        event === 'SellDrago'\n          ? formatCoins(returnValues.amount, null)\n          : formatCoins(returnValues.revenue, null)\n    }\n    let symbol\n    if (typeof returnValues.symbol === 'string') {\n      '0x' === returnValues.symbol.substring(0, 2)\n        ? (symbol = hexToString(returnValues.symbol.substring(2)))\n        : (symbol = returnValues.symbol)\n    } else {\n      for (let i = 0; i < returnValues.symbol.length; ++i) {\n        symbol += String.fromCharCode(returnValues.symbol[i])\n      }\n    }\n    return {\n      address,\n      type: event,\n      blockNumber: new BigNumber(blockNumber),\n      logIndex,\n      transactionHash,\n      transactionIndex,\n      params: returnValues,\n      key,\n      ethvalue,\n      drgvalue,\n      symbol: symbol\n    }\n  }\n\n  // Getting all buyDrago and selDrago events since block 0.\n  // dragoFactoryEventsSignatures accesses the contract ABI, gets all the events and for each creates a hex signature\n  // to be passed to getAllLogs. Events are indexed and filtered by topics\n  // more at: http://solidity.readthedocs.io/en/develop/contracts.html?highlight=event#events\n\n  // The second param of the topics array is the drago address\n  // The third param of the topics array is the from address\n  // The third param of the topics array is the to address\n  //\n  //  https://github.com/RigoBlock/Books/blob/master/Solidity_01_Events.MD\n\n  const hexPoolAddress = '0x' + dragoAddress.substr(2).padStart(64, '0')\n  const hexAccounts = accounts.map(account => {\n    const hexAccount = '0x' + account.address.substr(2).padStart(64, '0')\n    return hexAccount\n  })\n\n  const getChunkedEvents = topics => {\n    let arrayPromises = []\n    return web3.eth.getBlockNumber().then(async lastBlock => {\n      let chunck = 250000\n      lastBlock = new BigNumber(lastBlock).toNumber()\n      const chunks = await getBlockChunks(fromBlock, lastBlock, chunck)\n      arrayPromises = chunks.map(async chunk => {\n        // Pushing chunk logs into array\n        let options = {\n          topics: topics,\n          fromBlock: chunk.fromBlock,\n          toBlock: chunk.toBlock\n        }\n        return await poolApi.contract.dragoeventful\n          .getAllLogs(options)\n          .then(log => {\n            return log\n          })\n      })\n\n      return Promise.all(arrayPromises).then(results => {\n        let logs = [].concat(...results)\n        return logs.map(logToEvent)\n      })\n    })\n  }\n\n  let eventsFilterBuySell\n\n  if (options.trader) {\n\n    eventsFilterBuySell = [\n      [contract.hexSignature.BuyDrago, contract.hexSignature.SellDrago],\n      [hexPoolAddress],\n      hexAccounts,\n      null\n    ]\n  } else {\n\n    eventsFilterBuySell = [\n      [\n        contract.hexSignature.BuyDrago,\n        contract.hexSignature.SellDrago,\n        contract.hexSignature.DragoCreated\n      ],\n      [hexPoolAddress],\n      null,\n      null\n    ]\n  }\n\n  let promisesEvents = [getChunkedEvents(eventsFilterBuySell)]\n\n  return Promise.all(promisesEvents)\n    .then(logs => {\n      let dragoTransactionsLogs = logs[0].slice(\n        logs[0].length - options.limit,\n        logs[0].length\n      )\n      return dragoTransactionsLogs\n    })\n    .then(dragoTransactionsLog => {\n      // Creating an array of promises that will be executed to add timestamp to each entry\n      // Doing so because for each entry we need to make an async call to the client\n      // For additional refernce: https://stackoverflow.com/questions/39452083/using-promise-function-inside-javascript-array-map\n      let logPromises = dragoTransactionsLog.map(async log => {\n        return web3.eth\n          .getBlock(new BigNumber(log.blockNumber).toFixed(0))\n          .then(block => {\n            log.timestamp = new Date(block.timestamp * 1000)\n            return log\n          })\n          .catch(error => {\n            // Sometimes Infura returns null for api.eth.getBlockByNumber, therefore we are assigning a fake timestamp to avoid\n            // other issues in the app.\n\n            log.timestamp = new Date()\n            return log\n          })\n      })\n      return Promise.all(logPromises).then(results => {\n        results.sort(function (x, y) {\n          return y.timestamp - x.timestamp\n        })\n        console.log(\n          `getTransactionsSingleDrago -> Single Drago Transactions list loaded: trader ${options.trader}`\n        )\n        return results\n      })\n    })\n}\n","import { formatCoins } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport { getFromBlock, getWeb3 } from '../../_utils/misc'\nimport { getTransactionsSingleDrago } from './getTransactionsSingleDrago'\nimport { logToEvent } from '../blockChain/logToEvent'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport moment from 'moment'\n\n/**\n * Get the event logs from a the Drago registry\n * @param  {object} api - The Parity Api\n * @param  {sting} dragoAddress - The drago contract address\n * @param  {array} accounts - The ethereum accounts to filter\n * @param  {object} options - Set the information to return\n * @returns {promise} Promise object represents returning array of balances and transactions\n *\n *\n * This function returns an array of arrays: balances, list of transacions and supply.\n * The parameter options set the arrays to be populated\n * The functions always returns all the arrays. Setting the options will\n * make the function to return an empty array\n *\n * This function can be a performance hit, so it will need to be optimized as much as possible.\n **/\nexport const getTransactionsDragoOptV2 = async (\n  networkInfo,\n  poolAddress,\n  accounts = [],\n  options = {\n    balance: true,\n    supply: false,\n    limit: 20,\n    trader: true,\n    drago: true\n  }\n) => {\n  if (poolAddress)\n    return getTransactionsSingleDrago(\n      poolAddress,\n      networkInfo,\n      accounts,\n      options\n    )\n  let startTime = new Date()\n  if (accounts.length === 0) {\n    return [Array(0), Array(0), Array(0)]\n  }\n\n  const web3 = getWeb3(networkInfo)\n  let fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n  let dragoSymbolRegistry = new Map()\n\n  console.log(\n    `***** ${moment().format()} Utils: ${\n      options.drago ? 'DRAGO' : 'VAULT'\n    } events fetching started *****`\n  )\n\n  const logToEventInternal = log => {\n    return logToEvent(log, dragoSymbolRegistry)\n  }\n  // Getting all buyDrago and selDrago events since block 0.\n  // dragoFactoryEventsSignatures accesses the contract ABI, gets all the events and for each creates a hex signature\n  // to be passed to getAllLogs. Events are indexed and filtered by topics\n  // more at: http://solidity.readthedocs.io/en/develop/contracts.html?highlight=event#events\n\n  // The second param of the topics array is the drago address\n  // The third param of the topics array is the from address\n  // The third param of the topics array is the to address\n  //\n  //  https://github.com/RigoBlock/Books/blob/master/Solidity_01_Events.MD\n\n  let hexAccounts = null\n  let hexPoolAddress = null\n  if (poolAddress)\n    hexPoolAddress = ['0x' + poolAddress.substr(2).padStart(64, '0')]\n  // Formatting accounts address\n  if (accounts !== null) {\n    hexAccounts = accounts.map(account => {\n      const hexAccount = '0x' + account.address.substr(2).padStart(64, '0')\n      return hexAccount\n    })\n  }\n\n  const getPoolsFromOwner = async () => {\n    let arrayPromises = accounts.map(async account => {\n      await poolApi.contract.dragofactory.init()\n      const poolsList = await poolApi.contract.dragofactory\n        .getDragosByAddress(account.address)\n        .then(results => {\n          return results\n        })\n        .catch(error => {\n          console.warn(error)\n          throw error\n        })\n      poolsList.forEach(v => {\n        const dragoData = {\n          symbol: null,\n          dragoId: null,\n          name: null,\n          address: v\n        }\n        if (!dragoSymbolRegistry.has(v)) {\n          dragoSymbolRegistry.set(v, dragoData)\n        }\n      })\n      return poolsList\n    })\n\n    return Promise.all(arrayPromises)\n  }\n  if (options.trader) {\n  } else {\n    await getPoolsFromOwner()\n  }\n  // Initializing the eventful contract\n  return poolApi.contract.dragoregistry.init().then(() => {\n    return poolApi.contract.dragoeventful.init().then(() => {\n      const getChunkedEvents = topics => {\n        let arrayPromises = []\n        return web3.eth.getBlockNumber().then(async lastBlock => {\n          let chunck = 250000\n          lastBlock = new BigNumber(lastBlock).toNumber()\n          const chunks = await getBlockChunks(fromBlock, lastBlock, chunck)\n          arrayPromises = chunks.map(async chunk => {\n            // Pushing chunk logs into array\n            let options = {\n              topics: topics,\n              fromBlock: chunk.fromBlock,\n              toBlock: chunk.toBlock\n            }\n            return await poolApi.contract.dragoeventful.getAllLogs(options)\n          })\n\n          return Promise.all(arrayPromises).then(results => {\n            let dragoTransactionsLog = [].concat(...results)\n            const logs = dragoTransactionsLog.map(logToEventInternal)\n            return logs\n          })\n        })\n      }\n      let eventSig\n      eventSig = options.drago\n        ? [\n            poolApi.contract.dragoeventful.hexSignature.BuyDrago,\n            poolApi.contract.dragoeventful.hexSignature.SellDrago\n          ]\n        : [\n            poolApi.contract.vaulteventful.hexSignature.BuyVault,\n            poolApi.contract.vaulteventful.hexSignature.SellVault\n          ]\n\n      let topicsBuySell = [eventSig, hexPoolAddress, hexAccounts, null]\n\n      eventSig = options.drago\n        ? [poolApi.contract.dragoeventful.hexSignature.DragoCreated]\n        : [poolApi.contract.vaulteventful.hexSignature.VaultCreated]\n\n      let topicsCreate = [eventSig, null, null, hexAccounts]\n\n      let promisesEvents = null\n\n      options.trader\n        ? (promisesEvents = [getChunkedEvents(topicsBuySell)])\n        : (promisesEvents = [getChunkedEvents(topicsCreate)])\n\n      return Promise.all(promisesEvents)\n        .then(results => {\n          let allLogs = [...results[0]]\n          // Creating an array of promises that will be executed to add timestamp and symbol to each entry\n          // Doing so because for each entry we need to make an async call to the client\n          // For additional refernce: https://stackoverflow.com/questions/39452083/using-promise-function-inside-javascript-array-map\n          // console.log(results)\n\n          function compare(a, b) {\n            const blocklNumberA = a.blockNumber\n            const blocklNumberB = b.blockNumber\n\n            let comparison = 0\n            if (blocklNumberA.gt(blocklNumberB)) {\n              comparison = 1\n            } else if (blocklNumberA.lt(blocklNumberB)) {\n              comparison = -1\n            }\n            return comparison\n          }\n\n          let supply = []\n          let balances = []\n          let balancesList = []\n          allLogs.sort(compare)\n          let dragoTransactionsLogs = allLogs.slice(\n            allLogs.length - options.limit,\n            allLogs.length\n          )\n\n          // This is an inefficient way to get the symbol for each transactions.\n          // In the future the symbol will have to be saved in the eventful logs.\n          const getDragoDetails = () => {\n            let arrayPromises = []\n            dragoSymbolRegistry.forEach((v, k) => {\n              arrayPromises.push(\n                poolApi.contract.dragoregistry\n                  .fromAddress(k)\n                  .then(dragoDetails => {\n                    const dragoData = {\n                      symbol: dragoDetails[2].trim(),\n                      dragoId: new BigNumber(dragoDetails[3]).toFixed(),\n                      name: dragoDetails[1].trim(),\n                      address: k.trim()\n                    }\n\n                    dragoSymbolRegistry.set(k, dragoData)\n                    return dragoDetails\n                  })\n                  .catch(error => {\n                    console.warn(error)\n                    throw error\n                  })\n              )\n            })\n            return arrayPromises\n          }\n\n          const getDragoSupply = () => {\n            let arrayPromises = []\n            if (options.supply === false) {\n              supply = []\n              return arrayPromises\n            }\n            // let poolApi = new PoolApi(window.web3)\n            dragoSymbolRegistry.forEach((v, k) => {\n              poolApi.contract.drago.init(k)\n              arrayPromises.push(\n                poolApi.contract.drago\n                  .totalSupply()\n                  .then(dragoSupply => {\n                    const {\n                      symbol,\n                      name,\n                      dragoId,\n                      address\n                    } = dragoSymbolRegistry.get(k)\n                    supply.push({\n                      supply: formatCoins(new BigNumber(dragoSupply), 4),\n                      name: name.trim(),\n                      symbol: symbol,\n                      dragoId: dragoId,\n                      address: address\n                    })\n                  })\n                  .catch(error => {\n                    console.warn(error)\n                    throw error\n                  })\n              )\n            })\n            return arrayPromises\n          }\n\n          // Getting dragos balances\n          const getDragoBalances = () => {\n            // let poolApi = new PoolApi(window.web3)\n            let arrayPromises = []\n            // Checking if balance return is required\n            if (options.balance === false) {\n              balances = []\n              return arrayPromises\n            }\n            accounts.forEach(account => {\n              let accountAddress = account.address\n              balances[accountAddress] = []\n              dragoSymbolRegistry.forEach((v, k) => {\n                poolApi.contract.drago.init(k)\n                arrayPromises.push(\n                  poolApi.contract.drago\n                    .balanceOf(accountAddress)\n                    .then(dragoBalance => {\n                      const {\n                        symbol,\n                        name,\n                        dragoId,\n                        address\n                      } = dragoSymbolRegistry.get(k)\n                      balances[accountAddress][dragoId] = {\n                        balance: new BigNumber(dragoBalance),\n                        name: name.trim(),\n                        symbol: symbol,\n                        dragoId: dragoId,\n                        address: address\n                      }\n                    })\n                    .catch(error => {\n                      console.warn(error)\n                      throw error\n                    })\n                )\n              })\n            })\n            return arrayPromises\n          }\n\n          const getTimestamp = logs => {\n            return logs.map(log => {\n              return web3.eth\n                .getBlock(new BigNumber(log.blockNumber).toFixed(0))\n                .then(block => {\n                  log.timestamp = new Date(block.timestamp * 1000)\n                  return log\n                })\n                .catch(() => {\n                  // Sometimes Infura returns null for api.eth.getBlockByNumber, therefore we are assigning a fake timestamp to avoid\n                  // other issues in the app.\n                  log.timestamp = new Date(0)\n                  return log\n                })\n            })\n          }\n\n          return Promise.all(getDragoDetails()).then(() => {\n            return Promise.all(getDragoSupply()).then(() => {\n              return Promise.all(getDragoBalances())\n                .then(() => {\n                  if (options.balance) {\n                    // Reorganizing the balances array\n                    let balancesRegistry = new Map()\n                    let tokenBalances = []\n                    for (let v in balances) {\n                      balances[v].forEach(balance => {\n                        if (balancesRegistry.has(balance.dragoId)) {\n                          let dragoBalance = balancesRegistry.get(\n                            balance.dragoId\n                          ).balance\n                          balancesRegistry.set(balance.dragoId, {\n                            symbol: balance.symbol,\n                            dragoId: balance.dragoId,\n                            name: balance.name,\n                            address: balance.address,\n                            balance: dragoBalance.plus(balance.balance)\n                          })\n                        } else {\n                          balancesRegistry.set(balance.dragoId, {\n                            symbol: balance.symbol,\n                            dragoId: balance.dragoId,\n                            name: balance.name,\n                            address: balance.address,\n                            balance: balance.balance\n                          })\n                        }\n                      })\n                    }\n                    balancesRegistry.forEach((v, k) => {\n                      // Filtering empty balances\n                      if (balancesRegistry.get(k).balance.gt(0)) {\n                        tokenBalances.push({\n                          symbol: balancesRegistry.get(k).symbol,\n                          name: balancesRegistry.get(k).name,\n                          dragoId: balancesRegistry.get(k).dragoId,\n                          address: balancesRegistry.get(k).address,\n                          balance: formatCoins(\n                            balancesRegistry.get(k).balance,\n                            4\n                          )\n                        })\n                      }\n                    })\n                    balancesList = tokenBalances\n                  }\n                })\n                .then(() => {\n                  let logs = dragoTransactionsLogs\n                  // console.log(\n                  //   `***** ${moment().format()} Utils: symbols loaded *****`\n                  // )\n                  return Promise.all(getTimestamp(logs)).then(logs => {\n                    // console.log(\n                    //   `***** ${moment().format()} Utils: events timestamp fetched *****`\n                    // )\n                    balancesList.sort(function(a, b) {\n                      if (a.symbol < b.symbol) return -1\n                      if (a.symbol > b.symbol) return 1\n                      return 0\n                    })\n                    logs.reverse()\n                    supply.sort(function(a, b) {\n                      if (a.symbol < b.symbol) return -1\n                      if (a.symbol > b.symbol) return 1\n                      return 0\n                    })\n                    let results = [balancesList, logs, supply]\n                    return results\n                  })\n                  // return dragoTransactionsLogs\n                })\n                .catch(error => {\n                  console.warn(error)\n                  throw error\n                })\n            })\n          })\n        })\n        .then(results => {\n          let endTime = new Date()\n          let dif = startTime.getTime() - endTime.getTime()\n          let Seconds_from_T1_to_T2 = dif / 1000\n          let Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2)\n          if (options.trader) {\n            console.log(\n              `***** ${moment().format()} Utils: ${\n                options.drago ? 'DRAGO' : 'VAULT'\n              } Holder transactions loaded in ${Seconds_Between_Dates}s *****`\n            )\n          } else {\n            console.log(\n              `***** ${moment().format()} Utils: ${\n                options.drago ? 'DRAGO' : 'VAULT'\n              } Manager transactions loaded in ${Seconds_Between_Dates}s *****`\n            )\n          }\n          return results\n        })\n    })\n  })\n}\n","import { dateFromTimeStampHuman } from '../misc/dateFromTimeStampHuman'\nimport { formatCoins, formatEth } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport { getFromBlock, getWeb3 } from '../misc'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\n\nexport const getDragoDetails = async (\n  dragoDetails,\n  accounts,\n  networkInfo,\n  options = { dateOnly: false, wallet: '' }\n) => {\n  //\n  // Initializing Drago API\n  //\n\n  let web3 = getWeb3(networkInfo, options)\n  let fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n\n  const dragoAddress = dragoDetails[0][0]\n\n  await Promise.all([\n    poolApi.contract.dragoeventful.init(),\n    poolApi.contract.drago.init(dragoAddress)\n  ]).catch(e => new Error(e))\n\n  //\n  // Getting drago data, creation date, supply, ETH balances\n  //\n\n  const getDragoCreationDate = async address => {\n    const hexPoolAddress = '0x' + address.substr(2).padStart(64, '0')\n    let topics = [\n      [poolApi.contract.dragoeventful.hexSignature.DragoCreated],\n      [hexPoolAddress],\n      null,\n      null\n    ]\n\n    let arrayPromises = []\n    return web3.eth.getBlockNumber().then(async lastBlock => {\n      let chunck = 250000\n      lastBlock = new BigNumber(lastBlock).toNumber()\n      const chunks = await getBlockChunks(fromBlock, lastBlock, chunck, web3)\n\n      arrayPromises = chunks.map(async chunk => {\n        let options = {\n          topics: topics,\n          fromBlock: chunk.fromBlock,\n          toBlock: chunk.toBlock\n        }\n        return poolApi.contract.dragoeventful\n          .getAllLogs(options)\n          .then(logs => {\n            return logs\n          })\n          .catch(error => {\n            console.warn(error)\n            throw Error(error)\n          })\n      })\n\n      return Promise.all(arrayPromises)\n        .then(results => {\n          if (results.length > 0) {\n            let logs = [].concat(...results)\n            if (logs.length !== 0) {\n              return web3.eth\n                .getBlock(logs[0].blockNumber.toFixed(0))\n                .then(result => {\n                  let date\n                  try {\n                    date = dateFromTimeStampHuman(result.timestamp)\n                  } catch (error) {\n                    date = '-'\n                  }\n                  return date\n                })\n                .catch(error => {\n                  console.warn(error)\n                  throw new Error(error)\n                })\n            } else {\n              return '-'\n            }\n          } else {\n            return '-'\n          }\n        })\n        .catch(error => {\n          console.warn(error)\n          throw Error(error)\n        })\n    })\n  }\n\n  if (options.dateOnly) {\n    let dragoCreatedDate = await getDragoCreationDate(dragoAddress)\n    let details = {\n      address: dragoAddress,\n      created: dragoCreatedDate\n    }\n    return details\n  }\n\n  let balanceDRG = new BigNumber(0)\n  let dragoData = poolApi.contract.drago.getData()\n  let dragoTotalSupply = poolApi.contract.drago.totalSupply()\n  let dragoETH = poolApi.contract.drago.getBalance()\n  let dragoWETH = poolApi.contract.drago.getBalanceWETH()\n\n  //\n  // Getting balance for each user account\n  //\n\n  if (accounts.length > 1) {\n    await Promise.all(\n      accounts.map(async account => {\n        const balance = await poolApi.contract.drago\n          .balanceOf(account.address)\n          .catch(e => new Error(e))\n        balanceDRG = balanceDRG.plus(balance)\n      })\n    )\n  } else {\n    balanceDRG = poolApi.contract.drago.balanceOf(accounts[0].address)\n  }\n\n  try {\n    dragoData = await dragoData\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    dragoTotalSupply = await dragoTotalSupply\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    dragoETH = await dragoETH\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    dragoWETH = await dragoWETH\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    balanceDRG = await balanceDRG\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  let sellPrice = formatEth(dragoData[2], 4)\n  let buyPrice = formatEth(dragoData[3], 4)\n\n  let details = {\n    address: dragoDetails[0][0],\n    name:\n      dragoDetails[0][1].charAt(0).toUpperCase() + dragoDetails[0][1].slice(1),\n    symbol: dragoDetails[0][2],\n    dragoId: new BigNumber(dragoDetails[0][3]).toFixed(),\n    addressOwner: dragoDetails[0][4],\n    addressGroup: dragoDetails[0][5],\n    sellPrice,\n    buyPrice,\n    totalSupply: formatCoins(new BigNumber(dragoTotalSupply), 4),\n    totalSupplyBaseUnits: new BigNumber(dragoTotalSupply),\n    dragoETHBalance: formatEth(dragoETH, 4),\n    dragoETHBalanceWei: new BigNumber(dragoETH),\n    dragoWETHBalance: formatEth(dragoWETH, 4),\n    balanceDRG: formatCoins(balanceDRG, 4)\n  }\n\n  return details\n}\n","import { dateFromTimeStampHuman } from '../misc/dateFromTimeStampHuman'\nimport { formatCoins, formatEth } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport { getFromBlock, getWeb3 } from '../misc'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\n\nexport const getVaultDetails = async (\n  vaultDetails,\n  accounts,\n  networkInfo,\n  options = { dateOnly: false, wallet: '' }\n) => {\n  //\n  // Initializing Vault API\n  //\n\n  const web3 = getWeb3(networkInfo, options)\n  const fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n\n  const vaultAddress = vaultDetails[0][0]\n\n  await Promise.all([\n    poolApi.contract.vaulteventful.init(),\n    poolApi.contract.vault.init(vaultAddress)\n  ]).catch(e => new Error(e))\n\n  //\n  // Getting vault data, creation date, supply, ETH balances\n  //\n\n  const getVaultCreationDate = async address => {\n    const hexPoolAddress = '0x' + address.substr(2).padStart(64, '0')\n\n    let topics = [\n      [poolApi.contract.vaulteventful.hexSignature.VaultCreated],\n      [hexPoolAddress],\n      null,\n      null\n    ]\n\n    let arrayPromises = []\n    return web3.eth.getBlockNumber().then(async lastBlock => {\n      let chunck = 250000\n      lastBlock = new BigNumber(lastBlock).toNumber()\n      const chunks = await getBlockChunks(fromBlock, lastBlock, chunck)\n      arrayPromises = chunks.map(async chunk => {\n        // Pushing chunk logs into array\n        let options = {\n          topics: topics,\n          fromBlock: chunk.fromBlock,\n          toBlock: chunk.toBlock\n        }\n        return await poolApi.contract.vaulteventful\n          .getAllLogs(options)\n          .then(logs => {\n            return logs\n          })\n          .catch(error => {\n            console.warn(error)\n            throw Error(error)\n          })\n      })\n\n      return Promise.all(arrayPromises)\n        .then(results => {\n          if (results.length > 0) {\n            let logs = [].concat(...results)\n            if (logs.length !== 0) {\n              return web3.eth\n                .getBlock(logs[0].blockNumber.toFixed(0))\n                .then(result => {\n                  let date\n                  try {\n                    date = dateFromTimeStampHuman(result.timestamp)\n                  } catch (error) {\n                    date = '-'\n                  }\n                  return date\n                })\n                .catch(error => {\n                  console.warn(error)\n                  throw new Error(error)\n                })\n            } else {\n              return '-'\n            }\n          } else {\n            return '-'\n          }\n        })\n        .catch(error => {\n          console.warn(error)\n          throw Error(error)\n        })\n    })\n  }\n\n  if (options.dateOnly) {\n    let vaultCreated = await getVaultCreationDate(vaultAddress)\n    let details = {\n      address: vaultAddress,\n      created: vaultCreated\n    }\n    return details\n  }\n\n  let balanceDRG = new BigNumber(0)\n  let vaultData = poolApi.contract.vault.getData()\n  let vaultAdminData = poolApi.contract.vault.getAdminData()\n  let vaultTotalSupply = poolApi.contract.vault.totalSupply()\n  let vaultETH = poolApi.contract.vault.getBalance()\n  let fee = ''\n\n  //\n  // Getting balance for each user account\n  //\n  if (accounts.length > 1) {\n    await Promise.all(\n      accounts.map(async account => {\n        const balance = await poolApi.contract.vault\n          .balanceOf(account.address)\n          .catch(e => new Error(e))\n        balanceDRG = balanceDRG.plus(balance)\n      })\n    )\n  } else {\n    balanceDRG = poolApi.contract.vault.balanceOf(accounts[0].address)\n  }\n\n  try {\n    vaultData = await vaultData\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    vaultAdminData = await vaultAdminData\n    fee = new BigNumber(vaultAdminData[4]).div(100).toFixed(2)\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    vaultTotalSupply = await vaultTotalSupply\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    vaultETH = await vaultETH\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  try {\n    balanceDRG = await balanceDRG\n  } catch (err) {\n    console.warn(err)\n    throw new Error(err)\n  }\n\n  let sellPrice = formatEth(vaultData[2], 4)\n  let buyPrice = formatEth(vaultData[3], 4)\n  let details = {\n    address: vaultDetails[0][0],\n    name:\n      vaultDetails[0][1].charAt(0).toUpperCase() + vaultDetails[0][1].slice(1),\n    symbol: vaultDetails[0][2],\n    vaultId: new BigNumber(vaultDetails[0][3]).toFixed(),\n    addressOwner: vaultDetails[0][4],\n    addressGroup: vaultDetails[0][5],\n    sellPrice,\n    buyPrice,\n    totalSupply: formatCoins(new BigNumber(vaultTotalSupply), 4),\n    vaultETHBalance: formatEth(vaultETH, 4),\n    fee,\n    balanceDRG: formatCoins(balanceDRG, 4)\n  }\n\n  return details\n}\n","import { formatCoins, formatEth } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport { getFromBlock, getWeb3 } from '../../_utils/misc'\n\nexport const getTransactionsSingleVault = async (\n  poolAddress,\n  networkInfo,\n  accounts,\n  options = {\n    limit: 20\n  }\n) => {\n  const web3 = getWeb3(networkInfo)\n  let fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n\n  await poolApi.contract.vaulteventful.init()\n  const contract = poolApi.contract.vaulteventful\n\n\n  const logToEvent = log => {\n    const key = web3.utils.sha3(JSON.stringify(log))\n    const {\n      address,\n      blockNumber,\n      event,\n      logIndex,\n      returnValues,\n      transactionHash,\n      transactionIndex\n    } = log\n\n    const hexToString = hex => {\n      let string = ''\n      for (let i = 0; i < hex.length; i += 2) {\n        string += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n      }\n      return string\n    }\n\n    let ethvalue,\n      drgvalue = 0\n\n    if (\n      typeof returnValues.amount !== 'undefined' &&\n      typeof returnValues.revenue !== 'undefined'\n    ) {\n      ethvalue =\n        event === 'BuyVault'\n          ? formatEth(returnValues.amount, null)\n          : formatEth(returnValues.revenue, null)\n      drgvalue =\n        event === 'SellVault'\n          ? formatCoins(returnValues.amount, null)\n          : formatCoins(returnValues.revenue, null)\n    }\n    let symbol\n    if (typeof returnValues.symbol === 'string') {\n      '0x' === returnValues.symbol.substring(0, 2)\n        ? (symbol = hexToString(returnValues.symbol.substring(2)))\n        : (symbol = returnValues.symbol)\n    } else {\n      for (let i = 0; i < returnValues.symbol.length; ++i) {\n        symbol += String.fromCharCode(returnValues.symbol[i])\n      }\n    }\n    return {\n      address,\n      type: event,\n      blockNumber: new BigNumber(blockNumber),\n      logIndex,\n      transactionHash,\n      transactionIndex,\n      params: returnValues,\n      key,\n      ethvalue,\n      drgvalue,\n      symbol: symbol\n    }\n  }\n\n  // Getting all BuyVault and selDrago events since block 0.\n  // dragoFactoryEventsSignatures accesses the contract ABI, gets all the events and for each creates a hex signature\n  // to be passed to getAllLogs. Events are indexed and filtered by topics\n  // more at: http://solidity.readthedocs.io/en/develop/contracts.html?highlight=event#events\n\n  // The second param of the topics array is the drago address\n  // The third param of the topics array is the from address\n  // The third param of the topics array is the to address\n  //\n  //  https://github.com/RigoBlock/Books/blob/master/Solidity_01_Events.MD\n\n  const hexPoolAddress = '0x' + poolAddress.substr(2).padStart(64, '0')\n  const hexAccounts = accounts.map(account => {\n    const hexAccount = '0x' + account.address.substr(2).padStart(64, '0')\n    return hexAccount\n  })\n\n  const getChunkedEvents = topics => {\n    let arrayPromises = []\n    return web3.eth.getBlockNumber().then(async lastBlock => {\n      let chunck = 250000\n      lastBlock = new BigNumber(lastBlock).toNumber()\n      const chunks = await getBlockChunks(fromBlock, lastBlock, chunck)\n      arrayPromises = chunks.map(async chunk => {\n        // Pushing chunk logs into array\n        let options = {\n          topics: topics,\n          fromBlock: chunk.fromBlock,\n          toBlock: chunk.toBlock\n        }\n        return await poolApi.contract.vaulteventful.getAllLogs(options)\n      })\n\n      return Promise.all(arrayPromises).then(results => {\n        let logs = [].concat(...results)\n        return logs.map(logToEvent)\n      })\n    })\n  }\n\n  let eventsFilterBuySell\n\n  if (options.trader) {\n\n    eventsFilterBuySell = [\n      [contract.hexSignature.BuyVault, contract.hexSignature.SellVault],\n      [hexPoolAddress],\n      hexAccounts,\n      null\n    ]\n  } else {\n\n    eventsFilterBuySell = [\n      [\n        contract.hexSignature.BuyVault,\n        contract.hexSignature.SellVault,\n        contract.hexSignature.VaultCreated\n      ],\n      [hexPoolAddress],\n      null,\n      null\n    ]\n  }\n\n  let promisesEvents = [getChunkedEvents(eventsFilterBuySell)]\n\n  return Promise.all(promisesEvents)\n    .then(logs => {\n      let dragoTransactionsLogs = logs[0].slice(\n        logs[0].length - options.limit,\n        logs[0].length\n      )\n      return dragoTransactionsLogs\n    })\n    .then(logs => {\n      // Creating an array of promises that will be executed to add timestamp to each entry\n      // Doing so because for each entry we need to make an async call to the client\n      // For additional refernce: https://stackoverflow.com/questions/39452083/using-promise-function-inside-javascript-array-map\n      let logPromises = logs.map(async log => {\n        return web3.eth\n          .getBlock(new BigNumber(log.blockNumber).toFixed(0))\n          .then(block => {\n            log.timestamp = new Date(block.timestamp * 1000)\n            return log\n          })\n          .catch(error => {\n            // Sometimes Infura returns null for api.eth.getBlockByNumber, therefore we are assigning a fake timestamp to avoid\n            // other issues in the app.\n\n            log.timestamp = new Date()\n            return log\n          })\n      })\n      return Promise.all(logPromises).then(results => {\n        results.sort(function (x, y) {\n          return y.timestamp - x.timestamp\n        })\n        console.log(\n          `getTransactionsSingleVault -> Single Vault Transactions list loaded: trader ${options.trader}`\n        )\n        return results\n      })\n    })\n}\n","import { formatCoins } from './../format'\nimport { getBlockChunks } from '../blockChain/getBlockChunks'\nimport { getFromBlock, getWeb3 } from '../../_utils/misc'\nimport { getTransactionsSingleVault } from './getTransactionsSingleVault'\nimport { logToEvent } from '../blockChain/logToEvent'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport moment from 'moment'\n\nexport const getTransactionsVaultOptV2 = async (\n  networkInfo,\n  poolAddress,\n  accounts = [],\n  options = {\n    balance: true,\n    supply: false,\n    limit: 20,\n    trader: true,\n    drago: false\n  }\n) => {\n  // debugger\n  if (poolAddress)\n    return getTransactionsSingleVault(\n      poolAddress,\n      networkInfo,\n      accounts,\n      options\n    )\n  let startTime = new Date()\n  if (accounts.length === 0) {\n    return [Array(0), Array(0), Array(0)]\n  }\n\n  const web3 = getWeb3(networkInfo)\n  let fromBlock = getFromBlock(networkInfo)\n\n  const poolApi = new PoolApi(web3)\n  let dragoSymbolRegistry = new Map()\n\n  console.log(\n    `***** ${moment().format()} Utils: ${\n      options.drago ? 'DRAGO' : 'VAULT'\n    } events fetching started *****`\n  )\n\n  const logToEventInternal = log => {\n    return logToEvent(log, dragoSymbolRegistry)\n  }\n\n  // Getting all buyDrago and selDrago events since block 0.\n  // dragoFactoryEventsSignatures accesses the contract ABI, gets all the events and for each creates a hex signature\n  // to be passed to getAllLogs. Events are indexed and filtered by topics\n  // more at: http://solidity.readthedocs.io/en/develop/contracts.html?highlight=event#events\n\n  // The second param of the topics array is the drago address\n  // The third param of the topics array is the from address\n  // The third param of the topics array is the to address\n  //\n  //  https://github.com/RigoBlock/Books/blob/master/Solidity_01_Events.MD\n\n  let hexAccounts = null\n  let hexPoolAddress = null\n  if (poolAddress)\n    hexPoolAddress = ['0x' + poolAddress.substr(2).padStart(64, '0')]\n  // Formatting accounts address\n  if (accounts !== null) {\n    hexAccounts = accounts.map(account => {\n      const hexAccount = '0x' + account.address.substr(2).padStart(64, '0')\n      return hexAccount\n    })\n  }\n\n  const getPoolsFromOwner = async () => {\n    let arrayPromises = accounts.map(async account => {\n      await poolApi.contract.vaultfactory.init()\n      const poolsList = await poolApi.contract.vaultfactory\n        .getVaultsByAddress(account.address)\n        .then(results => {\n          return results\n        })\n        .catch(error => {\n          console.warn(error)\n          throw error\n        })\n      poolsList.forEach(v => {\n        const dragoData = {\n          symbol: null,\n          vaultId: null,\n          name: null,\n          address: v\n        }\n        if (!dragoSymbolRegistry.has(v)) {\n          dragoSymbolRegistry.set(v, dragoData)\n        }\n      })\n      return poolsList\n    })\n    return Promise.all(arrayPromises)\n  }\n\n  if (options.trader) {\n  } else {\n    await getPoolsFromOwner()\n  }\n\n  // Initializing the eventful contract\n  return poolApi.contract.dragoregistry.init().then(() => {\n    return poolApi.contract.vaulteventful.init().then(() => {\n      const getChunkedEvents = topics => {\n        let arrayPromises = []\n        return web3.eth.getBlockNumber().then(async lastBlock => {\n          let chunck = 250000\n          lastBlock = new BigNumber(lastBlock).toNumber()\n          const chunks = await getBlockChunks(fromBlock, lastBlock, chunck)\n          arrayPromises = chunks.map(async chunk => {\n            // Pushing chunk logs into array\n            let options = {\n              topics: topics,\n              fromBlock: chunk.fromBlock,\n              toBlock: chunk.toBlock\n            }\n            return await poolApi.contract.vaulteventful.getAllLogs(options)\n          })\n\n          return Promise.all(arrayPromises).then(results => {\n            if (options.trader) {\n            } else {\n            }\n            let dragoTransactionsLog = [].concat(...results)\n            const logs = dragoTransactionsLog.map(logToEventInternal)\n            return logs\n          })\n        })\n      }\n\n      let eventSig\n      eventSig = options.drago\n        ? [\n            poolApi.contract.vaulteventful.hexSignature.BuyDrago,\n            poolApi.contract.vaulteventful.hexSignature.SellDrago\n          ]\n        : [\n            poolApi.contract.vaulteventful.hexSignature.BuyVault,\n            poolApi.contract.vaulteventful.hexSignature.SellVault\n          ]\n\n      let topicsBuySell = [eventSig, hexPoolAddress, hexAccounts, null]\n\n      eventSig = options.drago\n        ? [poolApi.contract.vaulteventful.hexSignature.DragoCreated]\n        : [poolApi.contract.vaulteventful.hexSignature.VaultCreated]\n\n      let topicsCreate = [eventSig, hexPoolAddress, null, hexAccounts]\n\n      let promisesEvents = null\n\n      options.trader\n        ? (promisesEvents = [getChunkedEvents(topicsBuySell)])\n        : (promisesEvents = [getChunkedEvents(topicsCreate)])\n\n      return Promise.all(promisesEvents)\n        .then(results => {\n          let allLogs = [...results[0]]\n          // Creating an array of promises that will be executed to add timestamp and symbol to each entry\n          // Doing so because for each entry we need to make an async call to the client\n          // For additional refernce: https://stackoverflow.com/questions/39452083/using-promise-function-inside-javascript-array-map\n          // console.log(results)\n\n          function compare(a, b) {\n            // Use toUpperCase() to ignore character casing\n            const bloclNumberA = a.blockNumber\n            const bloclNumberB = b.blockNumber\n\n            let comparison = 0\n            if (bloclNumberA.gt(bloclNumberB)) {\n              comparison = 1\n            } else if (bloclNumberA.lt(bloclNumberB)) {\n              comparison = -1\n            }\n            return comparison\n          }\n          let supply = []\n          let balances = []\n          let balancesList = []\n          allLogs.sort(compare)\n          let dragoTransactionsLogs = allLogs.slice(\n            allLogs.length - 20,\n            allLogs.length\n          )\n\n          // This is an inefficient way to get the symbol for each transactions.\n          // In the future the symbol will have to be saved in the eventful logs.\n          const getDragoDetails = () => {\n            let arrayPromises = []\n            dragoSymbolRegistry.forEach((v, k) => {\n              arrayPromises.push(\n                poolApi.contract.dragoregistry\n                  .fromAddress(k)\n                  .then(dragoDetails => {\n                    const dragoData = {\n                      symbol: dragoDetails[2].trim(),\n                      vaultId: new BigNumber(dragoDetails[3]).toFixed(),\n                      name: dragoDetails[1].trim(),\n                      address: k.trim()\n                    }\n                    dragoSymbolRegistry.set(k, dragoData)\n                    return dragoDetails\n                  })\n                  .catch(error => {\n                    console.warn(error)\n                    throw error\n                  })\n              )\n            })\n            return arrayPromises\n          }\n\n          // Getting dragos supply\n          const getDragoSupply = () => {\n            let arrayPromises = []\n            if (options.supply === false) {\n              supply = []\n              return arrayPromises\n            }\n            dragoSymbolRegistry.forEach((v, k) => {\n              poolApi.contract.vault.init(k)\n              arrayPromises.push(\n                poolApi.contract.vault\n                  .totalSupply()\n                  .then(dragoSupply => {\n                    const {\n                      symbol,\n                      name,\n                      vaultId,\n                      address\n                    } = dragoSymbolRegistry.get(k)\n                    supply.push({\n                      supply: formatCoins(new BigNumber(dragoSupply), 4),\n                      name: name.trim(),\n                      symbol: symbol,\n                      vaultId: vaultId,\n                      address: address\n                    })\n                  })\n                  .catch(error => {\n                    console.warn(error)\n                    throw error\n                  })\n              )\n            })\n            return arrayPromises\n          }\n\n          // Getting dragos balances\n          const getDragoBalances = () => {\n            let arrayPromises = []\n            // Checking if balance return is required\n            if (options.balance === false) {\n              balances = []\n              return arrayPromises\n            }\n            accounts.forEach(account => {\n              let accountAddress = account.address\n              balances[accountAddress] = []\n              dragoSymbolRegistry.forEach((v, k) => {\n                poolApi.contract.vault.init(k)\n                arrayPromises.push(\n                  poolApi.contract.vault\n                    .balanceOf(accountAddress)\n                    .then(dragoBalance => {\n                      const {\n                        symbol,\n                        name,\n                        vaultId,\n                        address\n                      } = dragoSymbolRegistry.get(k)\n                      balances[accountAddress][vaultId] = {\n                        balance: new BigNumber(dragoBalance),\n                        name: name.trim(),\n                        symbol: symbol,\n                        vaultId: vaultId,\n                        address: address\n                      }\n                    })\n                    .catch(error => {\n                      console.warn(error)\n                      throw error\n                    })\n                )\n              })\n            })\n            return arrayPromises\n          }\n\n          const getTimestamp = logs => {\n            return logs.map(log => {\n              return web3.eth\n                .getBlock(new BigNumber(log.blockNumber).toFixed(0))\n                .then(block => {\n                  log.timestamp = new Date(block.timestamp * 1000)\n                  return log\n                })\n                .catch(() => {\n                  // Sometimes Infura returns null for api.eth.getBlockByNumber, therefore we are assigning a fake timestamp to avoid\n                  // other issues in the app.\n                  log.timestamp = new Date(0)\n                  return log\n                })\n            })\n          }\n\n          return Promise.all(getDragoDetails()).then(() => {\n            return Promise.all(getDragoSupply()).then(() => {\n              return Promise.all(getDragoBalances())\n                .then(() => {\n                  if (options.balance) {\n                    // Reorganizing the balances array\n                    let balancesRegistry = new Map()\n                    let tokenBalances = []\n                    for (let v in balances) {\n                      balances[v].forEach(balance => {\n                        if (balancesRegistry.has(balance.vaultId)) {\n                          let dragoBalance = balancesRegistry.get(\n                            balance.vaultId\n                          ).balance\n                          balancesRegistry.set(balance.vaultId, {\n                            symbol: balance.symbol,\n                            vaultId: balance.vaultId,\n                            name: balance.name,\n                            address: balance.address,\n                            balance: dragoBalance.plus(balance.balance)\n                          })\n                        } else {\n                          balancesRegistry.set(balance.vaultId, {\n                            symbol: balance.symbol,\n                            vaultId: balance.vaultId,\n                            name: balance.name,\n                            address: balance.address,\n                            balance: balance.balance\n                          })\n                        }\n                      })\n                    }\n                    balancesRegistry.forEach((v, k) => {\n                      // Filtering empty balances\n                      if (balancesRegistry.get(k).balance.gt(0)) {\n                        tokenBalances.push({\n                          symbol: balancesRegistry.get(k).symbol,\n                          name: balancesRegistry.get(k).name,\n                          vaultId: balancesRegistry.get(k).vaultId,\n                          address: balancesRegistry.get(k).address,\n                          balance: formatCoins(\n                            balancesRegistry.get(k).balance,\n                            4\n                          )\n                        })\n                      }\n                    })\n\n                    balancesList = tokenBalances\n                  }\n                })\n                .then(() => {\n                  let logs = dragoTransactionsLogs\n                  // console.log(\n                  //   `***** ${moment().format()} Utils: symbols loaded *****`\n                  // )\n                  return Promise.all(getTimestamp(logs)).then(logs => {\n                    // console.log(\n                    //   `***** ${moment().format()} Utils: events timestamp fetched *****`\n                    // )\n                    balancesList.sort(function(a, b) {\n                      if (a.symbol < b.symbol) return -1\n                      if (a.symbol > b.symbol) return 1\n                      return 0\n                    })\n                    logs.reverse()\n                    supply.sort(function(a, b) {\n                      if (a.symbol < b.symbol) return -1\n                      if (a.symbol > b.symbol) return 1\n                      return 0\n                    })\n                    let results = [balancesList, logs, supply]\n                    return results\n                  })\n                })\n                .catch(error => {\n                  console.warn(error)\n                  throw error\n                })\n            })\n          })\n        })\n        .then(results => {\n          let endTime = new Date()\n          let dif = startTime.getTime() - endTime.getTime()\n          let Seconds_from_T1_to_T2 = dif / 1000\n          let Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2)\n          if (options.trader) {\n            console.log(\n              `***** ${moment().format()} Utils: ${\n                options.drago ? 'DRAGO' : 'VAULT'\n              }${\n                options.allEvents ? ' allEvents ' : ' '\n              }Holder transactions loaded in ${Seconds_Between_Dates}s *****`\n            )\n          } else {\n            console.log(\n              `***** ${moment().format()} Utils: ${\n                options.drago ? 'DRAGO' : 'VAULT'\n              }${\n                options.allEvents ? ' allEvents ' : ' '\n              }Manager transactions loaded in ${Seconds_Between_Dates}s *****`\n            )\n          }\n\n          return results\n        })\n    })\n  })\n}\n","import BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\n\nexport const getTokenWrapperLockTime = async (\n  web3,\n  tokenAddress,\n  accountAddress\n) => {\n  const poolApi = new PoolApi(web3)\n  await poolApi.contract.tokenwrapper.init(tokenAddress)\n  const depositLockTime = await poolApi.contract.tokenwrapper.depositLock(\n    accountAddress\n  )\n  return new BigNumber(depositLockTime).toFixed()\n}\n","// import * as abis from '../PoolsApi/src/contracts/abi'\nimport { getTokenWrapperLockTime } from './getTokenWrapperLockTime'\nimport BigNumber from 'bignumber.js'\nimport PoolApi from '../../PoolsApi/src'\nimport Web3Wrapper from '../web3Wrapper/src'\n\nexport const getDragoLiquidityAndTokenBalances = async (\n  dragoAddress,\n  networkInfo,\n  selectedTokensPair,\n  exchange\n) => {\n  let web3 = Web3Wrapper.getInstance(networkInfo.id)\n  const poolApi = new PoolApi(web3)\n  poolApi.contract.drago.init(dragoAddress)\n  let { baseTokenLockWrapExpire, quoteTokenLockWrapExpire } = selectedTokensPair\n\n  // ETH BALANCE\n  let dragoETHBalance = poolApi.contract.drago.getBalance()\n  // dragoZRXBalance: await poolApi.contract.drago.getBalanceZRX(),\n\n  // TOKEN BALANCES\n  let baseTokenBalance =\n    selectedTokensPair.baseToken.address !== '0x0'\n      ? poolApi.contract.drago.getPoolBalanceOnToken(\n          selectedTokensPair.baseToken.address\n        )\n      : dragoETHBalance\n\n  let quoteTokenBalance =\n    selectedTokensPair.quoteToken.address !== '0x0'\n      ? poolApi.contract.drago.getPoolBalanceOnToken(\n          selectedTokensPair.quoteToken.address\n        )\n      : dragoETHBalance\n\n  // WRAPPERS BALANCES\n  let baseTokenWrapperBalance = () => new BigNumber(0)\n  let quoteTokenWrapperBalance = () => new BigNumber(0)\n  if (exchange.isTokenWrapper) {\n    // Getting token wrapper balance\n    baseTokenWrapperBalance = poolApi.contract.drago.getPoolBalanceOnToken(\n      selectedTokensPair.baseToken.wrappers[exchange.name].address\n    )\n    quoteTokenWrapperBalance = poolApi.contract.drago.getPoolBalanceOnToken(\n      selectedTokensPair.quoteToken.wrappers[exchange.name].address\n    )\n    // Getting token wrapper lock time\n    baseTokenLockWrapExpire = getTokenWrapperLockTime(\n      web3,\n      selectedTokensPair.baseToken.wrappers[exchange.name].address,\n      dragoAddress\n    )\n\n    // console.log(\n    //   `Exp base token: ${moment\n    //     .unix(baseTokenLockWrapExpire)\n    //     .format('MMMM Do YYYY, h:mm:ss a')}`\n    // )\n    quoteTokenLockWrapExpire = getTokenWrapperLockTime(\n      web3,\n      selectedTokensPair.quoteToken.wrappers[exchange.name].address,\n      dragoAddress\n    )\n    //   console.log(\n    //   `Exp quote token: ${moment\n    //     .unix(quoteTokenLockWrapExpire)\n    //     .format('MMMM Do YYYY, h:mm:ss a')}`\n    // )\n  }\n  try {\n    ;[\n      dragoETHBalance,\n      baseTokenBalance,\n      baseTokenWrapperBalance,\n      quoteTokenBalance,\n      quoteTokenWrapperBalance,\n      baseTokenLockWrapExpire,\n      quoteTokenLockWrapExpire\n    ] = await Promise.all([\n      dragoETHBalance,\n      baseTokenBalance,\n      baseTokenWrapperBalance,\n      quoteTokenBalance,\n      quoteTokenWrapperBalance,\n      baseTokenLockWrapExpire,\n      quoteTokenLockWrapExpire\n    ])\n  } catch (e) {\n    throw new Error(e)\n  }\n\n  const liquidity = {\n    dragoETHBalance: new BigNumber(dragoETHBalance),\n    // dragoZRXBalance: await poolApi.contract.drago.getBalanceZRX(),\n    baseTokenBalance: new BigNumber(baseTokenBalance),\n    baseTokenWrapperBalance: new BigNumber(baseTokenWrapperBalance),\n    quoteTokenBalance: new BigNumber(quoteTokenBalance),\n    quoteTokenWrapperBalance: new BigNumber(quoteTokenWrapperBalance),\n    baseTokenLockWrapExpire: baseTokenLockWrapExpire,\n    quoteTokenLockWrapExpire: quoteTokenLockWrapExpire\n  }\n  return liquidity\n}\n","export const filterPools = (poolsList, filter, poolType) => {\n  const list = Object.values(poolsList.list)\n  list.sort(function(a, b) {\n    if (a.details.symbol < b.details.symbol) return -1\n    if (a.details.symbol > b.details.symbol) return 1\n    return 0\n  })\n  const filterValue = filter.trim().toLowerCase()\n  const filterLength = filterValue.length\n  return filterLength === 0\n    ? list.filter(item => item.details.poolType === poolType)\n    : list.filter(\n        item =>\n          (item.details.name.toLowerCase().slice(0, filterLength) ===\n            filterValue ||\n            item.details.symbol.toLowerCase().slice(0, filterLength) ===\n              filterValue) &&\n          item.details.poolType === poolType\n      )\n}\n","import { getWeb3 } from '../misc'\nimport PoolApi from '../../PoolsApi/src'\n\nexport const getPoolsGroupDetails = async (poolsIdArray, networkInfo) => {\n  const web3 = getWeb3(networkInfo)\n  const poolApi = new PoolApi(web3)\n  await poolApi.contract.dragoregistry.init()\n  const poolsArray = await poolApi.contract.dragoregistry.queryMultiDataFromId(\n    poolsIdArray\n  )\n  return poolsArray\n}\n","export * from './getTransactionsDragoOptV2'\nexport * from './getTransactionsSingleDrago'\nexport * from './getDragoDetails'\nexport * from './getVaultDetails'\nexport * from './getTransactionsVaultOptV2'\nexport * from './getTransactionsSingleVault'\nexport * from './getDragoLiquidityAndTokenBalances'\nexport * from './getTokenWrapperLockTime'\nexport * from './filterPools'\nexport * from './getPoolsGroupDetails'\n"],"sourceRoot":""}